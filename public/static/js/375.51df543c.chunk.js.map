{"version":3,"sources":["views/custom/editUserInfo.js"],"names":["MySwal","withReactContent","Swal","EditUserInfo","history","useHistory","userID","useParams","_useState","useState","value","label","_useState2","_slicedToArray","userTypeData","setuserTypeData","_useState3","_useState4","userTitleData","setuserTitleData","_useState5","_useState6","storeList","setStoreList","_useState7","_useState8","loading","setloading","_useState9","_useState10","submitLoading","_useState11","_useState12","userData","setUserData","_useState13","userType","userTitle","storeName","email","_useState14","error","seterror","useEffect","useJwt","userRoleList","then","res","userTypeApi","data","payload","map","type","id","statusdesc","catch","err","console","log","response","userTitleList","userTitleApi","adminUserDetails","modifydata","splitdata","fullname","split","firstname","length","lastname","emailid","roleid","rolename","adminstatus","storename","adminstore","storeid","title","titleinfo","titleid","storeApi","onChange","e","chkEmail","test","target","name","_objectSpread","CurrentData","_jsx","_Fragment","children","_jsxs","Skeleton","active","Button","Ripple","className","color","tag","Link","to","ChevronLeft","size","Card","CardHeader","CardBody","style","paddingTop","Form","width","onSubmit","preventDefault","concat","adminUserEdit","fire","icon","text","customClass","confirmButton","setTimeout","replace","autoComplete","Col","sm","FormGroup","Label","for","Input","required","placeholder","fontSize","Select","theme","selectThemeColors","classNamePrefix","defaultValue","option","_ref3","action","newData","options","isClearable","isLoading","_ref","_ref2","disabled","marginTop","Spinner"],"mappings":"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","file":"static/js/375.51df543c.chunk.js","sourcesContent":["import { Fragment, useState, forwardRef, useEffect } from 'react'\nimport { Link, useHistory, useParams } from 'react-router-dom'\nimport Select from 'react-select'\nimport { selectThemeColors, transformInToFormObject } from '@utils'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronLeft, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock } from 'react-feather'\nimport { Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody } from 'reactstrap'\nimport { Tag, Skeleton } from 'antd'\nimport 'antd/dist/antd.css'\n// import { Error, Success } from '../../../viewhelper'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\n\nconst EditUserInfo = () => {\n    const history = useHistory()\n    const { userID } = useParams()\n    const [userTypeData, setuserTypeData] = useState([{ value: \"\", label: \"\" }])\n    const [userTitleData, setuserTitleData] = useState([{ value: \"\", label: \"\" }])\n    const [storeList, setStoreList] = useState([])\n    const [loading, setloading] = useState(true)\n    const [submitLoading, setSubmitLoading] = useState(false)\n    const [userData, setUserData] = useState({})\n    // const [userInput, setUserInput] = useState({})\n    const [error, seterror] = useState({\n        userType: false,\n        userTitle: false,\n        storeName: false,\n        email: false\n    })\n\n\n    useEffect(() => {\n        useJwt.userRoleList().then(res => {\n            // console.log(res.data.payload)\n            const userTypeApi = res.data.payload.map(type => {\n                return { value: type.id, label: type.statusdesc }\n            })\n            setuserTypeData(userTypeApi)\n        }).catch(err => {\n            console.log(err.response)\n        })\n        useJwt.userTitleList().then(res => {\n            // console.log(res.data.payload)\n            const userTitleApi = res.data.payload.map(type => {\n                return { value: type.id, label: type.statusdesc }\n            })\n            setuserTitleData(userTitleApi)\n        }).catch(err => {\n            console.log(err.response)\n        })\n        useJwt.adminUserDetails({ id: userID }).then(res => {\n            const data = res.data.payload[0]\n            let modifydata = {}\n            console.log(res)\n            const splitdata = data.fullname ? data.fullname.split(' ') : [' ', ' ']\n\n            modifydata = {\n                id: data.id,\n                firstname: splitdata.length ? splitdata[0] : \"\",\n                lastname: splitdata.length === 2 ? splitdata[1] : \"\",\n                emailid: data.emailid,\n                roleid: data.roleid,\n                rolename: data.adminstatus.statusdesc,\n                storename: data.adminstore.storename,\n                storeid: data.storeid,\n                title: data.titleinfo.statusdesc,\n                titleid: data.titleinfo.id\n            }\n            setUserData(modifydata)\n            setloading(false)\n        }).catch(err => {\n            console.log(err.response)\n        })\n        useJwt.storeList().then(res => {\n            // console.log(res.data.payload)\n            const storeApi = res.data.payload.map(type => {\n                return { value: type.storeid, label: type.storename }\n            })\n            setStoreList(storeApi)\n        }).catch(err => {\n            console.log(err)\n        })\n\n    }, [])\n\n    const onChange = (e) => {\n        const chkEmail = /\\S+@\\S+\\.\\S+/.test(e.target.value)\n        if (e.target.name === 'emailid' && chkEmail) {\n            seterror({ ...error, email: false })\n        }\n        // console.log([e.target.name], e.target.value)\n        const CurrentData = { ...userData }\n        if (e.target.name === \"firstname\") {\n            CurrentData.firstname = e.target.value\n        }\n        if (e.target.name === \"lastname\") {\n            CurrentData.lastname = e.target.value\n        }\n        if (e.target.name === \"emailid\") {\n            CurrentData.emailid = e.target.value\n        }\n\n        setUserData(CurrentData)\n\n    }\n\n    const handleUserType = (option, { action }) => {\n        if (action === 'clear') {\n            const newData = { ...userData }\n            newData.roleid = null\n            setUserData(newData)\n        } else {\n            seterror({ ...error, userType: false })\n            const newData = { ...userData }\n            newData.roleid = option.value\n            setUserData(newData)\n        }\n    }\n    const handleUserTitle = (option, { action }) => {\n        if (action === 'clear') {\n            const newData = { ...userData }\n            newData.titleid = null\n            setUserData(newData)\n        } else {\n            seterror({ ...error, userTitle: false })\n            const newData = { ...userData }\n            newData.titleid = option.value\n            setUserData(newData)\n        }\n    }\n    const handleStoreName = (option, { action }) => {\n        if (action === 'clear') {\n            const newData = { ...userData }\n            newData.storeid = null\n            setUserData(newData)\n        } else {\n            seterror({ ...error, storeName: false })\n            const newData = { ...userData }\n            newData.storeid = option.value\n            setUserData(newData)\n        }\n    }\n    const onsubmit = (e) => {\n        e.preventDefault()\n        const { id, firstname, lastname, emailid, roleid, storeid, titleid } = userData\n        const chkEmail = /\\S+@\\S+\\.\\S+/.test(emailid)\n        const err = { ...error }\n        !chkEmail ? err.email = true : err.email = false\n        !roleid ? err.userType = true : err.userType = false\n        !titleid ? err.userTitle = true : err.userTitle = false\n        !storeid ? err.storeName = true : err.storeName = false\n        seterror(err)\n        if (!chkEmail) {\n            return\n        }\n        const fullname = `${firstname} ${lastname}`\n        // console.log({ id, fullname, roleid, emailid, storeid, title: titleid })\n        if (roleid && storeid && titleid) {\n            useJwt.adminUserEdit({ id, fullname, roleid, emailid, storeid, title: titleid }).then(res => {\n                console.log(res)\n                MySwal.fire({\n                    icon: 'success',\n                    title: 'Done!',\n                    text: 'The Staff Info has been updated.',\n                    customClass: {\n                        confirmButton: 'btn btn-success'\n                    }\n                })\n                setTimeout(function () { history.replace('/user') }, 1000)\n            }).catch(err => {\n                console.log(err)\n            })\n        }\n        // else {\n        //     MySwal.fire({\n        //         icon: 'warning',\n        //         title: 'Failed',\n        //         text: '\"Storename\" \"Usertype\" \"Usertitle\" must not be Empty!',\n        //         customClass: {\n        //             confirmButton: 'btn btn-danger'\n        //         }\n        //     })\n        // }\n    }\n    return (\n        <>\n            {loading ? <> <Skeleton active /> <Skeleton active />\n            </> : <>\n                <Button.Ripple className='ml-2 mb-2' color='primary' tag={Link} to='/user'>\n                    <ChevronLeft size={10} />\n                    <span className='align-middle ml-50'>Back to staff list</span>\n                </Button.Ripple>\n                <Card>\n                    <CardHeader className='border-bottom'>\n                        <h5>Update Staff Info</h5>\n                    </CardHeader>\n                    <CardBody style={{ paddingTop: '15px' }}>\n                        <Form className=\"row\" style={{ width: '100%' }} onSubmit={onsubmit} autoComplete=\"off\">\n\n                            <Col sm=\"3\" >\n                                <FormGroup>\n                                    <Label for=\"firstName\">First Name <span style={{ color: 'red' }}>*</span></Label>\n                                    <Input type=\"text\" name=\"firstname\"\n                                        id='firstName' required placeholder=\"firstName\"\n                                        value={userData.firstname}\n                                        onChange={onChange}\n\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col sm=\"3\" >\n                                <FormGroup>\n                                    <Label for=\"lastName\">Last Name <span style={{ color: 'red' }}>*</span></Label>\n                                    <Input type=\"text\" name=\"lastname\"\n                                        id='lastName' onChange={onChange} required\n                                        placeholder=\"lastName\"\n                                        value={userData.lastname}\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col sm=\"3\" >\n                                <FormGroup>\n                                    <Label for=\"Email\">Email <span style={{ color: 'red' }}>*</span></Label>&nbsp;{error.email && <span style={{ color: 'red', fontSize: '11px' }}> is not valid</span>}\n                                    <Input type=\"email\" name=\"emailid\"\n                                        id='Email' onChange={onChange}\n                                        placeholder=\"Email\" value={userData.emailid}\n\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col sm=\"3\" >\n                                <FormGroup>\n                                    <Label for=\"StoreName\">Store Name<span style={{ color: 'red' }}>*</span></Label>&nbsp;{error.storeName && <span style={{ color: 'red', fontSize: '11px' }}>Required</span>}\n                                    <Select\n                                        theme={selectThemeColors}\n                                        className='react-select'\n                                        classNamePrefix='select'\n                                        name=\"StoreName\"\n                                        defaultValue={{ label: userData.storename, value: userData.storeid }}\n                                        onChange={handleStoreName}\n                                        options={storeList}\n                                        isClearable\n                                        isLoading={false}\n                                    />\n\n                                </FormGroup>\n                            </Col>\n\n                            <Col sm=\"3\" >\n                                <FormGroup>\n                                    <Label for=\"UserType\">User Type<span style={{ color: 'red' }}>*</span></Label>&nbsp;{error.userType && <span style={{ color: 'red', fontSize: '11px' }}>Required</span>}\n                                    <Select\n                                        theme={selectThemeColors}\n                                        className='react-select'\n                                        classNamePrefix='select'\n                                        defaultValue={{ label: userData.rolename, value: userData.roleid }}\n                                        name=\"UserType\"\n                                        onChange={handleUserType}\n                                        options={userTypeData}\n                                        isClearable\n                                        isLoading={false}\n                                    />\n\n                                </FormGroup>\n                            </Col>\n\n                            <Col sm=\"3\" >\n                                <FormGroup>\n                                    <Label for=\"UserTitle\">User Title<span style={{ color: 'red' }}>*</span></Label>&nbsp;{error.userTitle && <span style={{ color: 'red', fontSize: '11px' }}>Required</span>}\n                                    <Select\n                                        theme={selectThemeColors}\n                                        className='react-select'\n                                        classNamePrefix='select'\n                                        name=\"UserTitle\"\n                                        defaultValue={{ label: userData.title, value: userData.titleid }}\n                                        onChange={handleUserTitle}\n                                        options={userTitleData}\n                                        isClearable\n                                        isLoading={false}\n                                    />\n\n                                </FormGroup>\n                            </Col>\n\n                            <Col sm=\"3\" >\n                                {\n                                    submitLoading ? <Button.Ripple color='primary' className='mr-1' disabled style={{ marginTop: '25px' }}>\n                                        <Spinner color='white' size='sm' />\n                                        <span className='ml-50'>Loading...</span>\n                                    </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' type=\"submit\" style={{ marginTop: '25px' }}>\n                                        <span className='align-middle ml-50'>Update</span>\n                                    </Button.Ripple>\n                                }\n                            </Col>\n                        </Form>\n                    </CardBody>\n                </Card> </>}\n        </>\n    )\n}\n\nexport default EditUserInfo"],"sourceRoot":""}