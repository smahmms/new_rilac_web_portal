{"version":3,"sources":["views/tables/data-tables/cashier/Pay4.js","views/viewhelper.js","views/statusdb.js"],"names":["MySwal","withReactContent","Swal","options","chart","toolbar","show","dataLabels","enabled","legend","labels","stroke","width","colors","grid","padding","right","bottom","left","plotOptions","pie","startAngle","donut","name","offsetY","value","formatter","val","concat","parseFloat","total","label","w","Pay4","payID","useParams","history","useHistory","_useState","useRef","useState","_useState2","_slicedToArray","isloading","setisloading","_useState3","_useState4","types","setTypes","_useState5","_useState6","series","setseries","_useState7","_useState8","paymenttype","setpaymenttype","_useState9","useContext","ThemeColors","_useState10","businessinfo","setbusinessinfo","_useState11","_useState12","invoiceinfo","setinvoiceinfo","_useState13","_useState14","invoices","setinvoices","_useState15","_useState16","checkinvoiceids","setcheckinvoiceids","_useState17","_useState18","selectinvoiceids","setselectinvoiceids","_useState19","_useState20","allcheck","setallcheck","_useState21","_useState22","totalamount","settotalamount","_useState23","_useState24","invoiceloading","setinvoiceloading","_useState25","_useState26","enetramount","setenteramount","_useState27","_useState28","dueamount","setdueamount","_useState29","_useState30","ischeckdisabled","setischeckdisabled","_useState31","_useState32","submitenable","setsubmitenable","_useState33","_useState34","paymentdata","setpaymentdata","_useState35","_useState36","subpaymentloading","setsubpaymentloading","_useState37","_useState38","totalinvoiceloading","settotalinvoiceloading","_useState39","_useState40","errormsg","seterrormsg","_useState41","_useState42","Allowance","setAllowance","_useState43","_useState44","_useState45","_useState46","modal","setModal","_useState47","_useState48","MobilePaymentModal","setMobilePaymentModal","_useState49","_useState50","CardPaymentModal","setCardPaymentModal","_useState51","_useState52","MinputErr","setMinputErr","_useState53","_useState54","setserverselectedinvoiceinfo","_useState55","_useState56","anypaymentisinloadingmode","setanypaymentisinloadingmode","_useState57","_useState58","isrefreshing","setisrefreshing","_useState59","_useState60","subpaymentamount","setsubpaymentamount","_useState61","_useState62","resend","setresend","_useState63","_useState64","subpaymentid","setsubpaymentid","_useState65","_useState66","autoreloadingongoing","setautoreloadingongoing","_useState67","_useState68","seintervalfnc","_useState69","_useState70","autoreloadingonprocess","setautoreloadingonprocess","paymentRefresh","if_refresh","arguments","length","undefined","useJwt","customerinvoicedetailswithsubpaymentinfo","receipt_id","then","res","_res$data$payload$inv","data","payload","invoicepaymentinfo","ispaymentinpending","map","item","index","amount","payment_success","id","time","Date","toLocaleString","typename","type_name","payment_type_id","type_id","console","log","clearInterval","window","customTimeInterval","catch","err","Error","subpaymentsectionautoreloadon","inter","setInterval","useEffect","_res$data$payload","_res$data$payload$bus","_res$data$payload$inv2","_res$data$payload$inv3","_res$data$payload$sel","selectedinvoiceinfo","_invoiceinfo$invoices","alreadypaid","convertinnumber","invoiceids","subtotal","forEach","row_id","subtotal_amount","includes","toFixed","due","iouused","iou_used","ioulimit","iou_limit","usepercent","useremaining","getAllPaymentType","paymenttypeselected","typeid","deletesubpayment","fire","_defineProperty","title","text","icon","allowOutsideClick","allowEscapeKey","showCancelButton","showLoaderOnConfirm","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","preConfirm","deleteSubPayment","response","isLoading","result","isConfirmed","updatedfilteredData","filter","Number","_objectSpread","Math","abs","ishavependingmode","every","v","removedeleteitem","tenderedAmount","thousandSeparator","x","toString","replace","checkboxclick","e","due_amount","target","checked","_toConsumableArray","PaymentTable","_jsxs","Fragment","children","_jsx","Spinner","color","className","style","fontSize","Button","Ripple","size","onClick","paddingLeft","Table","responsive","bordered","scope","Check","resendnotificationforpay","Success","CURRENCY_SYMBOL","Trash","cursor","InvoiceTable","CustomInput","disabled","inline","type","onChange","Badge","StatusSet","pill","_Fragment","goBack","ChevronLeft","Row","Col","sm","Card","Media","Avatar","TrendingUp","body","CardText","TrendingDown","md","payment_type_name","Form","autoComplete","onSubmit","preventDefault","typeinfo","sinvo","i","subPayment","selectdinvoiceid","setTimeout","FormGroup","Label","Input","min","placeholder","step","presicion","Modal","isOpen","toggle","ModalHeader","ModalBody","change","busnessid","customerIOUmanage","InputGroup","InputGroupAddon","addonType","InputGroupText","margin","display","textAlign","paid_invoice_ids","all_invoice_ids","apibaseurl","API_BASE_URL","totalInvoicePayment","push","Chart","height","status","toast","error","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","ErrorMessage","errors","Object","keys","success","voucherstatus","operationstatus","Insert","Update","Delete","INSERT","UPDATE","DELETE","statusid","VoucherStatusSet","OperationStatusSet"],"mappings":"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","file":"static/js/346.57a2cd9e.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState, forwardRef, useEffect, useContext, useRef } from 'react'\nimport { Link, useHistory, useParams } from 'react-router-dom'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, ChevronLeft, Trash, TrendingDown, TrendingUp, Check, RefreshCw, RotateCw } from 'react-feather'\nimport { selectThemeColors, transformInToFormObject } from '@utils'\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\nimport {\n  Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu,\n  DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner,\n  CardBody, Table, CustomInput, Modal, ModalHeader, ModalBody, ModalFooter, Media, CardText, UncontrolledTooltip\n} from 'reactstrap'\nimport Avatar from '@components/avatar'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport './cashierStyles/payment.css'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport { Error, Success, ErrorMessage } from '../../../viewhelper'\nconst MySwal = withReactContent(Swal)\nimport Chart from 'react-apexcharts'\nimport { StatusSet } from '../../../statusdb'\nimport InputGroup from 'reactstrap/lib/InputGroup'\nimport InputGroupAddon from 'reactstrap/lib/InputGroupAddon'\nimport InputGroupText from 'reactstrap/lib/InputGroupText'\n\nconst success = '#4BB543'\nconst options = {\n  chart: {\n    toolbar: {\n      show: false\n    }\n  },\n  dataLabels: {\n    enabled: false\n  },\n  legend: { show: true }, //ggg\n  // comparedResult: [2, -3, 8],\n  labels: ['Used', 'Remaining'],\n  stroke: { width: 0 },\n  colors: ['#28c76f66', '#28c76f'],\n  grid: {\n    padding: {\n      right: -20,\n      bottom: -8,\n      left: -20\n    }\n  },\n  plotOptions: {\n    pie: {\n      startAngle: 0,\n      donut: {\n        labels: {\n          show: true,\n          name: {\n            offsetY: 15\n          },\n          value: {\n            offsetY: -15,\n            formatter(val) {\n              return `${parseFloat(val)} %`\n            }\n          },\n          total: {\n            show: true,\n            offsetY: 15,\n            label: 'IOU',\n            formatter(w) {\n              return ' '\n            }\n          }\n        }\n      }\n    }\n  }/*,\n  responsive: [\n    {\n      breakpoint: 1325,\n      options: {\n        chart: {\n          height: 100\n        }\n      }\n    },\n    {\n      breakpoint: 1200,\n      options: {\n        chart: {\n          height: 120\n        }\n      }\n    },\n    {\n      breakpoint: 1065,\n      options: {\n        chart: {\n          height: 100\n        }\n      }\n    },\n    {\n      breakpoint: 992,\n      options: {\n        chart: {\n          height: 120\n        }\n      }\n    }\n  ]*/\n}\n\nconst Pay4 = () => {\n  const { payID } = useParams()\n  const history = useHistory()\n  const timerIdRef = useRef(0)\n  // const [currentPage, setCurrentPage] = useState(0)\n  const [isloading, setisloading] = useState(false)\n  // const [data, setdata] = useState([{ id: '00700', Time: 'test', Customer: 'test', Tendered: 'test', Due: 'test', tik: '#' }])\n  const [types, setTypes] = useState([])\n  const [series, setseries] = useState([100, 0])\n  const [paymenttype, setpaymenttype] = useState(-1)\n  const { colors } = useContext(ThemeColors)\n  const [businessinfo, setbusinessinfo] = useState({})\n  const [invoiceinfo, setinvoiceinfo] = useState({})\n  const [invoices, setinvoices] = useState([])\n  const [checkinvoiceids, setcheckinvoiceids] = useState([])\n  const [selectinvoiceids, setselectinvoiceids] = useState([])\n  const [allcheck, setallcheck] = useState(true)\n  const [totalamount, settotalamount] = useState(0)\n  const [invoiceloading, setinvoiceloading] = useState(true)\n  const [enetramount, setenteramount] = useState('')\n  const [dueamount, setdueamount] = useState(0)\n  const [ischeckdisabled, setischeckdisabled] = useState(false)\n  const [submitenable, setsubmitenable] = useState(false)\n  const [paymentdata, setpaymentdata] = useState([])\n  const [subpaymentloading, setsubpaymentloading] = useState(false)\n  const [totalinvoiceloading, settotalinvoiceloading] = useState(false)\n  const [errormsg, seterrormsg] = useState('')\n  const [Allowance, setAllowance] = useState('')\n  const [plusMinusIoU, setplusMinusIoU] = useState(0)\n  const [modal, setModal] = useState(false)\n  const [MobilePaymentModal, setMobilePaymentModal] = useState(false)\n  const [CardPaymentModal, setCardPaymentModal] = useState(false)\n  const [MinputErr, setMinputErr] = useState(false)\n  const [serverselectedinvoiceinfo, setserverselectedinvoiceinfo] = useState([])\n  const [anypaymentisinloadingmode, setanypaymentisinloadingmode] = useState(true)\n  const [isrefreshing, setisrefreshing] = useState(false)\n  const [subpaymentamount, setsubpaymentamount] = useState(0)\n  const [resend, setresend] = useState(false)\n  const [subpaymentid, setsubpaymentid] = useState(0)\n  const [autoreloadingongoing, setautoreloadingongoing] = useState(false)\n  const [intervalfnc, seintervalfnc] = useState(null)\n  const [autoreloadingonprocess, setautoreloadingonprocess] = useState(false)\n\n  const subpaymentsectionautoreloadoff = () => {\n     console.log('autoreloadingonprocess ', autoreloadingonprocess)\n   // if (autoreloadingonprocess) {\n      setautoreloadingongoing(false)\n      clearInterval(window.customTimeInterval)\n      seintervalfnc(null)\n      setautoreloadingonprocess(false)\n      //window.customTimeInterval = null\n   // }\n  }\n\n  const paymentRefresh = (if_refresh = true) => {\n   \n    if (if_refresh) {\n      setisrefreshing(true)\n    }\n    \n    useJwt.customerinvoicedetailswithsubpaymentinfo({ receipt_id: payID }).then(res => {\n      const { invoicepaymentinfo = [] } = res.data.payload\n      let ispaymentinpending = false, alreadypaid = 0\n      const paymentdata = invoicepaymentinfo.map((item, index) => {\n        alreadypaid = alreadypaid + item.amount\n        if (!item.payment_success) {\n          ispaymentinpending = true\n        }\n        return {\n          id: item.id,\n          time: new Date(item.time).toLocaleString(),\n          typename: item.type_name,\n          amount: item.amount,\n          payment_success: item.payment_success,\n          payment_type_id: item.type_id\n        }\n      })\n\n      setpaymentdata(paymentdata || [])\n      //auto reloading..start\n      if (!ispaymentinpending) {\n        subpaymentsectionautoreloadoff()\n      } \n       //auto reloading..end\n      setanypaymentisinloadingmode(ispaymentinpending)\n      if (if_refresh) {\n        setisrefreshing(false)\n      }\n      \n    }).catch(err => {\n\n      if (if_refresh) {\n        setisrefreshing(false)\n        Error(err)\n      }\n      console.log(err)\n     \n    })\n  }\n\n  const subpaymentsectionautoreloadon = () => {\n\n     if (!autoreloadingongoing) {\n\n      // 10 s interval...\n       const inter =  setInterval(() => { \n          setautoreloadingongoing(true)\n          paymentRefresh(false)\n          console.log('interval calling..')\n        }, 15000)\n\n        window.customTimeInterval = inter\n\n        setautoreloadingonprocess(true)\n\n       // seintervalfnc(inter)\n    }\n        \n  }\n\n  useEffect(() => {\n\n    useJwt.customerinvoicedetailswithsubpaymentinfo({ receipt_id: payID }).then(res => {\n      console.log(res.data.payload)\n      const { businessinfo = {}, invoiceinfo = {}, invoicepaymentinfo = [], selectedinvoiceinfo = {} } = res.data.payload\n      const { invoices = [] } = invoiceinfo\n      let alreadypaid = 0, ispaymentinpending = false\n      console.log('invoicepaymentinfo ', invoicepaymentinfo)\n      console.log('businessinfo ', businessinfo)\n      const paymentdata = invoicepaymentinfo.map((item, index) => {\n        alreadypaid = alreadypaid + item.amount\n        if (!item.payment_success) {\n          ispaymentinpending = true\n        }\n        return {\n          id: item.id,\n          time: new Date(item.time).toLocaleString(),\n          typename: item.type_name,\n          amount: item.amount,\n          payment_success: item.payment_success,\n          payment_type_id: item.type_id\n        }\n      })\n\n      if (ispaymentinpending) {\n         subpaymentsectionautoreloadon()\n      }\n      //console.log('selectedinvoiceinfo ', selectedinvoiceinfo)\n      const selectedinvoiceids = selectedinvoiceinfo ? selectedinvoiceinfo['invoice_ids'] : []\n      const convertinnumber = selectedinvoiceids\n      setanypaymentisinloadingmode(ispaymentinpending)\n      setserverselectedinvoiceinfo(convertinnumber || [])\n      setbusinessinfo(businessinfo || {})\n      setinvoiceinfo(invoiceinfo)\n      setpaymentdata(paymentdata || [])\n      setischeckdisabled(paymentdata.length || false)\n      setinvoices(invoices)\n      if (invoices.length) {\n        const invoiceids = []\n        let total = 0, subtotal = 0\n        invoices.forEach((item, index) => {\n          invoiceids[index] = item.row_id\n          total = total + item.subtotal_amount\n          if (convertinnumber.includes(item.row_id)) {\n            subtotal = subtotal + item.subtotal_amount\n          }\n        })\n        total = +total.toFixed(2)\n\n        setcheckinvoiceids(convertinnumber.length ? convertinnumber : invoiceids)\n        setselectinvoiceids(convertinnumber.length ? convertinnumber : invoiceids)\n\n        if (convertinnumber.length) {\n          setallcheck(false)\n        }\n\n        const due = subtotal - alreadypaid\n        settotalamount(total)\n        console.log('total - subtotal ', total - subtotal)\n        if (alreadypaid && (due === 0)) {\n          setsubmitenable(true)\n          //console.log('total - subtotal2 ', total - subtotal)\n        }\n        setdueamount(alreadypaid ? due : total)\n        setinvoiceloading(false)\n        if (businessinfo) {\n          const iouused = businessinfo.iou_used\n          const ioulimit = businessinfo.iou_limit\n          if (iouused) {\n            const usepercent = +parseFloat((iouused / ioulimit) * 100).toFixed(2)\n            const useremaining = +parseFloat(100 - usepercent).toFixed(2)\n            //console.log(iouused, ioulimit)\n            //console.log(usepercent, useremaining)\n            setseries([usepercent, useremaining])\n          }\n\n        }\n\n      }\n    }).catch(err => {\n      console.log(err)\n      Error(err)\n    })\n\n    useJwt.getAllPaymentType().then(res => {\n      console.log(res.data.payload)\n      setTypes(res.data.payload)\n    }).catch(err => {\n      console.log(err)\n      Error(err)\n    })\n  }, [])\n\n  const paymenttypeselected = (index, typeid) => {\n\n    if (paymenttype === -1 && index === 0) {\n      return 'info'\n    } else if (paymenttype !== -1 && typeid === paymenttype) {\n      return 'info'\n    } else {\n      return 'secondary'\n    }\n  }\n\n  const onChange = (e) => { setenteramount(e.target.value) }\n\n  const subpaymentadd = (e) => {\n    e.preventDefault()\n    seterrormsg('')\n    // if (enetramount.includes(\"e\") || enetramount.includes(\"+\")) {\n    //   alert(enetramount, 'is invalid')\n    // }\n    if (Number(enetramount) === 0) {\n      return\n    }\n    if (enetramount) {\n      if (enetramount > dueamount) {\n        seterrormsg('Amount is exceed !')\n        return 0\n      }\n      let typeinfo = {}, typeid = 0\n      if (paymenttype === -1) {\n        typeinfo = types[0]\n        typeid = types[0].id\n      } else {\n        types.forEach(item => {\n          if (item.id === paymenttype) {\n            typeinfo = item\n          }\n        })\n      }\n\n      const ioulimit = (parseFloat(businessinfo['iou_limit']) - parseFloat(businessinfo['iou_used'])) || 0\n      if (typeinfo.id === 4 && enetramount > ioulimit) {\n        seterrormsg('This customer has reached to IOU limit')\n        return 0\n      }\n\n      setsubpaymentloading(true)\n      const sinvo = selectinvoiceids.map(i => Number(i))\n      const payment_type_id = typeid || paymenttype\n      setsubpaymentamount(enetramount)\n      useJwt.subPayment({\n        payment_type_id,\n        amount: +enetramount,\n        receipt_id: payID,\n        selectdinvoiceid: sinvo\n      }).then(res => {\n        if (paymenttype === 3) {\n          setMobilePaymentModal(true)\n          setanypaymentisinloadingmode(true)\n          setTimeout(() => setMobilePaymentModal(false), 5000)\n          \n        } else if (paymenttype === 5) {\n          setCardPaymentModal(true)\n          setanypaymentisinloadingmode(true)\n          setTimeout(() =>  setCardPaymentModal(false), 5000)\n          \n        }\n        // console.log(res)\n        Success(res)\n        console.log('paymenttype ', paymenttype)\n        if (paymenttype === 4) {\n          // console.log\n          const iou_used = businessinfo.iou_used + Number(enetramount)\n          console.log('businessinfo.iou_used ', businessinfo.iou_used, 'enetramount ', enetramount)\n          //graph change...\n          const ioulimit = businessinfo.iou_limit\n          if (iou_used) {\n            const usepercent = +parseFloat((iou_used / ioulimit) * 100).toFixed(2)\n            const useremaining = +parseFloat(100 - usepercent).toFixed(2)\n            setseries([usepercent, useremaining])\n          }\n\n          setbusinessinfo({ ...businessinfo, iou_used })\n        }\n        setsubpaymentloading(false)\n        let payment_success = true\n        if (payment_type_id === 3 || payment_type_id === 5) {\n          payment_success = false\n          //auto reload..\n          subpaymentsectionautoreloadon()\n        }\n        setpaymentdata([\n          {\n            id: res.data.payload.id,\n            time: new Date().toLocaleString(),\n            typename: typeinfo['payment_type_name'],\n            amount: +enetramount,\n            payment_success,\n            payment_type_id\n          },\n          ...paymentdata\n        ])\n        setischeckdisabled(true)\n        setenteramount('')\n        setdueamount(dueamount - enetramount)\n        if ((dueamount - enetramount) === 0) {\n          setsubmitenable(true)\n        }\n\n      }).catch(e => {\n        setsubpaymentloading(false)\n        console.log(e)\n        Error(e)\n      })\n\n    }\n\n  }\n\n\n  const paymentSelectChange = (typeid) => {\n    setpaymenttype(typeid)\n    console.log(typeid)\n  }\n\n  const removedeleteitem = (id) => {\n\n    const updatedfilteredData = paymentdata.filter(item => {\n      if (item.id === id) {\n        if (item.payment_type_id === 4 || item.payment_type_id === \"4\") {\n          const iou_used = businessinfo.iou_used - Number(item.amount)\n          //graph change...\n          const ioulimit = businessinfo.iou_limit\n          if (iou_used) {\n            const usepercent = +parseFloat((iou_used / ioulimit) * 100).toFixed(2)\n            const useremaining = +parseFloat(100 - usepercent).toFixed(2)\n            setseries([usepercent, useremaining])\n          }\n\n          setbusinessinfo({ ...businessinfo, iou_used })\n        }\n        setdueamount(Math.abs(dueamount + item.amount))\n        return false\n      } else {\n        return true\n      }\n    })\n\n    let ishavependingmode = false\n    paymentdata.every(v => {\n      if (!v.payment_success) {\n        ishavependingmode = true\n        return false\n      }\n      return true\n    })\n\n    if (ishavependingmode) {\n      setanypaymentisinloadingmode(true)\n    } else {\n      setanypaymentisinloadingmode(false)\n    }\n\n    setsubmitenable(false)\n    setpaymentdata(updatedfilteredData)\n  }\n\n  const deletesubpayment = (id) => {\n    console.log(id)\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      allowOutsideClick: false,\n      allowEscapeKey: false,\n      showCancelButton: true,\n      showLoaderOnConfirm: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ml-1'\n      },\n      buttonsStyling: false,\n      preConfirm: () => {\n        //fetch business delete api...\n        return useJwt.deleteSubPayment({ id }).then(res => {\n\n          return res\n\n        }).catch(err => {\n          console.log(err.response)\n          Error(err)\n          return false\n        })\n      },\n      allowOutsideClick: () => !Swal.isLoading()\n    }).then(function (result) {\n\n      if (result.isConfirmed) {\n        removedeleteitem(id)\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'The payment has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n\n    })\n  }\n  const tenderedAmount = () => {\n    let total = 0\n    paymentdata.forEach(item => {\n      total = total + item.amount\n    })\n    return +total.toFixed(2)\n  }\n  const thousandSeparator = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n  }\n  const submittotalinvoicepayment = (e) => {\n    console.log({\n      receipt_id: payID,\n      paid_invoice_ids: selectinvoiceids,\n      all_invoice_ids: checkinvoiceids,\n      amount: tenderedAmount(),\n      apibaseurl: window.API_BASE_URL\n    })\n    settotalinvoiceloading(true)\n    useJwt.totalInvoicePayment({\n      receipt_id: payID,\n      paid_invoice_ids: selectinvoiceids,\n      all_invoice_ids: checkinvoiceids,\n      amount: tenderedAmount(),\n      apibaseurl: window.API_BASE_URL\n    }).then(res => {\n\n      Success(res)\n      settotalinvoiceloading(false)\n      history.push(\"/payment\")\n\n    }).catch(e => {\n      settotalinvoiceloading(false)\n      console.log(e)\n      Error(e)\n    })\n  }\n  const fillRemaining = () => {\n    const due_amountconvert = +dueamount\n    const due_amount = +due_amountconvert.toFixed(2)\n    setenteramount(due_amount)\n  }\n  const checkboxclick = (e) => {\n    let due_amount = 0\n    if (e.target.checked) {\n      if (e.target.name === 'allcheck') {\n        setselectinvoiceids([...checkinvoiceids])\n        setallcheck(true)\n        due_amount = totalamount\n      } else {\n        setselectinvoiceids([...selectinvoiceids, e.target.name])\n        setallcheck(false)\n        invoices.forEach(item => {\n          if (e.target.name === item.row_id) {\n            console.log(item)\n            due_amount = parseFloat(dueamount) + item.subtotal_amount\n            console.log('due_amount ', due_amount, 'dueamount ', dueamount, 'subtotal_amount ', item.subtotal_amount)\n\n          }\n        })\n      }\n\n    } else {\n      if (e.target.name === 'allcheck') {\n        setselectinvoiceids([])\n      } else {\n        setselectinvoiceids(selectinvoiceids.filter(item => item !== e.target.name))\n        invoices.forEach(item => {\n          if (e.target.name === item.row_id) {\n            due_amount = dueamount - item.subtotal_amount\n\n            console.log('due_amount ', due_amount, 'dueamount ', dueamount, 'subtotal_amount ', item.subtotal_amount)\n          }\n        })\n      }\n\n      setallcheck(false)\n    }\n\n    due_amount = (parseFloat(due_amount) - parseFloat(tenderedAmount()))\n\n    due_amount = +due_amount.toFixed(2)\n\n    setdueamount(due_amount)\n\n    console.log(e.target.name, e.target.checked) //checked\n  }\n\n  const resendNotification = (id) => {\n\n    setresend(true)\n    setsubpaymentid(id)\n    useJwt.resendnotificationforpay({ subpaymentid: id }).then(res => {\n\n      Success(res)\n      setresend(false)\n      setsubpaymentid(0)\n\n    }).catch(e => {\n\n      setresend(false)\n      setsubpaymentid(0)\n      console.log(err)\n      Error(err)\n    })\n\n  }\n  //console.log('paymentdata ', paymentdata)\n  const PaymentTable = () => {\n\n    return (\n      <Fragment>\n        {\n          isrefreshing ? <Spinner color='secondary' className='mr-25' style={{ fontSize: 10 }} /> : <Button.Ripple color='primary' \n          size=\"sm\"  onClick={paymentRefresh} className=\"custom_button\">\n          <span className='align-middle' style={{paddingLeft:'2px'}}>Refresh</span>\n        </Button.Ripple>\n\n          // <RefreshCw className='mr-25' size={18} style={{ cursor: 'pointer', margin: '4px' }} onClick={paymentRefresh} />\n\n        }\n        <Table responsive bordered size=\"sm\" >\n          <tbody>\n            {\n              paymentdata.map((item, index) => <tr key={index}>\n                <td scope='col' className='text-nowrap'>\n                  #{index + 1}\n\n                </td>\n                <td scope='col' className='text-nowrap'>{item.time} </td>\n                <td scope='col' className='text-nowrap'>\n                  {\n                    item.payment_success ? <Check className='mr-25' size={18} /> : <Spinner color='primary' className='mr-25' size='sm' />\n                  }\n                  {item.typename} &nbsp;\n\n                  {\n                    ((item.payment_type_id === 3) && !item.payment_success) ? (resend && subpaymentid === item.id) ? <Spinner color='primary' className='mr-25' size='sm' /> : <Fragment>\n                      {/* <RotateCw className='mr-25' style={{ cursor: 'pointer' }} size={13} onClick={(e) => resendNotification(item.id)} id={`positionBottom${item.id}`} /> */}\n                      <Button.Ripple color='primary' size=\"sm\" className=\"custom_button\" onClick={(e) => resendNotification(item.id)} id={`positionBottom${item.id}`}>\n                        <span className='align-middle' style={{paddingLeft:'2px'}}>Reset</span>\n                      </Button.Ripple>\n                      {/*<UncontrolledTooltip placement='bottom' target={`positionBottom${item.id}`}>\n                        Resend\n                      </UncontrolledTooltip>*/}\n                    </Fragment> : null\n                  }\n\n                </td>\n                <td scope='col' className='text-nowrap'> {window.CURRENCY_SYMBOL} {thousandSeparator((+item.amount).toFixed(2))} </td>\n                <td scope='col' className='text-nowrap'>\n                  {\n                    (item.payment_success === true && (item.payment_type_id === 3 || item.payment_type_id === 5)) ? <Trash size={15} color='#968f8f' /> : <Trash size={15} color='red' style={{ cursor: 'pointer' }} onClick={(e) => deletesubpayment(item.id)} />\n                  }\n\n                </td>\n              </tr>)\n            }\n\n          </tbody>\n        </Table>\n      </Fragment>\n    )\n  }\n\n  const InvoiceTable = () => {\n    return (\n      <Fragment>\n        {\n          invoiceloading ? <Spinner color='primary' /> : <Table responsive bordered size='sm' >\n            <thead>\n              <tr>\n                <th scope='col' className='text-nowrap'> <CustomInput disabled={ischeckdisabled} name='allcheck' inline type='checkbox' id='allcheck' onChange={(e) => checkboxclick(e)} checked={allcheck} /> </th>\n                <th scope='col' className='text-nowrap'>Time </th>\n                <th scope='col' className='text-nowrap'>Invoice ID </th>\n                <th scope='col' className='text-nowrap'> Till</th>\n                <th scope='col' className='text-nowrap'> Amount </th>\n                <th scope='col' className='text-nowrap'>Status </th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                invoices.length ? invoices.map((item, index) => <tr key={index}>\n                  <td className='text-nowrap'> <CustomInput inline disabled={ischeckdisabled} type='checkbox' name={item.row_id} id={item.row_id} onChange={(e) => checkboxclick(e)} checked={selectinvoiceids.includes(item.row_id)} /></td>\n                  <td className='text-nowrap'>{item['invoice_time']}</td>\n                  <td className='text-nowrap'>{item['invoice_id']}</td>\n                  <td className='text-nowrap'>{item['till_id']}</td>\n                  <td className='text-nowrap'>{window.CURRENCY_SYMBOL} {thousandSeparator((+item['subtotal_amount']).toFixed(2))}</td>\n                  <td className='text-nowrap'><Badge color={StatusSet(item['status']).color} pill>\n                    {StatusSet(item['status']).title}\n                  </Badge></td>\n                </tr>) : null\n              }\n\n            </tbody>\n          </Table>\n        }\n      </Fragment>\n\n    )\n  }\n  const onModalIOUChange = (e) => {\n    setAllowance(e.target.value)\n    // setTimeout(() => console.log(Number(Allowance), Number(businessinfo['iou_limit'])), 500)\n  }\n  const onsubmit = (e) => {\n    e.preventDefault()\n    // console.log(Number(Allowance) < Number(businessinfo['iou_limit']))\n    if (Allowance === '' || typeof businessinfo.id === 'undefined') {\n      return 0\n    }\n    if (Number(Allowance) < Number(businessinfo['iou_limit'] || 0)) {\n      setMinputErr(true)\n      return 0\n    }\n    setisloading(true)\n    setMinputErr(false)\n    console.log({ change: Allowance, typeid: 1, busnessid: businessinfo.id })\n    useJwt.customerIOUmanage({ change: Number(Allowance), typeid: 1, busnessid: businessinfo.id }).then(res => {\n      console.log(res)\n      setisloading(false)\n      setbusinessinfo({ ...businessinfo, iou_limit: Number(Allowance) })\n      setAllowance('')\n\n      //graph change...\n      const iouused = businessinfo.iou_used\n      const ioulimit = Number(Allowance)\n      if (iouused) {\n        const usepercent = +parseFloat((iouused / ioulimit) * 100).toFixed(2)\n        const useremaining = +parseFloat(100 - usepercent).toFixed(2)\n        setseries([usepercent, useremaining])\n      }\n\n\n    }).catch(err => {\n      console.log(err)\n      Error(err)\n      setisloading(false)\n    })\n  }\n\n  return (\n    <>\n      <Button.Ripple className='mb-2 ml-2' color='primary' onClick={() => history.goBack()}>\n        <ChevronLeft size={10} />\n        <span className='align-middle ml-50'>Back</span>\n      </Button.Ripple>\n      <Row>\n        <Col sm='6'>\n          <Card className=\"d-flex justify-content-center p-2\">\n            <Media>\n              <Avatar color={'light-success'} icon={<TrendingUp size={24} />} className='mr-2' style={{ padding: '7px' }} />\n              <Media className='my-auto' body>\n                <h4 className='font-weight-bolder mb-0'>{window.CURRENCY_SYMBOL} {thousandSeparator((+tenderedAmount()).toFixed(2))}</h4>\n                <CardText className='font-small-3 mb-0'>{'Tendered Amount'}</CardText>\n              </Media>\n            </Media>\n          </Card>\n        </Col>\n        <Col sm='6'>\n          <Card className=\"d-flex justify-content-center p-2\">\n            <Media>\n              <Avatar color={'light-danger'} icon={<TrendingDown size={24} />} className='mr-2' style={{ padding: '7px' }} />\n              <Media className='my-auto' body>\n                <h4 className='font-weight-bolder mb-0'>{window.CURRENCY_SYMBOL} {thousandSeparator(parseFloat(dueamount).toFixed(2))}</h4>\n                <CardText className='font-small-3 mb-0'>{'Due Amount'}</CardText>\n              </Media>\n            </Media>\n          </Card>\n        </Col>\n      </Row>\n      <Card className='pt-1 pay4'>\n        <Row>\n          <Col md=\"5\">\n            {!types.length ? <Spinner color='primary' /> : types.map((type, index) => <Button.Ripple key={index} size=\"sm\" className='ml-1 mb-1' color={paymenttypeselected(index, type.id)} onClick={(e) => paymentSelectChange(type.id)}>\n              <span className='align-middle'>{type.payment_type_name}</span>\n            </Button.Ripple>)\n            }\n            <div className='paycardBorder pt-1'>\n\n              <Form className=\"d-flex flex-wrap my-1 ml-1\" style={{ width: '100%' }} autoComplete=\"off\" onSubmit={subpaymentadd}>\n                {\n                  errormsg ? <FormGroup style={{ width: '100%' }}>\n                    <Label style={{ color: 'red' }}>{errormsg}</Label>\n                  </FormGroup> : null\n                }\n\n                <FormGroup style={{ width: '70%' }}>\n                  <Input\n                    min=\"0\"\n                    placeholder=\"0.00\"\n                    type='number'\n                    id='search-input'\n                    step=\"0.01\"\n                    presicion={2}\n                    onChange={onChange}\n                    value={enetramount}\n                  />\n                </FormGroup>\n                <FormGroup>\n                  {\n                    subpaymentloading ? <Button.Ripple className='ml-1' color='primary' disabled={true}>\n                      <Spinner color='white' size='sm' />\n                      <small className='ml-50'></small>\n                    </Button.Ripple> : <Button.Ripple className='ml-1' color='primary' type='submit' disabled={submitenable}>\n                      <span className='align-middle ml-50'>Add</span>\n                    </Button.Ripple>\n                  }\n                </FormGroup>\n              </Form>\n              <Button.Ripple className='ml-1 mb-1' color='info' size=\"sm\" onClick={fillRemaining}>\n                <span className='align-middle ml-50'>Fill remains</span>\n              </Button.Ripple>\n\n              <Button.Ripple className='ml-1 mb-1' color='info' size=\"sm\" onClick={() => setModal(true)}>\n                <span className='align-middle ml-50'>Manage IOU</span>\n              </Button.Ripple>\n              {/* MODAL */}\n              <Modal isOpen={modal} toggle={() => setModal(!modal)}>\n                <ModalHeader toggle={() => {\n                  setModal(!modal)\n                  setAllowance('')\n                }}>Manage IOU</ModalHeader>\n                <ModalBody className=\"px-md-5 px-1\">\n                  <p>Customer Name : <span className=\"float-right\">{invoiceinfo['customername'] || \"\"}</span></p>\n                  <p>Customer ID : <span className=\"float-right\">{invoiceinfo['customer_id'] || \"\"}</span></p>\n                  <p>Business Name : <span className=\"float-right\">{businessinfo['businessname'] || \"\"} </span></p>\n                  <p>Allowance : <span className=\"float-right\">{window.CURRENCY_SYMBOL} {businessinfo['iou_limit'] ? thousandSeparator((+businessinfo['iou_limit']).toFixed(2)) : 0}</span></p>\n                  <p>Used : <span className=\"float-right\">{window.CURRENCY_SYMBOL} {businessinfo['iou_limit'] ? thousandSeparator((+businessinfo['iou_used']).toFixed(2) || 0) : 0}</span></p>\n                  <p>Remaining : <span className=\"float-right\">{window.CURRENCY_SYMBOL} {businessinfo['iou_limit'] ? thousandSeparator((+(parseFloat(businessinfo['iou_limit'] || 0) - parseFloat(businessinfo['iou_used'] || 0))).toFixed(2)) : 0}</span></p>\n                  \n                  <div className='w-100'>\n                    <p className=\"text-center mb-0\">IOU Allowance increase to</p>\n                    <Form className=\"p-1\" style={{ width: '100%' }} onSubmit={onsubmit} autoComplete=\"off\">\n                      <InputGroup className='input-group-merge w-100 mb-1'>\n                        <InputGroupAddon addonType='prepend'>\n                          <InputGroupText>\n                            {window.CURRENCY_SYMBOL}\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          min=\"0\"\n                          placeholder=\"0.00\"\n                          type='number'\n                          id='search-input'\n                          onChange={onModalIOUChange}\n                          value={Allowance}\n                        />\n                      </InputGroup>\n                      {MinputErr && <small style={{ color: 'red', margin: '-10px 0px 10px 10px', display: 'block' }}>must be greater than Allowance</small>}\n                      <FormGroup>\n                        <div className='d-flex justify-content-center'>\n                          <Button.Ripple color='danger' onClick={() => {\n                            setModal(!modal)\n                            setAllowance('')\n                          }} >\n                            <span className='align-middle ml-50'>Cancel</span>\n                          </Button.Ripple>\n                          {\n                            isloading ? <Button.Ripple className='ml-1' color='primary' disabled={true}>\n                              <Spinner color='white' size='sm' />\n                              <small className='ml-50'>Loading...</small>\n                            </Button.Ripple> : <Button.Ripple className='ml-1' color='primary' type='submit' >\n                              <span className='align-middle ml-50'>Add</span>\n                            </Button.Ripple>\n                          }\n                        </div>\n                      </FormGroup>\n                    </Form>\n                  </div>\n                </ModalBody>\n              </Modal>\n              {/* MODAL */}\n\n              {/* MODAL for mobile payment*/}\n              <Modal isOpen={MobilePaymentModal} toggle={() => setMobilePaymentModal(!MobilePaymentModal)}>\n\n                <ModalHeader toggle={() => setMobilePaymentModal(!MobilePaymentModal)}>\n\n                </ModalHeader>\n\n                <ModalBody className=\"px-md-5 px-1\">\n                  <h3>Payment request for mobile payment to customer has been sent successfully.</h3>\n                    <p> Payment status will be updated just after it gets completed in the payment list section.\n                      Please click refresh button for manual check </p>\n                </ModalBody>\n                <div className=\"w-100 text-center pb-2\">\n                  <Button.Ripple color='danger' onClick={() => setMobilePaymentModal(!MobilePaymentModal)} >\n                    <span className='align-middle ml-50'>Cancel</span>\n                  </Button.Ripple>\n                </div>\n              </Modal>\n              {/* MODAL for mobile payment*/}\n\n              {/* MODAL for card payment*/}\n              <Modal isOpen={CardPaymentModal} toggle={() => setCardPaymentModal(!CardPaymentModal)}>\n\n                <ModalHeader toggle={() => setCardPaymentModal(!CardPaymentModal)}>\n\n                </ModalHeader>\n\n                <ModalBody className=\"px-md-5 px-1\" style={{ textAlign: 'center' }}>\n                  <h3>Please insert the card </h3>\n                  <p>Ready to process payment</p>\n                  <p>{window.CURRENCY_SYMBOL} {subpaymentamount}</p>\n                </ModalBody>\n                <div className=\"w-100 text-center pb-2\">\n                  <Button.Ripple color='danger' onClick={() => setCardPaymentModal(!CardPaymentModal)} >\n                    <span className='align-middle ml-50'>Cancel</span>\n                  </Button.Ripple>\n                </div>\n              </Modal>\n              {/* MODAL for card payment*/}\n\n            </div>\n            <div className='paycardBorder'>\n              <Row >\n                <Col sm='12'>\n                  <PaymentTable />\n                </Col>\n\n                <Col sm='12' className='text-center'>\n                  {\n                    totalinvoiceloading ? <Button.Ripple className='my-1' color='primary' disabled={true} >\n                      <Spinner color='white' size='sm' />\n                      <span className='align-middle ml-50'>Submit</span>\n                    </Button.Ripple> : <Button.Ripple className='my-1' color='primary' disabled={!(dueamount < 0.2 && anypaymentisinloadingmode === false)} onClick={submittotalinvoicepayment} >\n                      <span className='align-middle ml-50'>Submit</span>\n                    </Button.Ripple>\n                  }\n\n                </Col>\n              </Row>\n            </div>\n          </Col>\n          <Col md=\"7\">\n            <Row className='pt-1'>\n              <Col sm=\"7\">\n              <Table responsive size=\"sm\" className=\"detailsshowtable\" >\n                <tbody>\n                     <tr>\n                     <td scope='col' className='text-nowrap textbold textalignright' >Customer Name : </td>\n                     <td scope='col' className='text-nowrap smallfontsize '>{invoiceinfo['customername'] || \"\"} </td>\n                     </tr>\n                     <tr>\n                     <td scope='col' className='text-nowrap textbold textalignright'>Customer ID : </td>\n                     <td scope='col' className='text-nowrap smallfontsize'>{invoiceinfo['customer_id'] || \"\"} </td>\n                     </tr>\n                     <tr>\n                     <td scope='col' className='text-nowrap textbold textalignright'>Business Name : </td>\n                     <td scope='col' className='text-nowrap smallfontsize '>{businessinfo['businessname'] || \"\"}</td>\n                     </tr>\n\n                     <tr>\n                     <td scope='col' className='text-nowrap'> </td>\n                     <td scope='col' className='text-nowrap'> </td>\n                     </tr>\n\n                      <tr>\n                     <td scope='col' className='text-nowrap textbold textalignright'>Allowance : </td>\n                     <td scope='col' className='text-nowrap smallfontsize '>{window.CURRENCY_SYMBOL} {thousandSeparator((+(businessinfo['iou_limit'] ? businessinfo['iou_limit'] : 0)).toFixed(2))} </td>\n                     </tr>\n                     <tr>\n                     <td scope='col' className='text-nowrap textbold textalignright'>Used : </td>\n                     <td scope='col' className='text-nowrap smallfontsize '>{window.CURRENCY_SYMBOL} {thousandSeparator((+(businessinfo['iou_used'] ? businessinfo['iou_used'] : 0)).toFixed(2)) }</td>\n                     </tr>\n                     <tr>\n                     <td scope='col' className='text-nowrap textbold textalignright'>Remaining : </td>\n                     <td scope='col' className='text-nowrap smallfontsize '>{window.CURRENCY_SYMBOL} {thousandSeparator((+businessinfo['iou_limit'] ? (parseFloat(businessinfo['iou_limit'] || 0) - parseFloat(businessinfo['iou_used'] || 0)) : 0).toFixed(2))} </td>\n                     </tr>\n\n                </tbody>\n              </Table>\n              {/*  <p>Customer Name : {invoiceinfo['customername'] || \"\"} </p>\n                <p>Customer ID : {invoiceinfo['customer_id'] || \"\"}</p>\n                <p>Business Name : {businessinfo['businessname'] || \"\"} </p>\n            \n\n                <p>Allowance : {window.CURRENCY_SYMBOL} {thousandSeparator((+(businessinfo['iou_limit'] ? businessinfo['iou_limit'] : 0)).toFixed(2))} </p>\n                <p>Used : {window.CURRENCY_SYMBOL} {thousandSeparator((+(businessinfo['iou_used'] ? businessinfo['iou_used'] : 0)).toFixed(2)) }</p>\n                <p>Remaining : {window.CURRENCY_SYMBOL} {thousandSeparator((+businessinfo['iou_limit'] ? (parseFloat(businessinfo['iou_limit'] || 0) - parseFloat(businessinfo['iou_used'] || 0)) : 0).toFixed(2))}</p>\n              */}\n              </Col>\n              <Col sm=\"5\">\n                <Chart options={options} series={series} type='donut' height={120} />\n              </Col>\n\n              <Col sm=\"12\">\n                <div className=\"paycardBorder pt-1 mr-1 mt-2\">\n                  <InvoiceTable />\n                </div>\n              </Col>\n            </Row>\n            <p className=\"float-right mr-2 mt-2\">Total Amount : {window.CURRENCY_SYMBOL} {thousandSeparator((+totalamount || 0).toFixed(2))}</p>\n          </Col>\n        </Row>\n      </Card ></>\n  )\n}\n\nexport default Pay4","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n","\nconst status = {\n  1: { title: 'Active', color: 'light-success ' },\n  0: { title: 'Pending', color: 'light-primary' },\n  5: { title: 'Stopped', color: 'light-danger' },\n  11: { title: 'Unpaid', color: 'light-primary' }\n}\n\nconst voucherstatus = {\n  1: { title: 'Active', color: 'light-success ' },\n  0: { title: 'In-Active', color: 'light-primary' }\n}\n\nconst operationstatus = {\n  Insert: { title: 'Insert', color: 'light-success ' },\n  Update: { title: 'Update', color: 'light-primary' },\n  Delete: { title: 'Delete', color: 'light-danger' },\n\n  INSERT: { title: 'INSERT', color: 'light-success ' },\n  UPDATE: { title: 'UPDATE', color: 'light-primary' },\n  DELETE: { title: 'DELETE', color: 'light-danger' }\n}\nexport const StatusSet = (statusid) => {\n   return status[statusid] || { title: 'N/A', color: 'light-danger' }\n}\n\nexport const VoucherStatusSet = (statusid) => {\n  return voucherstatus[statusid] || { title: 'N/A', color: 'light-danger' }\n}\n\nexport const OperationStatusSet = (statusid) => {\n  return operationstatus[statusid] || { title: 'N/A', color: 'light-danger' }\n}"],"sourceRoot":""}