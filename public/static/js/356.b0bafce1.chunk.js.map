{"version":3,"sources":["views/VendorComponents/QuotaManage/index.js","views/viewhelper.js","views/helper.js","views/VendorComponents/ClientSideDataTable.js"],"names":["withReactContent","Swal","MrchntBudgetTable","_ref","Array2D","JSON","parse","localStorage","getItem","map","x","submenu","y","id","_useState","concat","apply","_toConsumableArray","useState","_useState2","_slicedToArray","reset","setReset","_useState3","_useState4","modal","setmodal","toggleModal","m","_useState5","_useState6","TableDataLoading","setTableDataLoading","_useState7","_useState8","_useState9","_useState10","SelectedMerchantLoading","setSelectedMerchantLoading","_useState11","_useState12","budgetpercentage","setbudgetpercentage","_useState13","_useState14","budgets","setBudgets","_useState15","_useState16","pendingBudgets","setPendingBudgets","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","useJwt","campaignBudgetList","then","res","payload","data","console","log","catch","err","response","Error","campaignBudgetPendingList","stop","_useState17","_useState18","searchValue","_useState19","_useState20","filteredData","column","name","minWidth","sortable","selector","row","formatReadableDate","created_at","_useState21","_useState22","activeTab","setActiveTab","toggle","tab","_jsxs","_Fragment","children","_jsx","Card","CardBody","Nav","tabs","NavItem","NavLink","className","classnames","active","onClick","TabContent","TabPane","tabId","CardHeader","CardTitle","Button","Ripple","color","CommonDataTable","TableData","length","Modal","isOpen","ModalHeader","ModalBody","Form","style","width","onSubmit","e","preventDefault","body","proposed_budget","createCampaignBudget","Success","error","autoComplete","Row","Col","md","FormGroup","Label","Input","type","min","step","value","onChange","target","required","placeholder","paddingTop","disabled","Spinner","size","status","toast","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","success","options","year","month","day","hour","minute","date","Date","toLocaleDateString","thousandSeparator","toString","replace","handle401","window","location","href","clear","_x","arguments","ExportCSV","array","CSVname","link","document","createElement","csv","result","join","forEach","item","ctr","key","convertArrayOfObjectsToCSV","userData","filename","toISOString","replaceAll","match","setAttribute","encodeURI","click","currentPage","setCurrentPage","Fragment","DataTable","noHeader","pagination","columns","paginationPerPage","sortIcon","ChevronDown","paginationDefaultPage","paginationComponent","_jsx2","ReactPaginate","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","_defineProperty","progressPending","progressComponent","responsive"],"mappings":"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","file":"static/js/356.b0bafce1.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState, useRef } from 'react'\nimport {\n    ChevronDown, Share, Printer, FileText, File, Grid, CheckCircle, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft, RefreshCw\n} from 'react-feather'\nimport {\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput, Modal, ModalHeader, ModalBody\n} from 'reactstrap'\nimport { Link, useHistory } from 'react-router-dom'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport { Error, Success, ErrorMessage } from '../../viewhelper'\nimport { formatReadableDate } from '../../helper'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\nimport CommonDataTable from '../ClientSideDataTable'\nimport Select from 'react-select'\nimport { selectThemeColors, transformInToFormObject } from '@utils'\nimport 'jspdf-autotable'\nimport classnames from 'classnames'\n\nconst MrchntBudgetTable = () => {\n    const AssignedMenus = JSON.parse(localStorage.getItem('AssignedMenus')) || []\n    const Array2D = AssignedMenus.map(x => x.submenu.map(y => y.id))\n    const subMenuIDs = [].concat(...Array2D)\n    const [reset, setReset] = useState(false)\n    const [modal, setmodal] = useState(false)\n    const toggleModal = () => setmodal(m => !m)\n\n    const [TableDataLoading, setTableDataLoading] = useState(true)\n    const [TableData, setTableData] = useState([])\n\n    const [SelectedMerchantLoading, setSelectedMerchantLoading] = useState(false)\n    const [budgetpercentage, setbudgetpercentage] = useState(1)\n    const [budgets, setBudgets] = useState([])\n    const [pendingBudgets, setPendingBudgets] = useState([])\n\n    useEffect(async () => {\n        await useJwt.campaignBudgetList().then(res => {\n            const { payload } = res.data\n            console.log(payload)\n            setBudgets(payload)\n            setTableDataLoading(false)\n        }).catch(err => {\n            console.log(err.response)\n            setTableDataLoading(false)\n            Error(err)\n        })\n        await useJwt.campaignBudgetPendingList().then(res => {\n            const { payload } = res.data\n            console.log(payload)\n            setPendingBudgets(payload)\n            setTableDataLoading(false)\n        }).catch(err => {\n            console.log(err.response)\n            setTableDataLoading(false)\n            Error(err)\n        })\n    }, [reset])\n    const [searchValue, setSearchValue] = useState('')\n    const [filteredData, setFilteredData] = useState([])\n    const column = [\n        {\n            name: 'Merchant Phone',\n            minWidth: '150px',\n            sortable: true,\n            selector: 'created_by_name'\n        },\n        {\n            name: 'Proposed Budget',\n            minWidth: '120px',\n            sortable: true,\n            selector: 'proposed_budget'\n        },\n        {\n            name: 'Current Balance',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'current_balance'\n        },\n        {\n            name: 'Previous Balance',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'previous_balance'\n        },\n        {\n            name: 'Action',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'action'\n        },\n        {\n            name: 'Created At',\n            minWidth: '220px',\n            sortable: true,\n            selector: row => formatReadableDate(row.created_at)\n        }\n    ]\n\n\n    const onSelectedMerchantSubmit = (e) => {\n        e.preventDefault()\n        const body = { proposed_budget: budgetpercentage }\n        console.log(body)\n        // return 0\n        setSelectedMerchantLoading(true)\n        useJwt.createCampaignBudget(body).then((response) => {\n            setReset(!reset)\n            setSelectedMerchantLoading(false)\n            Success(response)\n            setbudgetpercentage(0)\n            toggleModal()\n        }).catch((error) => {\n            setSelectedMerchantLoading(false)\n            Error(error)\n            console.log(error)\n        })\n    }\n    const [activeTab, setActiveTab] = useState('1')\n    const toggle = tab => {\n        if (activeTab !== tab) setActiveTab(tab)\n    }\n    return (\n        <>\n            <Card>\n                <CardBody>\n                    <Nav tabs>\n                        <NavItem>\n                            <NavLink\n                                className={classnames({ active: activeTab === '1' })}\n                                onClick={() => { toggle('1') }}\n                            > Quota Request List\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                className={classnames({ active: activeTab === '2' })}\n                                onClick={() => { toggle('2') }}\n                            >Pending Quota Request List\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                </CardBody>\n            </Card>\n            <Card>\n                <TabContent activeTab={activeTab}>\n                    <TabPane tabId=\"1\">\n                        <Card>\n                            <CardHeader className='border-bottom'>\n                                <CardTitle></CardTitle>\n                                <CardTitle>\n                                    <Button.Ripple className='ml-2' color='primary' onClick={toggleModal}>\n                                        <span >Request For Quota</span>\n                                    </Button.Ripple>\n                                </CardTitle>\n                            </CardHeader>\n                            <CardBody>\n                                <CommonDataTable column={column} TableData={searchValue.length ? filteredData : budgets} TableDataLoading={TableDataLoading} />\n                            </CardBody>\n                        </Card>\n                    </TabPane>\n                    <TabPane tabId=\"2\">\n                        <Card>\n                            <CardBody>\n                                <CommonDataTable column={column} TableData={searchValue.length ? filteredData : pendingBudgets} TableDataLoading={TableDataLoading} />\n                            </CardBody>\n                        </Card>\n                    </TabPane>\n                </TabContent>\n            </Card>\n            <Modal isOpen={modal} toggle={toggleModal} className='modal-dialog-centered'>\n                <ModalHeader toggle={toggleModal}>Request For Quota</ModalHeader>\n                <ModalBody>\n                    <Form style={{ width: '100%' }} onSubmit={onSelectedMerchantSubmit} autoComplete=\"off\">\n                        <Row>\n                            <Col md='12'>\n                                <FormGroup>\n                                    <Label>Quota Amount</Label>\n                                    <Input\n                                        type=\"number\"\n                                        min={0}\n                                        // max={100}\n                                        step='0.01'\n                                        name={budgetpercentage}\n                                        id={budgetpercentage}\n                                        value={budgetpercentage}\n                                        onChange={e => {\n                                            setbudgetpercentage(e.target.value)\n                                        }}\n                                        required\n                                        placeholder=\"1\"\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col md='12' className='text-center' style={{ paddingTop: '23px' }}>\n                                {\n                                    SelectedMerchantLoading ? <Button.Ripple color='primary' className='mr-1' disabled>\n                                        <Spinner color='white' size='sm' />\n                                        <span className='ml-50'>Loading...</span>\n                                    </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' type=\"submit\">\n                                        <span >Submit</span>\n                                    </Button.Ripple>\n                                }\n                            </Col>\n                        </Row>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </>\n    )\n}\n\nexport default MrchntBudgetTable","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n","\n//Ex-> '1234567891' to '1234 567 891'\nexport const FormatePhoneNo = (phone) => {\n    const phonenoinstring = String(phone)\n    return phonenoinstring.replace(/^(.{4})(.*)(.{3})$/, '$1 $2 $3')\n}\n\nconst options = { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' }\n\nexport const formatReadableDate = (date) => { return (new Date(date)).toLocaleDateString(undefined, options) }\n\nexport const validateEmail = (email) => {\n    return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\n}\n\nexport const thousandSeparator = (x) => { return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") }\n\nexport const handle401 = async (status) => {\n    if (status === 401) {\n        window.location.href = '/Adminlogin'\n        await localStorage.clear()\n    }\n}\n\nexport const ExportCSV = (array, keys, CSVname) => {\n    // ** Downloads CSV\n    // const keys = ['name', 'email', 'mobile']\n    // ** Converts table to CSV\n    function convertArrayOfObjectsToCSV(array) {\n        let result\n        const columnDelimiter = ','\n        const lineDelimiter = '\\n'\n        result = ''\n        result += keys.join(columnDelimiter)\n        result += lineDelimiter\n\n        array.forEach(item => {\n            let ctr = 0\n            keys.forEach(key => {\n                if (ctr > 0) result += columnDelimiter\n                result += item[key]\n                ctr++\n            })\n            result += lineDelimiter\n        })\n        return result\n    }\n    const link = document.createElement('a')\n    let csv = convertArrayOfObjectsToCSV(array)\n    if (csv === null) return\n    const userData = JSON.parse(localStorage.getItem('userData'))\n    const filename = `${CSVname}_${new Date().toISOString()}_${userData['fullname'].replaceAll(/\\s/g, '')}.csv`\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n        csv = `data:text/csv;charset=utf-8,${csv}`\n    }\n\n    link.setAttribute('href', encodeURI(csv))\n    link.setAttribute('download', filename)\n    link.click()\n}","import React, { Fragment, useState, useEffect } from 'react'\nimport {\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft\n} from 'react-feather'\nimport {\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink\n} from 'reactstrap'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\n\nconst CommonDataTable = ({ column, TableData, TableDataLoading }) => {\n    const [currentPage, setCurrentPage] = useState(0)\n\n    // ** Function to handle Pagination\n    const handlePagination = page => {\n        setCurrentPage(page.selected)\n    }\n    // ** Custom Pagination\n    const CustomPagination = () => (\n        <ReactPaginate\n            previousLabel=''\n            nextLabel=''\n            forcePage={currentPage}\n            onPageChange={page => handlePagination(page)}\n            pageCount={TableData.length ? TableData.length / 10 : 1}\n            breakLabel='...'\n            pageRangeDisplayed={2}\n            marginPagesDisplayed={2}\n            activeClassName='active'\n            pageClassName='page-item'\n            breakClassName='page-item'\n            breakLinkClassName='page-link'\n            nextLinkClassName='page-link'\n            nextClassName='page-item next'\n            previousClassName='page-item prev'\n            previousLinkClassName='page-link'\n            pageLinkClassName='page-link'\n            breakClassName='page-item'\n            breakLinkClassName='page-link'\n            containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        />\n    )\n    return (\n        <Fragment>\n            <DataTable\n                noHeader\n                pagination\n                /*selectableRows*/\n                columns={column}\n                paginationPerPage={10}\n                className='react-dataTable'\n                sortIcon={<ChevronDown size={10} />}\n                paginationDefaultPage={currentPage + 1}\n                paginationComponent={CustomPagination}\n                data={TableData}\n                progressPending={TableDataLoading}\n                progressComponent={<Spinner color='primary' />}\n                responsive={true}\n            /*selectableRowsComponent={BootstrapCheckbox}*/\n            />\n        </Fragment>\n    )\n}\n\nexport default CommonDataTable"],"sourceRoot":""}