{"version":3,"sources":["views/tables/data-tables/basic/AdminComponent/QuotaManagement/CreateQuota.js","views/viewhelper.js","assets/images/icons/notification 3.svg","assets/images/icons/clarity_email-solid.svg","assets/images/icons/Instagram_logo_2016 1.svg","assets/images/icons/fa6-solid_comment-sms.svg","assets/images/icons/logos_whatsapp.svg","assets/images/icons/google_svg 1.svg","assets/images/icons/ant-design_facebook-filled.svg"],"names":["CreateQuota","userData","JSON","parse","localStorage","getItem","_useRTL","useRTL","_useRTL2","_slicedToArray","_useState","useState","_useState2","pointRuleloading","setPointRuleloading","history","useHistory","_useState3","_useState4","budget","setBudget","_useState5","_useState6","title","setTitle","_useState7","_useState8","budgetLimit","setBudgetLimit","_useState9","_useState10","upRange","setupRange","_useState11","_useState12","facebook","setfacebook","_useState13","_useState14","googleV","setgoogle","_useState15","_useState16","whatsapp","setwhatsapp","_useState17","_useState18","smsV","setsms","_useState19","_useState20","instagram","setinstagram","_useState21","_useState22","email","_useState23","_useState24","push_notification","_useState25","_useState26","smsRate","setsmsRate","useEffect","useJwt","getSmsRate","then","response","_response$data$payloa","_response$data$payloa2","console","log","data","payload","per_sms_cost","catch","error","Error","_jsxs","Fragment","children","_jsx","Button","Ripple","className","color","tag","Link","to","role","ChevronLeft","size","style","marginRight","Form","width","onSubmit","e","preventDefault","toast","createQuotaList","total_budget","google","sms","Success","push","autoComplete","borderRadius","Input","type","name","id","value","onChange","target","required","placeholder","min","parseInt","Row","Col","sm","Card","CardHeader","CardTitle","CustomInput","inline","defaultChecked","disabled","toFixed","CardBody","paddingTop","paddingLeft","paddingRight","src","fb","FormGroup","Slider","max","reverse","tooltip","orientation","wapp","concat","insta","Spinner","err","status","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","success"],"mappings":"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","file":"static/js/45.f699be94.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useMemo, useState } from 'react'\nimport axios from 'axios'\nimport {\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft\n} from 'react-feather'\nimport {\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput\n} from 'reactstrap'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport { useRTL } from '@hooks/useRTL'\nimport { Error, Success, ErrorMessage } from '../../../../../viewhelper'\nimport { Link, useHistory } from 'react-router-dom'\nimport notification from '../../../../../../assets/images/icons/notification 3.svg'\nimport mail from '../../../../../../assets/images/icons/clarity_email-solid.svg'\nimport insta from '../../../../../../assets/images/icons/Instagram_logo_2016 1.svg'\nimport sms from '../../../../../../assets/images/icons/fa6-solid_comment-sms.svg'\nimport wapp from '../../../../../../assets/images/icons/logos_whatsapp.svg'\nimport google from '../../../../../../assets/images/icons/google_svg 1.svg'\nimport fb from '../../../../../../assets/images/icons/ant-design_facebook-filled.svg'\nimport Nouislider from 'nouislider-react'\nimport '@styles/react/libs/noui-slider/noui-slider.scss'\nimport Slider from 'react-rangeslider'\nimport 'react-rangeslider/lib/index.css'\nimport { toast } from 'react-toastify'\nimport { reducer } from '@uppy/store-redux'\nimport './ind.css'\n\nconst CreateQuota = () => {\n    const userData = JSON.parse(localStorage.getItem('userData'))\n    const [isRtl, setIsRtl] = useRTL()\n    const [pointRuleloading, setPointRuleloading] = useState(false)\n    const history = useHistory()\n    const [budget, setBudget] = useState(0.1)\n    const [title, setTitle] = useState('')\n    const [budgetLimit, setBudgetLimit] = useState(0)\n    const [upRange, setupRange] = useState(0.1)\n    const [facebook, setfacebook] = useState(0)\n    const [googleV, setgoogle] = useState(0)\n    const [whatsapp, setwhatsapp] = useState(0)\n    const [smsV, setsms] = useState(0)\n    const [instagram, setinstagram] = useState(0)\n    const [email, setemail] = useState(1)\n    const [push_notification, setpush_notification] = useState(1)\n    const [smsRate, setsmsRate] = useState(1)\n\n    useEffect(() => {\n        useJwt.getSmsRate().then((response) => {\n            console.log(response.data.payload?.per_sms_cost)\n            setsmsRate(response.data.payload?.per_sms_cost)\n        }).catch((error) => {\n            Error(error)\n            console.log(error)\n        })\n\n    }, [])\n    const onSubmit = (e) => {\n        e.preventDefault()\n        console.log({ facebook, googleV, whatsapp, smsV, email, push_notification, instagram, budget, title })\n        const isEqual = (budget - (facebook + googleV + whatsapp + (smsV * smsRate) + instagram)) < 1 && (budget - (facebook + googleV + whatsapp + (smsV * smsRate) + instagram)) >= 0\n        if (!isEqual) {\n            toast.error('Please,  fulfill your budget quota!')\n            return 0\n        }\n        setPointRuleloading(true)\n        useJwt.createQuotaList({ title, total_budget:budget, facebook, google: googleV, whatsapp, sms: smsV, email, push_notification, instagram }).then((response) => {\n            setPointRuleloading(false)\n            Success(response)\n            history.push(userData?.role === 'vendor' ? '/allQuotaVendor' : '/allQuota')\n        }).catch((error) => {\n            setPointRuleloading(false)\n            Error(error)\n            console.log(error)\n        })\n    }\n    return (\n        <Fragment>\n            <Button.Ripple className='mb-1' color='primary' tag={Link} to={userData?.role === 'vendor' ? '/allQuotaVendor' : '/allQuota'} >\n                <div className='d-flex align-items-center'>\n                    <ChevronLeft size={17} style={{ marginRight: '5px' }} />\n                    <span >Back</span>\n                </div>\n            </Button.Ripple>\n            <Form style={{ width: '100%' }} onSubmit={onSubmit} autoComplete=\"off\">\n                <div className='d-flex justify-content-center mb-2 mt-2'>\n                    <div className='d-flex align-items-center bg-white p-1 mr-1' style={{ borderRadius: '10px' }}>\n                        <h4 className='mr-1 mb-0 text-primary'>Title<span style={{ color: 'red' }}>*</span></h4>\n                        <Input type=\"text\"\n                            name=\"title\"\n                            id='title'\n                            style={{ width: '60%' }}\n                            value={title}\n                            onChange={e => {\n                                setTitle(e.target.value)\n                            }}\n                            required\n                            placeholder=\"title here...\"\n                        />\n                    </div>\n                    {/* <div className='d-flex justify-content-center mb-2 mt-2'> */}\n                    <div className='d-flex align-items-center bg-white p-1' style={{ borderRadius: '10px' }}>\n                        <h4 className='mr-1 mb-0 text-primary'>Total Budget<span style={{ color: 'red' }}>*</span></h4>\n                        <Input type=\"number\"\n                            name=\"budget\"\n                            id='budget'\n                            style={{ width: '60%' }}\n                            value={budget}\n                            min={0}\n                            onChange={e => {\n                                setupRange(parseInt(e.target.value))\n                                setBudget(parseInt(e.target.value))\n                                setBudgetLimit(parseInt(e.target.value))\n                                setfacebook(0)\n                                setgoogle(0)\n                                setwhatsapp(0)\n                                setsms(0)\n                                setinstagram(0)\n                            }}\n                            required\n                            placeholder=\"0\"\n                        />\n                    </div>\n                </div>\n                <Row>\n                    <Col>\n                        <h4 className='mb-1'>Free Channels</h4>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm='6'>\n                        <Card>\n                            <CardHeader className='border-bottom'>\n                                <CardTitle tag='h4'>Email</CardTitle>\n                                {/* <img src={mail}/> */}\n                                <CustomInput type='checkbox' id='primary' name='primary' inline defaultChecked disabled />\n                            </CardHeader>\n                            {/* <CardBody style={{ paddingTop: '15px' }}>\n                                <Row>\n                                    <Col sm=\"12\" >\n                                        <FormGroup>\n                                            <Nouislider\n                                                connect='lower'\n                                                start={0}\n                                                direction={isRtl === true ? 'rtl' : 'ltr'}\n                                                orientation='horizontal'\n                                                range={{\n                                                    min: 0,\n                                                    max: 500\n                                                }}\n                                                tooltips={true}\n                                                style={{\n                                                    marginTop: '30px'\n                                                }}\n                                                onChange={e => setemail(parseInt(e[0]))}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                            </CardBody> */}\n                        </Card>\n                    </Col>\n                    <Col sm='6'>\n                        <Card>\n                            <CardHeader className='border-bottom'>\n                                <CardTitle tag='h4'>Push Notification</CardTitle>\n                                <CustomInput type='checkbox' id='primary' name='primary' inline defaultChecked disabled />\n                            </CardHeader>\n                            {/* <CardBody style={{ paddingTop: '15px' }}>\n                                <Row>\n                                    <Col sm=\"12\" >\n                                        <FormGroup>\n                                            <Nouislider\n                                                connect='lower'\n                                                start={0}\n                                                direction={isRtl === true ? 'rtl' : 'ltr'}\n                                                orientation='horizontal'\n                                                range={{\n                                                    min: 0,\n                                                    max: 500\n                                                }}\n                                                tooltips={true}\n                                                style={{\n                                                    marginTop: '30px'\n                                                }}\n                                                onChange={e => setpush_notification(parseInt(e[0]))}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                            </CardBody> */}\n                        </Card>\n                    </Col>\n                </Row>\n                <Card>\n                    <CardHeader className='border-bottom'>\n                        <CardTitle tag='h4'>Paid Channels</CardTitle>\n                        {budgetLimit !== 0 && < CardTitle tag='h4'>Remaining : {budgetLimit.toFixed(2)}</CardTitle>}\n                    </CardHeader>\n                    <CardBody style={{ paddingTop: '15px', paddingLeft: '60px', paddingRight: '60px' }}>\n                        <Row className='pb-2 border-bottom border-bottom'>\n                            <Col sm=\"6\" >\n                                <div className='d-flex align-items-center'>\n                                    <img className='mr-1' src={fb} />\n                                    <h4>Facebook</h4>\n                                </div>\n                            </Col>\n                            <Col sm=\"6\" >\n                                <FormGroup>\n                                    <Slider\n                                        min={0}\n                                        max={upRange}\n                                        reverse={false}\n                                        value={facebook}\n                                        tooltip={true}\n                                        orientation=\"horizontal\"\n                                        disabled={budget === 0}\n                                        onChange={e => {\n                                            // console.log(parseInt(e))\n                                            if (budgetLimit > 0 || (parseInt(e) < facebook)) {\n                                                if ((budgetLimit - (parseInt(e) - facebook)) >= 0) {\n                                                    setBudgetLimit(budgetLimit - (parseInt(e) - facebook))\n                                                    setfacebook(parseInt(e))\n                                                }\n                                            }\n                                        }}\n                                    />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                        <Row className='pb-2 pt-1 border-bottom'>\n                            <Col sm=\"6\" >\n                                <div className='d-flex align-items-center'>\n                                    <img className='mr-1' src={google} />\n                                    <h4>Google</h4>\n                                </div>\n                            </Col>\n                            <Col sm=\"6\" >\n                                <FormGroup>\n                                    <Slider\n                                        min={0}\n                                        max={upRange}\n                                        reverse={false}\n                                        value={googleV}\n                                        tooltip={true}\n                                        orientation=\"horizontal\"\n                                        disabled={budget === 0}\n                                        onChange={e => {\n                                            if (budgetLimit > 0 || (parseInt(e) < googleV)) {\n                                                if ((budgetLimit - (parseInt(e) - googleV)) >= 0) {\n                                                    setBudgetLimit(budgetLimit - (parseInt(e) - googleV))\n                                                    // setBudget(budget - (parseInt(e) - googleV))\n                                                    setgoogle(parseInt(e))\n                                                }\n\n                                            }\n                                        }}\n                                    />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                        <Row className='pb-2 pt-1 border-bottom'>\n                            <Col sm=\"6\" >\n                                <div className='d-flex align-items-center'>\n                                    <img className='mr-1' src={wapp} />\n                                    <h4>WhatsApp</h4>\n                                </div>\n                            </Col>\n                            <Col sm=\"6\" >\n                                <FormGroup>\n                                    <Slider\n                                        min={0}\n                                        max={upRange}\n                                        reverse={false}\n                                        value={whatsapp}\n                                        tooltip={true}\n                                        orientation=\"horizontal\"\n                                        disabled={budget === 0}\n                                        onChange={e => {\n                                            if (budgetLimit > 0 || (parseInt(e) < whatsapp)) {\n                                                if ((budgetLimit - (parseInt(e) - whatsapp)) >= 0) {\n                                                    setBudgetLimit(budgetLimit - (parseInt(e) - whatsapp))\n                                                    // setBudget(budget - (parseInt(e) - whatsapp))\n                                                    setwhatsapp(parseInt(e))\n                                                }\n                                            }\n                                        }}\n                                    />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                        <Row className='pb-2 pt-1 border-bottom'>\n                            <Col sm=\"6\" >\n                                <div className='d-flex align-items-center'>\n                                    <img className='mr-1' src={sms} />\n                                    <h4>SMS {`(${smsRate} per sms)`}</h4>\n                                </div>\n                            </Col>\n                            <Col sm=\"6\" >\n                                <FormGroup>\n                                    <Slider\n                                        min={0}\n                                        max={upRange / smsRate}\n                                        reverse={false}\n                                        value={smsV}\n                                        tooltip={true}\n                                        orientation=\"horizontal\"\n                                        disabled={budget === 0}\n                                        onChange={e => {\n                                            if (budgetLimit >= smsRate || (parseInt(e) < smsV)) {\n                                                if ((budgetLimit - ((parseInt(e) - smsV) * smsRate)) >= 0) {\n                                                    setBudgetLimit(budgetLimit - ((parseInt(e) - smsV) * smsRate))\n                                                    // setBudget(budget - (parseInt(e) - smsV))\n                                                    setsms(parseInt(e))\n                                                }\n                                            }\n                                        }}\n                                    />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                        <Row className='pt-1'>\n                            <Col sm=\"6\" >\n                                <div className='d-flex align-items-center'>\n                                    <img className='mr-1' src={insta} />\n                                    <h4>Instagram</h4>\n                                </div>\n                            </Col>\n                            <Col sm=\"6\" >\n                                <FormGroup>\n                                    <Slider\n                                        min={0}\n                                        max={upRange}\n                                        reverse={false}\n                                        value={instagram}\n                                        tooltip={true}\n                                        orientation=\"horizontal\"\n                                        disabled={budget === 0}\n                                        onChange={e => {\n                                            if (budgetLimit > 0 || (parseInt(e) < instagram)) {\n                                                if ((budgetLimit - (parseInt(e) - instagram)) >= 0) {\n                                                    setBudgetLimit(budgetLimit - (parseInt(e) - instagram))\n                                                    // setBudget(budget - (parseInt(e) - instagram))\n                                                    setinstagram(parseInt(e))\n                                                }\n                                            }\n                                        }}\n                                    />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n                <Card>\n                    <CardBody>\n                        <Row>\n                            <Col sm=\"12\" className='text-center'>\n                                {\n                                    pointRuleloading ? <Button.Ripple color='primary' className='mr-1' disabled>\n                                        <Spinner color='white' size='sm' />\n                                        <span className='ml-50'>Loading...</span>\n                                    </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' type=\"submit\">\n                                        <span >Submit</span>\n                                    </Button.Ripple>\n                                }\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Form>\n        </Fragment >\n    )\n}\n\nexport default CreateQuota","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n","export default __webpack_public_path__ + \"static/media/notification 3.4394d461.svg\";","export default __webpack_public_path__ + \"static/media/clarity_email-solid.3ca72f78.svg\";","export default __webpack_public_path__ + \"static/media/Instagram_logo_2016 1.122983bb.svg\";","export default __webpack_public_path__ + \"static/media/fa6-solid_comment-sms.eaf22ed7.svg\";","export default __webpack_public_path__ + \"static/media/logos_whatsapp.4af9df8a.svg\";","export default __webpack_public_path__ + \"static/media/google_svg 1.051baa93.svg\";","export default __webpack_public_path__ + \"static/media/ant-design_facebook-filled.e2dd56f6.svg\";"],"sourceRoot":""}