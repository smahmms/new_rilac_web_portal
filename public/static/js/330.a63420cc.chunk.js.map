{"version":3,"sources":["views/pages/misc/PaymentSuccess.js","views/viewhelper.js","../node_modules/reactstrap/es/Spinner.js","assets/images/pages/coming-soon.svg"],"names":["ToastContent","_ref","name","role","_jsxs","Fragment","children","_jsx","className","Avatar","size","color","icon","Coffee","PaymentSuccess","_useState","useState","_useState2","_slicedToArray","paymentSuccess","setPaymentSuccess","dispatch","useDispatch","history","useLocation","search","useHistory","ability","useContext","AbilityContext","query","URLSearchParams","location","JSON","parse","localStorage","getItem","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","card_id","user_id","wrap","_context2","prev","next","get","setItem","useJwt","goCardLessPaymentSuccess","then","_ref3","_callee","res","data","_context","console","log","payload","_objectSpread","user_info","accessToken","token","refreshToken","extras","eCommerceCartItemsCount","action","subject","handleLogin","update","toast","success","username","transition","Slide","hideProgressBar","autoClose","getBMStoken","BMS_USER","password","BMS_PASS","jwtToken","catch","err","customerbusinesslistbymobileno","mobile","Number","mobileno","stringify","push","getHomeRouteForLoggedInUser","Error","stop","_x","apply","arguments","response","href","style","window","TukitakiThemeColor","Spinner","src","comingSoonImg","alt","e","status","error","message","position","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","Success","propTypes","tag","tagPropType","type","PropTypes","string","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/330.a63420cc.chunk.js","sourcesContent":["import useJwt from '@src/auth/jwt/useJwt'\nimport Avatar from '@components/avatar'\nimport React, { Fragment, useEffect, useState, useContext } from 'react'\nimport { Button, Form, Input, Row, Col, Spinner } from 'reactstrap'\nimport comingSoonImg from '@src/assets/images/pages/coming-soon.svg'\nimport { useLocation, useSearchParams, useHistory } from 'react-router-dom'\nimport { Error } from '../../viewhelper'\nimport { useDispatch } from 'react-redux'\nimport { handleLogin } from '../../../redux/actions/auth'\nimport { AbilityContext } from '@src/utility/context/Can'\nimport { Slide, toast } from 'react-toastify'\nimport { Coffee } from 'react-feather'\nimport '@styles/base/pages/page-misc.scss'\nimport {BMS_USER, BMS_PASS} from '../../../Configurables'\nimport { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\n\n\nconst ToastContent = ({ name, role }) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\n        <h6 className='toast-title font-weight-bold'>Welcome, {name}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span>You have successfully logged in as an {role} user to system. Now you can start to explore. Enjoy!</span>\n    </div>\n  </Fragment>\n)\n\nconst PaymentSuccess = () => {\n\n  const [paymentSuccess, setPaymentSuccess] = useState(null)\n  const dispatch = useDispatch()\n  const {search} = useLocation()\n  const history = useHistory()\n  const ability = useContext(AbilityContext)\n\n  // const searchParams = new URLSearchParams(search)\n  // const useQuery = () => new URLSearchParams(useLocation().search)\n  const query = new URLSearchParams(location.search)\n\n\n  const userData = JSON.parse(localStorage.getItem('registration_data'))\n  useEffect(async () => {\n    const card_id = query.get('card_id')\n    const user_id = query.get('user_id')\n\n\n    localStorage.setItem('usePMStoken', false) //for token management\n    localStorage.setItem('useBMStoken', false) //for token management\n    setPaymentSuccess(\"pending\")\n    await useJwt.goCardLessPaymentSuccess({card_id, user_id}).then(async res => {\n      setPaymentSuccess(\"success\")\n        console.log(res)\n        console.log(res.data.payload)\n        console.log(res.data.payload.payload)\n\n        const data = {\n          ...res.data.payload.payload.user_info,\n          // avatar: \"https://i.imgur.com/P4b2RHh.png\",\n          accessToken: res.data.payload.payload.token,\n          refreshToken: res.data.payload.payload.token,\n          extras: {\n            eCommerceCartItemsCount: 5\n          },\n          role: 'vendor',\n          ability: [\n            {\n              action: 'manage',\n              subject: 'VENDOR'\n            },\n            {\n              action: 'manage',\n              subject: 'Auth'\n            }\n          ]\n        }\n\n        dispatch(handleLogin(data))\n        ability.update(data.ability)\n        // localStorage.setItem('username', email)\n        toast.success(\n          <ToastContent name={data.username} role={data.role} />,\n          { transition: Slide, hideProgressBar: true, autoClose: 2000 }\n        )\n\n        // await useJwt.getPMStoken({ username: \"dddd\", module: \"kkk\" }).then(res => {\n        //   localStorage.setItem('PMStoken', res.data.data.access_token)\n        //   localStorage.setItem(\"usePMStoken\", false)\n        // }).catch(err => {\n        //   console.log('getPMStoken', err)\n        // })\n        \n        localStorage.setItem(\"usePMStoken\", false)\n        localStorage.setItem(\"BMSCall\", true)\n        await useJwt.getBMStoken({ username: BMS_USER, password: BMS_PASS }).then(res => {\n          localStorage.setItem('BMStoken', res.data.jwtToken)\n          localStorage.setItem(\"BMSCall\", false)\n        }).catch(err => {\n          localStorage.setItem(\"BMSCall\", false)\n          console.log(err)\n        })\n        \n        await useJwt.customerbusinesslistbymobileno({ mobile: Number(res.data.payload.payload.user_info.mobileno) }).then(res =>  {\n          console.log(res)\n           localStorage.setItem('customerBusinesses', JSON.stringify(res.data.payload))\n           history.push(getHomeRouteForLoggedInUser(data.role))\n        }).catch(err => {\n          Error(err)\n          console.log(err)\n        })\n        \n    }).catch(err => {\n      Error(err)\n      console.log(err)\n      console.log(err.response)\n        // if (err.response?.status === 401) {\n        //     localStorage.setItem(\"BMSCall\", true)\n        //     useJwt.getBMStoken({ username: BMS_USER, password: BMS_PASS }).then(res => {\n        //       localStorage.setItem('BMStoken', res.data.jwtToken)\n        //       localStorage.setItem(\"BMSCall\", false)\n        //       setReset(!resetData)\n        //     }).catch(err => {\n        //       localStorage.setItem(\"BMSCall\", false)\n        //       console.log(err)\n        //     })\n        // } else {\n        //     Error(err)\n        //     console.log(err)\n        //     setTableDataLoading(false)\n        //     localStorage.setItem('useBMStoken', false)\n        // }\n    })\n   \n}, [])\n  return (\n    <div className='misc-wrapper'>\n      <a className='brand-logo' href='/'>\n        <h2 style={{ color: window.TukitakiThemeColor }} className='brand-text ml-1'>RILAC</h2>\n      </a>\n      <div className='misc-inner p-2 p-sm-3'>\n        <div className='w-100 text-center'>\n          {\n            paymentSuccess === \"pending\" ? <div> \n            <h2 className='mb-1'>Payment is Processing... </h2> \n            <Spinner/>\n             </div> : paymentSuccess === \"success\" ?  <div>\n            <h2 className='mb-1'>Payment Successful 🚀</h2>\n            <p className='mb-3'>Logging into Dashboard</p>\n            </div> : \"\"\n          }\n          <img className='img-fluid' src={comingSoonImg} alt='Coming soon page' />\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default PaymentSuccess\n","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/coming-soon.539770ed.svg\";"],"sourceRoot":""}