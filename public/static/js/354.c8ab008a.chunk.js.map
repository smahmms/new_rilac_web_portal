{"version":3,"sources":["views/AdminComponents/UserRole/listView.js","views/AdminComponents/UserRole/ViewDetails.js","views/AdminComponents/UserRole/otherPendingList.js","views/AdminComponents/UserRole/mypendingList.js","views/AdminComponents/UserRole/index.js","views/viewhelper.js","views/helper.js","views/VendorComponents/ClientSideDataTable.js"],"names":["MySwal","withReactContent","Swal","ListView","_ref","TableDataLoading","roleList","history","setRefresh","refresh","_useState","useState","_useState2","_slicedToArray","searchValue","setSearchValue","_useState3","_useState4","filteredData","setFilteredData","column","name","minWidth","sortable","selector","row","length","created_at","formatReadableDate","user_type","_jsxs","Fragment","children","_jsx","title","Eye","size","color","style","cursor","onClick","push","concat","id","Edit","e","Trash","message","fire","_defineProperty","text","icon","allowOutsideClick","allowEscapeKey","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","showLoaderOnConfirm","preConfirm","useJwt","deleteRole","role_id","then","res","Success","console","log","catch","err","response","Error","buttonsStyling","isLoading","result","isConfirmed","showConfirmButton","Card","CardHeader","Row","width","Col","className","sm","Label","for","Input","maxWidth","type","bsSize","value","onChange","target","updatedData","filter","item","_item$role_name","_item$role_name2","startsWith","role_name","toLowerCase","includes","UncontrolledButtonDropdown","DropdownToggle","caret","outline","Share","DropdownMenu","right","DropdownItem","ExportCSV","Object","keys","FileText","CardBody","md","CommonDataTable","TableData","ViewDetailsModal","modal","toggleModal","roleInfo","action","_useState5","_useState6","_useState7","_useState8","roleWiseApprovedList","setRoleWiseApprovedList","_useState9","_useState10","addUserloading","setaddUserloading","useEffect","getApprovalEntryforRole","_step","itemArr","_iterator","_createForOfIteratorHelper","data","payload","module_data","roles","_loop","approvedby","approved","find","i","approved_by","approved_at","s","n","done","f","Modal","isOpen","toggle","border","ModalHeader","ModalBody","CardTitle","Table","map","index","Spinner","Button","Ripple","disabled","marginTop","actionRole","action_id","OtherPendingListView","user","JSON","parse","localStorage","getItem","setAction","setRoleInfo","setModal","created_by","_Fragment","CheckCircle","DetailsModal","UserRoleList","Array2D","x","submenu","y","subMenuIDs","apply","_toConsumableArray","useHistory","setRoleList","pendingRoleList","setPendingRoleList","mypendingRoleList","setMyPendingRoleList","setTableDataLoading","_useState11","_useState12","activeTab","setActiveTab","tab","setItem","List","PendingList","MyPendingList","tag","Link","to","Plus","marginRight","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","OtherPending","status","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","success","options","year","month","day","hour","minute","date","Date","toLocaleDateString","thousandSeparator","toString","replace","handle401","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","window","location","href","clear","stop","_x","arguments","array","CSVname","link","document","createElement","csv","join","forEach","ctr","key","convertArrayOfObjectsToCSV","userData","filename","toISOString","replaceAll","match","setAttribute","encodeURI","click","currentPage","setCurrentPage","DataTable","noHeader","pagination","columns","paginationPerPage","sortIcon","ChevronDown","paginationDefaultPage","paginationComponent","_jsx2","ReactPaginate","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","progressPending","progressComponent","responsive"],"mappings":"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","file":"static/js/354.c8ab008a.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport { FileText, Share, Edit, Trash, Eye } from 'react-feather'\nimport { Badge, Card, CardBody, CardHeader, Col, DropdownItem, DropdownMenu, DropdownToggle, Input, Label, Row, UncontrolledButtonDropdown } from 'reactstrap'\nimport CommonDataTable from '../../VendorComponents/ClientSideDataTable'\nimport { ExportCSV, formatReadableDate } from '../../helper'\nimport { Error, Success } from '../../viewhelper'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport withReactContent from 'sweetalert2-react-content'\nimport Swal from 'sweetalert2'\nconst MySwal = withReactContent(Swal)\n\nconst ListView = ({TableDataLoading, roleList, history, setRefresh, refresh}) => {\n    const [searchValue, setSearchValue] = useState('')\n    const [filteredData, setFilteredData] = useState([])\n    const handleDelete = (id, message) => {\n        return MySwal.fire({\n            title: 'Are you sure?',\n            text: message,\n            icon: 'warning',\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n            showCancelButton: true,\n            confirmButtonText: 'Yes',\n            customClass: {\n                confirmButton: 'btn btn-primary',\n                cancelButton: 'btn btn-danger ml-1'\n            },\n            showLoaderOnConfirm: true,\n            preConfirm: () => {\n                return useJwt.deleteRole({ role_id: id }).then(res => {\n                    Success(res)\n                    console.log(res)\n                    setRefresh(!refresh)\n                }).catch(err => {\n                    console.log(err.response)\n                    Error(err)\n                })\n            },\n            buttonsStyling: false,\n            allowOutsideClick: () => !Swal.isLoading()\n        }).then(function (result) {\n            if (result.isConfirmed) {\n            }\n        })\n    }\n\n    const handleDeleteWarning = () => {\n        return MySwal.fire({\n            title: 'Delete assigned users first',\n            icon: 'warning',\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n            showCancelButton: true,\n            showConfirmButton : false,\n            customClass: {\n                cancelButton: 'btn btn-danger ml-1'\n            },\n            showLoaderOnConfirm: false,\n            buttonsStyling: false\n        }).then(function (result) {\n            if (result.isConfirmed) {\n            }\n        })\n    }\n\n    const column = [\n        {\n            name: 'Role Name',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'role_name'\n        },\n        {\n            name: 'Assign-user-count',\n            minWidth: '100px',\n            sortable: true,\n            selector: (row) => row['users'].length\n        },\n        {\n            name: 'Created By',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'created_by'\n        },\n        {\n            name: 'Created At',\n            minWidth: '250px',\n            sortable: true,\n            selector: row => {\n                return row.created_at ? formatReadableDate(row.created_at) : ''\n            }\n        },\n        {\n            name: 'Action',\n            minWidth: '150px',\n            // sortable: true,\n            selector: row => {\n                return row.user_type === 200 ? 'Super Admin' : <Fragment>\n                <span title=\"View\">\n                        <Eye size={15}\n                            color='dodgerblue'\n                            style={{ cursor: 'pointer' }}\n                            onClick={() => {\n                                history.push(`/viewUserRole/${row.id}`)\n                            }}\n                        />\n                    </span>\n                    &nbsp;&nbsp;&nbsp;&nbsp;\n                <span title=\"Edit\">\n                    <Edit size={15} color='blue'\n                     style={{ cursor: 'pointer' }}\n                        onClick={e => {\n                            history.push(`/editUserRole/${row.id}`)\n                        }}\n                    />\n                </span>&nbsp;&nbsp;&nbsp;&nbsp;\n                <span title=\"Delete\">\n                    <Trash size={15}\n                        color='red'\n                        style={{ cursor: 'pointer' }}\n                        onClick={(e) => {\n                            if (row['users'].length === 0) {\n                                handleDelete(row.id, 'Do you want to delete?')\n                            } else {\n                                handleDeleteWarning()\n                            }\n                        }}\n                    />\n                </span>\n            </Fragment>\n            }\n        }\n    ]\n    // ** Function to handle filter\n    const handleFilter = e => {\n        const value = e.target.value\n        let updatedData = []\n        setSearchValue(value)\n\n        if (value.length) {\n        updatedData = roleList.filter(item => {\n            const startsWith =\n            item.role_name?.toLowerCase().startsWith(value.toLowerCase()) \n\n            const includes =\n            item.role_name?.toLowerCase().includes(value.toLowerCase())\n\n            if (startsWith) {\n            return startsWith\n            } else if (!startsWith && includes) {\n            return includes\n            } else return null\n        })\n        setFilteredData(updatedData)\n        setSearchValue(value)\n        }\n    }\n    return (\n        <Card>\n            <CardHeader>\n\n               <Row style={{width: '100%'}}>\n                        <Col className='d-flex align-items-center mt-1' sm='6'>\n                            <Label className='mr-1' for='search-input'>\n                            Search\n                            </Label>\n                            <Input\n                            style={{maxWidth: 300}}\n                            className='dataTable-filter mb-50'\n                            type='text'\n                            bsSize='sm'\n                            id='search-input'\n                            value={searchValue}\n                            onChange={handleFilter}\n                            />\n                        </Col>\n                        <Col className='d-flex align-items-center justify-content-end mt-1' sm='6'>\n                            <UncontrolledButtonDropdown className='ml-1'>\n                                    <DropdownToggle color='secondary' caret outline>\n                                        <Share size={15} />\n                                        <span className='align-middle ml-50'>Export</span>\n                                    </DropdownToggle>\n                                    <DropdownMenu right>\n                                        <DropdownItem className='w-100' onClick={() => ExportCSV(roleList, Object.keys(roleList[0] || {}), 'User Role')}>\n                                            <FileText size={15} />\n                                            <span className='align-middle ml-50'>CSV</span>\n                                        </DropdownItem>\n                                    </DropdownMenu>\n                                </UncontrolledButtonDropdown>\n                        </Col>\n                    </Row>\n\n            </CardHeader>\n\n            <CardBody>\n            <Row>\n                <Col md='12'>\n                    <CommonDataTable column={column} TableData={searchValue.length ? filteredData : roleList} TableDataLoading={TableDataLoading} />\n                </Col>\n            </Row>\n            </CardBody>\n\n        </Card>\n    )\n}\n\nexport default ListView","import useJwt from '@src/auth/jwt/useJwt'\nimport { handle401 } from '@src/views/helper'\nimport { Fragment, useEffect, useState } from 'react'\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, CustomInput, Modal, ModalBody, ModalHeader, Row, Spinner, Table } from 'reactstrap'\nimport { Error, Success } from '../../viewhelper'\nimport { formatReadableDate } from '../../helper'\n\nconst ViewDetailsModal = ({ modal, toggleModal, roleInfo, setRefresh, refresh, action }) => {\n\nconst [ismenuloading, setmenuloading] = useState(true)\nconst [featureIDs, setFeatureIDs] = useState([])\nconst [sub_menu_ids, setSubmenuIDs] = useState([])\nconst [roleWiseApprovedList, setRoleWiseApprovedList] = useState([])\nconst [addUserloading, setaddUserloading] = useState(false)\nconsole.log(roleInfo)\n\nuseEffect(() => {\n    if (roleInfo.id) {\n        useJwt.getApprovalEntryforRole(roleInfo.id).then(res => {\n            console.log(res)\n            const itemArr = []\n            for (const item of res.data.payload.module_data.roles) {\n                const approvedby = res.data.payload.approved.find(i => i.role_id === item.role_id)\n                if (approvedby) {\n                    itemArr.push({role_id: item.role_name, approved_by: approvedby.approved_by, approved_at: approvedby.approved_at})\n                } else {\n                    itemArr.push({role_id: item.role_name, approved_by: '--', approved_at: ''})\n                }\n            }\n            setRoleWiseApprovedList(itemArr)\n        }).catch(err => {\n            console.log(err)\n            Error(err)\n        })\n    }\n}, [roleInfo.id])\n\nconst handleApproveRejectActions = () => {\n    setaddUserloading(true)\n    useJwt.actionRole({ id:roleInfo.id, action_id: action }).then(res => {\n                setRefresh(!refresh)\n                Success(res)\n                setaddUserloading(false)\n                toggleModal()\n                console.log(res)\n            }).catch(err => {\n                // handle401(err.response.status)\n                console.log(err.response)\n                setaddUserloading(false)\n                toggleModal()\n                Error(err)\n            })\n}\n    return (\n        <Modal size=\"xl\" isOpen={modal} toggle={toggleModal} style={action === 1 ? {border:'2px solid green'} : action === 2 ? {border:'2px solid red'} : {}} >\n             <ModalHeader toggle={toggleModal}>{action === 1 ? 'Approve Role' : action === 2 ? 'Reject Role' : 'Role Details'}</ModalHeader>\n            <ModalBody>\n                <Row>\n                    <Col sm='12'>\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle>Approval Entry</CardTitle>\n                                </CardHeader>\n                                <CardBody>\n                                    <Row>\n                                        <Col sm=\"12\" >\n                                            <Table>\n                                                <tr>\n                                                    <th>Role Name</th>\n                                                    <th>Approved By</th>\n                                                    <th>Approved At</th>\n                                                </tr>\n                                                {\n                                                    roleWiseApprovedList?.length !== 0 ? roleWiseApprovedList?.map((item, index) => <tr key={index}>\n                                                        <td>{item.role_id}</td>\n                                                        <td>{item.approved_by}</td>\n                                                        <td>{item.approved_at ? formatReadableDate(item.approved_at || '') : '--'}</td>\n                                                    </tr>) : <Spinner className='text-center'/>\n                                                }\n                                            </Table>\n                                        </Col>\n                                    </Row>\n                                </CardBody>\n                            </Card>`\n                        </Col>\n                </Row>\n\n                <Row>\n                    <Col sm=\"12\" className='text-center'>\n                        {\n                            addUserloading ? <Button.Ripple color='primary' className='mr-1' disabled style={{ marginTop: '25px' }}>\n                                <Spinner color='white' size='sm' />\n                                <span className='ml-50'>Loading...</span>\n                            </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' onClick={handleApproveRejectActions} type=\"button\" style={{ marginTop: '25px' }}>\n                            <span >Confirm</span>\n                        </Button.Ripple>\n                        }\n                    </Col>\n                </Row>\n\n            </ModalBody>\n        </Modal>\n    )\n}\nexport default ViewDetailsModal","import React, { useState } from 'react'\nimport { FileText, Share, Trash, CheckCircle, Eye } from 'react-feather'\nimport { Card, CardHeader, Col, DropdownItem, DropdownMenu, DropdownToggle, Input, Label, Row, UncontrolledButtonDropdown, CardBody } from 'reactstrap'\nimport CommonDataTable from '../../VendorComponents/ClientSideDataTable'\nimport { ExportCSV, formatReadableDate } from '../../helper'\nimport { Error, Success } from '../../viewhelper'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport withReactContent from 'sweetalert2-react-content'\nimport Swal from 'sweetalert2'\nconst MySwal = withReactContent(Swal)\nimport DetailsModal from './ViewDetails'\n\nconst OtherPendingListView = ({TableDataLoading, roleList, history, setRefresh, refresh}) => {\n    const [searchValue, setSearchValue] = useState('')\n    const [filteredData, setFilteredData] = useState([])\n    const user = JSON.parse(localStorage.getItem('userData'))\n    const [action, setAction] = useState(0)\n    const [roleInfo, setRoleInfo] = useState({})\n    const [modal, setModal] = useState(false)\n    const toggleModal = () => setModal(!modal)\n    \n    const column = [\n        {\n            name: 'Role Name',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'role_name'\n        },\n        {\n            name: 'Assign-user-count',\n            minWidth: '100px',\n            sortable: true,\n            selector: (row) => row['users'].length\n        },\n        {\n            name: 'Created By',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'created_by'\n        },\n        {\n            name: 'Created At',\n            minWidth: '250px',\n            sortable: true,\n            selector: row => {\n                return row.created_at ? formatReadableDate(row.created_at) : ''\n            }\n        },\n        {\n            name: 'Request Action',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'action'\n        },\n        {\n            name: 'Action',\n            minWidth: '150px',\n            // sortable: true,\n            selector: row => {\n                return user.id === row.created_by ? 'Pending (You created this.)' : <>\n                <span title=\"View\">\n                        <Eye size={15}\n                            color='dodgerblue'\n                            style={{ cursor: 'pointer' }}\n                            onClick={() => {\n                                history.push(`/viewUserPendingRole/${row.id}`)\n                            }}\n                        />\n                    </span>\n                    &nbsp;&nbsp;&nbsp;&nbsp;\n                    <span title=\"Approve\">\n                        <CheckCircle size={15}\n                            color='dodgerblue'\n                            style={{ cursor: 'pointer' }}\n                            onClick={() => {\n                                // handlePoPupActions(row.id, 1)\n                                setRoleInfo(row)\n                                setModal(true)\n                                setAction(1)\n                            }}\n                        />\n                    </span>&nbsp;&nbsp;&nbsp;&nbsp;\n                    <span title=\"Reject\">\n                        <Trash size={15}\n                            color='red'\n                            style={{ cursor: 'pointer' }}\n                            onClick={() => {\n                                // handlePoPupActions(row.id, 2)\n                                setRoleInfo(row)\n                                setModal(true)\n                                setAction(2)\n                            }}\n                        />\n                    </span>\n                </>\n            }\n        }\n    ]\n    // ** Function to handle filter\n    const handleFilter = e => {\n        const value = e.target.value\n        let updatedData = []\n        setSearchValue(value)\n\n        if (value.length) {\n        updatedData = roleList.filter(item => {\n            const startsWith =\n            item.role_name?.toLowerCase().startsWith(value.toLowerCase()) \n\n            const includes =\n            item.role_name?.toLowerCase().includes(value.toLowerCase())\n\n            if (startsWith) {\n            return startsWith\n            } else if (!startsWith && includes) {\n            return includes\n            } else return null\n        })\n        setFilteredData(updatedData)\n        setSearchValue(value)\n        }\n    }\n    return (\n        <Card>\n\n            <CardHeader>\n\n            <Row style={{width: '100%'}}>\n                    <Col className='d-flex align-items-center mt-1' sm='6'>\n                        <Label className='mr-1' for='search-input'>\n                        Search\n                        </Label>\n                            <Input\n                                style={{maxWidth: 300}}\n                                className='dataTable-filter mb-50'\n                                type='text'\n                                bsSize='sm'\n                                id='search-input'\n                                value={searchValue}\n                                onChange={handleFilter}\n                                />\n                    </Col>\n                    <Col className='d-flex align-items-center justify-content-end mt-1' sm='6'>\n                            <UncontrolledButtonDropdown className='ml-1'>\n                                            <DropdownToggle color='secondary' caret outline>\n                                                <Share size={15} />\n                                                <span className='align-middle ml-50'>Export</span>\n                                            </DropdownToggle>\n                                            <DropdownMenu right>\n                                                <DropdownItem className='w-100' onClick={() => ExportCSV(roleList, Object.keys(roleList[0] || {}), 'User Role')}>\n                                                    <FileText size={15} />\n                                                    <span className='align-middle ml-50'>CSV</span>\n                                                </DropdownItem>\n                                            </DropdownMenu>\n                                        </UncontrolledButtonDropdown>\n                    </Col>\n                </Row>\n\n            </CardHeader>\n            <CardBody>\n            <Row>\n                <Col md='12'>\n                    <CommonDataTable column={column} TableData={searchValue.length ? filteredData : roleList} TableDataLoading={TableDataLoading} />\n                </Col>\n            </Row>\n            </CardBody>\n            <DetailsModal \n                modal={modal}\n                toggleModal={toggleModal}\n                roleInfo={roleInfo} \n                refresh={refresh}\n                setRefresh={setRefresh}\n                action={action}  \n            />\n        </Card>\n    )\n}\n\nexport default OtherPendingListView","import React, { useState } from 'react'\nimport { FileText, Share, Trash, Eye } from 'react-feather'\nimport { Card, CardHeader, Col, DropdownItem, DropdownMenu, DropdownToggle, Input, Label, Row, UncontrolledButtonDropdown, CardBody } from 'reactstrap'\nimport CommonDataTable from '../../VendorComponents/ClientSideDataTable'\nimport { ExportCSV, formatReadableDate } from '../../helper'\nimport { Error, Success } from '../../viewhelper'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport withReactContent from 'sweetalert2-react-content'\nimport Swal from 'sweetalert2'\nconst MySwal = withReactContent(Swal)\n\nconst OtherPendingListView = ({TableDataLoading, roleList, history}) => {\n    const [searchValue, setSearchValue] = useState('')\n    const [filteredData, setFilteredData] = useState([])\n    const user = JSON.parse(localStorage.getItem('userData'))\n\n    const column = [\n        {\n            name: 'Role Name',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'role_name'\n        },\n        {\n            name: 'Assign-user-count',\n            minWidth: '100px',\n            sortable: true,\n            selector: (row) => row['users'].length\n        },\n        {\n            name: 'Request Action',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'action'\n        },\n        {\n            name: 'Created At',\n            minWidth: '250px',\n            sortable: true,\n            selector: row => {\n                return row.created_at ? formatReadableDate(row.created_at) : ''\n            }\n        },\n        {\n            name: 'Action',\n            minWidth: '150px',\n            // sortable: true,\n            selector: row => {\n                return  <span title=\"View\">\n                        <Eye size={15}\n                            color='dodgerblue'\n                            style={{ cursor: 'pointer' }}\n                            onClick={() => {\n                                history.push(`/viewUserPendingRole/${row.id}`)\n                            }}\n                        />\n                    </span>\n            }\n        }\n    ]\n    // ** Function to handle filter\n    const handleFilter = e => {\n        const value = e.target.value\n        let updatedData = []\n        setSearchValue(value)\n\n        if (value.length) {\n        updatedData = roleList.filter(item => {\n            const startsWith =\n            item.role_name?.toLowerCase().startsWith(value.toLowerCase()) \n\n            const includes =\n            item.role_name?.toLowerCase().includes(value.toLowerCase())\n\n            if (startsWith) {\n            return startsWith\n            } else if (!startsWith && includes) {\n            return includes\n            } else return null\n        })\n        setFilteredData(updatedData)\n        setSearchValue(value)\n        }\n    }\n\n    return (\n        <Card>\n\n            <CardHeader>\n\n            <Row style={{width: '100%'}}>\n                    <Col className='d-flex align-items-center mt-1' sm='6'>\n                        <Label className='mr-1' for='search-input'>\n                        Search\n                        </Label>\n                        <Input\n                        style={{maxWidth: 300}}\n                        className='dataTable-filter mb-50'\n                        type='text'\n                        bsSize='sm'\n                        id='search-input'\n                        value={searchValue}\n                        onChange={handleFilter}\n                        />\n                    </Col>\n                    <Col className='d-flex align-items-center justify-content-end mt-1' sm='6'>\n                           <UncontrolledButtonDropdown className='ml-1'>\n                                <DropdownToggle color='secondary' caret outline>\n                                    <Share size={15} />\n                                    <span className='align-middle ml-50'>Export</span>\n                                </DropdownToggle>\n                                <DropdownMenu right>\n                                    <DropdownItem className='w-100' onClick={() => ExportCSV(roleList, Object.keys(roleList[0] || {}), 'User Role')}>\n                                        <FileText size={15} />\n                                        <span className='align-middle ml-50'>CSV</span>\n                                    </DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledButtonDropdown>\n                    </Col>\n                </Row>\n\n            </CardHeader>\n            <CardBody>\n            <Row>\n                <Col md='12'>\n                    <CommonDataTable column={column} TableData={searchValue.length ? filteredData : roleList} TableDataLoading={TableDataLoading} />\n                </Col>\n            </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default OtherPendingListView","import React, { Fragment, useEffect, useState } from 'react'\nimport { ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft } from 'react-feather'\nimport { Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput } from 'reactstrap'\nimport classnames from 'classnames'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport { Error, Success, ErrorMessage } from '../../viewhelper'\nimport { useHistory, Link } from 'react-router-dom'\n\nimport ListView from './listView'\nimport OtherPending from './otherPendingList'\nimport MyPendingList from './mypendingList'\n\nconst UserRoleList = () => {\n\n    const AssignedMenus = JSON.parse(localStorage.getItem('AssignedMenus')) || []\n    const Array2D = AssignedMenus.map(x => x.submenu.map(y => y.id))\n    const subMenuIDs = [].concat(...Array2D)\n    const history = useHistory()\n    const [roleList, setRoleList] = useState([])\n    const [pendingRoleList, setPendingRoleList] = useState([])\n    const [mypendingRoleList, setMyPendingRoleList] = useState([]) \n    const [TableDataLoading, setTableDataLoading] = useState(true)\n\n    const [refresh, setRefresh] = useState(false)\n    const [activeTab, setActiveTab] = useState('1')\n\n    const toggle = tab => {\n        if (activeTab !== tab) setActiveTab(tab)\n    }\n\n    useEffect(() => {\n        localStorage.setItem('useBMStoken', false) //for token management\n        localStorage.setItem('usePMStoken', false) //for token management\n        useJwt.roleList().then(res => {\n            console.log('roleList', res.data.payload)\n            setRoleList(res.data.payload.List)\n            setPendingRoleList(res.data.payload.PendingList)\n            setMyPendingRoleList(res.data.payload.MyPendingList)\n            setTableDataLoading(false)\n        }).catch(err => {\n            Error(err)\n            console.log(err)\n            setTableDataLoading(false)\n        })\n    }, [refresh])\n\n    return (\n        <Fragment>\n        <Card>\n        <CardHeader className='border-bottom'>\n            <CardTitle tag='h4'>User Role</CardTitle>\n                <div>\n                    {subMenuIDs.includes(69) && <Button.Ripple className='ml-2' color='primary' tag={Link} to={'/createUserRole'} >\n                    <div className='d-flex align-items-center'>\n                        <Plus size={17} style={{marginRight:'5px'}}/>\n                        <span >Create User Role</span>\n                    </div>\n                    </Button.Ripple>}\n            </div>\n        </CardHeader>\n            <CardBody>\n                <Nav tabs>\n                <NavItem>\n                        <NavLink\n                            className={classnames({ active: activeTab === '1' })}\n                            onClick={() => { toggle('1') }}\n                        > Role List\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink\n                            className={classnames({ active: activeTab === '2' })}\n                            onClick={() => { toggle('2') }}\n                        > My Pending\n                        </NavLink>\n                    </NavItem>\n                    {subMenuIDs.includes(72) && <NavItem>\n                        <NavLink\n                            className={classnames({ active: activeTab === '3' })}\n                            onClick={() => { toggle('3') }}\n                        > Approve Role\n                        </NavLink>\n                    </NavItem>}\n                </Nav>\n            </CardBody>\n        </Card>\n        <Card>\n            <TabContent activeTab={activeTab}>\n                <TabPane tabId=\"1\">\n                    <ListView TableDataLoading={TableDataLoading} roleList={roleList} history={history} setRefresh={setRefresh} refresh={refresh} />\n                </TabPane>\n                <TabPane tabId=\"2\">\n                    <MyPendingList TableDataLoading={TableDataLoading} roleList={mypendingRoleList} history={history}   />\n                </TabPane>\n                <TabPane tabId=\"3\">\n                   <OtherPending TableDataLoading={TableDataLoading} roleList={pendingRoleList} history={history} setRefresh={setRefresh} refresh={refresh}/>\n                </TabPane>\n\n            </TabContent>\n        </Card>\n    </Fragment>\n    )\n}\n\nexport default UserRoleList","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n","\n//Ex-> '1234567891' to '1234 567 891'\nexport const FormatePhoneNo = (phone) => {\n    const phonenoinstring = String(phone)\n    return phonenoinstring.replace(/^(.{4})(.*)(.{3})$/, '$1 $2 $3')\n}\n\nconst options = { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' }\n\nexport const formatReadableDate = (date) => { return (new Date(date)).toLocaleDateString(undefined, options) }\n\nexport const validateEmail = (email) => {\n    return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\n}\n\nexport const thousandSeparator = (x) => { return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") }\n\nexport const handle401 = async (status) => {\n    if (status === 401) {\n        window.location.href = '/Adminlogin'\n        await localStorage.clear()\n    }\n}\n\nexport const ExportCSV = (array, keys, CSVname) => {\n    // ** Downloads CSV\n    // const keys = ['name', 'email', 'mobile']\n    // ** Converts table to CSV\n    function convertArrayOfObjectsToCSV(array) {\n        let result\n        const columnDelimiter = ','\n        const lineDelimiter = '\\n'\n        result = ''\n        result += keys.join(columnDelimiter)\n        result += lineDelimiter\n\n        array.forEach(item => {\n            let ctr = 0\n            keys.forEach(key => {\n                if (ctr > 0) result += columnDelimiter\n                result += item[key]\n                ctr++\n            })\n            result += lineDelimiter\n        })\n        return result\n    }\n    const link = document.createElement('a')\n    let csv = convertArrayOfObjectsToCSV(array)\n    if (csv === null) return\n    const userData = JSON.parse(localStorage.getItem('userData'))\n    const filename = `${CSVname}_${new Date().toISOString()}_${userData['fullname'].replaceAll(/\\s/g, '')}.csv`\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n        csv = `data:text/csv;charset=utf-8,${csv}`\n    }\n\n    link.setAttribute('href', encodeURI(csv))\n    link.setAttribute('download', filename)\n    link.click()\n}","import React, { Fragment, useState, useEffect } from 'react'\nimport {\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft\n} from 'react-feather'\nimport {\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink\n} from 'reactstrap'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\n\nconst CommonDataTable = ({ column, TableData, TableDataLoading }) => {\n    const [currentPage, setCurrentPage] = useState(0)\n\n    // ** Function to handle Pagination\n    const handlePagination = page => {\n        setCurrentPage(page.selected)\n    }\n    // ** Custom Pagination\n    const CustomPagination = () => (\n        <ReactPaginate\n            previousLabel=''\n            nextLabel=''\n            forcePage={currentPage}\n            onPageChange={page => handlePagination(page)}\n            pageCount={TableData.length ? TableData.length / 10 : 1}\n            breakLabel='...'\n            pageRangeDisplayed={2}\n            marginPagesDisplayed={2}\n            activeClassName='active'\n            pageClassName='page-item'\n            breakClassName='page-item'\n            breakLinkClassName='page-link'\n            nextLinkClassName='page-link'\n            nextClassName='page-item next'\n            previousClassName='page-item prev'\n            previousLinkClassName='page-link'\n            pageLinkClassName='page-link'\n            breakClassName='page-item'\n            breakLinkClassName='page-link'\n            containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        />\n    )\n    return (\n        <Fragment>\n            <DataTable\n                noHeader\n                pagination\n                /*selectableRows*/\n                columns={column}\n                paginationPerPage={10}\n                className='react-dataTable'\n                sortIcon={<ChevronDown size={10} />}\n                paginationDefaultPage={currentPage + 1}\n                paginationComponent={CustomPagination}\n                data={TableData}\n                progressPending={TableDataLoading}\n                progressComponent={<Spinner color='primary' />}\n                responsive={true}\n            /*selectableRowsComponent={BootstrapCheckbox}*/\n            />\n        </Fragment>\n    )\n}\n\nexport default CommonDataTable"],"sourceRoot":""}