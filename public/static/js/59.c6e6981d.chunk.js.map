{"version":3,"sources":["views/tables/data-tables/basic/AdminComponent/ADManagement/CreateAd.js","views/viewhelper.js"],"names":["CreateAD","userData","JSON","parse","localStorage","getItem","_useRTL","useRTL","_useRTL2","_slicedToArray","history","useHistory","ruleRef","useRef","catRef","campRef","_useState","useState","_useState2","campaignList","setcampaignList","_useState3","_useState4","pointRuleloading","setPointRuleloading","_useState5","_useState6","file","setFile","_useState7","_useState8","adRuleList","setAdRuleList","_useState9","_useState10","filePrevw","setFilePrevw","_useState11","_useState12","resetData","setReset","_useState13","_useState14","businesscategorylist","setbusinesscategorylist","_useState15","_useState16","subCategory","setSubCategory","_useState17","title","body","thumbnail_height","thumbnail_width","fb_adset_id","image_hash","link_url","image_url","image","effective_instagram_media_id","is_fb_page_post","fb_page_post_category_ids","facebookpage_subcategory_localuids","_useState18","userInput","setUserInput","handleChange","e","_objectSpread","_defineProperty","target","name","value","useEffect","callApi","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","useJwt","then","res","console","log","_step","allAdRule","_iterator","_createForOfIteratorHelper","data","payload","s","n","done","q","is_approved","push","err","f","map","ar","id","label","rule_name","catch","Error","setItem","_err$response","response","status","getBMStoken","username","BMS_USER","password","BMS_PASS","jwtToken","getFbpageCategory","item","uid","subcategory","stop","apply","arguments","_jsxs","Fragment","children","_jsx","Button","Ripple","className","color","tag","Link","to","role","ChevronLeft","size","style","marginRight","Form","width","onSubmit","preventDefault","campaign_id","formData1","FormData","append","singleFileupload","_ref2","_callee2","_context2","t0","t1","t2","t3","t4","t5","t6","t7","t8","sent","t9","t10","t11","t12","t13","t14","t15","createAd","call","Success","error","_x","autoComplete","Row","Col","sm","Card","CardBody","FormGroup","Label","for","Input","type","onChange","required","placeholder","rows","Select","ref","theme","selectThemeColors","maxMenuHeight","classNamePrefix","selected","options","menuPlacement","opacity","height","onFocus","current","select","focus","x","campaignName","CustomInput","checked","md","length","dataPush","item2","handleChangeFBCategory","isMulti","isClearable","Spinner","handleChangeFBSubCategory","CardHeader","CardTitle","paddingTop","border","backgroundColor","Plus","position","left","top","cursor","accept","files","URL","createObjectURL","formData","getImageHash","hashData","images","hash","src","alt","disabled","toast","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","success"],"mappings":"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","file":"static/js/59.c6e6981d.chunk.js","sourcesContent":["import { useRTL } from '@hooks/useRTL'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport '@styles/react/libs/noui-slider/noui-slider.scss'\nimport { selectThemeColors } from '@utils'\nimport React, { Fragment, useEffect, useRef, useState } from 'react'\nimport { ChevronLeft, Plus } from 'react-feather'\nimport 'react-rangeslider/lib/index.css'\nimport { Link, useHistory } from 'react-router-dom'\nimport Select from 'react-select'\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, CustomInput, Form, FormGroup, Input, Label, Row, Spinner } from 'reactstrap'\nimport { BMS_PASS, BMS_USER } from '../../../../../../Configurables'\nimport { Error, Success } from '../../../../../viewhelper'\n\nconst CreateAD = () => {\n    const userData = JSON.parse(localStorage.getItem('userData'))\n    const [isRtl, setIsRtl] = useRTL()\n    const history = useHistory()\n    const ruleRef = useRef()\n    const catRef = useRef()\n    const campRef = useRef()\n    const [campaignList, setcampaignList] = useState([])\n    const [pointRuleloading, setPointRuleloading] = useState(false)\n    const [file, setFile] = useState(null)\n    const [adRuleList, setAdRuleList] = useState([])\n    const [filePrevw, setFilePrevw] = useState(null)\n    const [resetData, setReset] = useState(true)\n    const [businesscategorylist, setbusinesscategorylist] = useState([])\n    const [subCategory, setSubCategory] = useState([])\n\n    const [userInput, setUserInput] = useState({\n        title: '',\n        body: '',\n        thumbnail_height: 0,\n        thumbnail_width: 0,\n        fb_adset_id: '',\n        image_hash: '',\n        link_url: '',\n        image_url: '',\n        image: '',\n        effective_instagram_media_id: '',\n        is_fb_page_post: false,\n        fb_page_post_category_ids: [],\n        facebookpage_subcategory_localuids: []\n    })\n    const handleChange = (e) => {\n        setUserInput({ ...userInput, [e.target.name]: e.target.value })\n    }\n    useEffect(() => {\n        const callApi = async () => {\n            await useJwt.adRuleList().then(res => {\n                console.log(res)\n                const allAdRule = []\n                for (const q of res.data.payload) {\n                    if (q.is_approved === true) {\n                        allAdRule.push(q)\n                    }\n                }\n                setAdRuleList(allAdRule.map(ar => { return { value: ar.id, label: ar.rule_name } }))\n            }).catch(err => {\n                Error(err)\n                console.log(err)\n            })\n            localStorage.setItem('usePMStoken', false) //for token management\n            localStorage.setItem('useBMStoken', true)\n            await useJwt.campaignList().then(res => {\n                console.log('campaignList', res)\n                setcampaignList(res.data)\n                localStorage.setItem('useBMStoken', false)\n            }).catch(err => {\n                if (err.response?.status === 401) {\n                    localStorage.setItem(\"BMSCall\", true)\n                    useJwt.getBMStoken({ username: BMS_USER, password: BMS_PASS }).then(res => {\n                        localStorage.setItem('BMStoken', res.data.jwtToken)\n                        localStorage.setItem(\"BMSCall\", false)\n                        setReset(!resetData)\n                    }).catch(err => {\n                        localStorage.setItem(\"BMSCall\", false)\n                        console.log(err)\n                    })\n                } else {\n                    Error(err)\n                    console.log(err)\n                    localStorage.setItem('useBMStoken', false)\n                }\n            })\n            localStorage.setItem('usePMStoken', false) //for token management\n            localStorage.setItem('useBMStoken', false)\n            useJwt.getFbpageCategory().then(res => {\n                setbusinesscategorylist(res.data.payload.map(item => { return { value: {id: item.uid, subcategory: item.subcategory }, label: item?.name } }))\n            }).catch(err => {\n                console.log(err.response)\n                Error(err)\n            })\n        }\n        callApi()\n    }, [resetData])\n    const getImageHash = (file) => {\n        setPointRuleloading(true)\n        const formData = new FormData()\n        formData.append('filename', file)\n        useJwt.getImageHash(formData).then(res => {\n            let hashData\n            for (const f in res.data.payload.images) {\n                hashData = res.data.payload.images[f].hash\n            }\n            console.log('ImageHash', res)\n            setUserInput({\n                ...userInput, image_hash: hashData\n            })\n            // Success(res)\n            setPointRuleloading(false)\n        }).catch(err => {\n            Error(err)\n            console.log(err)\n            setPointRuleloading(false)\n        })\n    }\n    const handleChangeFBCategory = (selected) => {\n        const dataPush = [], fb_page_post_category_ids = []\n        console.log('selected ', selected)\n        if (selected.length && selected[selected.length - 1].value.subcategory) {\n            selected.map(item => {\n                item.value.subcategory.map(item2 => {\n                    dataPush.push(item2)\n                })\n                fb_page_post_category_ids.push(item.value.id)\n            })\n        }\n\n        if (selected.length === 0) {\n            setSubCategory([])\n            setUserInput({...userInput, fb_page_post_category_ids: []})\n\n        } else {\n            setSubCategory(dataPush.length ? dataPush : subCategory)\n            setUserInput({...userInput, fb_page_post_category_ids})\n        }\n       \n    }\n\n    const handleChangeFBSubCategory = (selected) => {\n        setUserInput({...userInput, facebookpage_subcategory_localuids: selected.map(item => item.value)})\n    }\n    const onSubmit = (e) => {\n        e.preventDefault()\n        setPointRuleloading(true)\n        const { title, body, thumbnail_height, thumbnail_width, fb_adset_id, link_url, image_url, image, effective_instagram_media_id, image_hash, campaign_id, is_fb_page_post, fb_page_post_category_ids, facebookpage_subcategory_localuids } = userInput\n        console.log({ title, body, thumbnail_height, thumbnail_width, fb_adset_id, link_url, image_url, image, effective_instagram_media_id, image_hash, campaign_id, is_fb_page_post, fb_page_post_category_ids, facebookpage_subcategory_localuids })\n        // return 0\n        const formData1 = new FormData()\n        formData1.append('image', file)\n\n        useJwt.singleFileupload(formData1).then(async res => {\n            console.log(res)\n            await useJwt.createAd({ title, body, thumbnail_height, thumbnail_width, fb_adset_id, link_url, image_url, image: await res.data.payload.image_url, effective_instagram_media_id, image_hash, campaign_id, is_fb_page_post, fb_page_post_category_ids, facebookpage_subcategory_localuids }).then((response) => {\n                setPointRuleloading(false)\n                Success(response)\n                console.log(response)\n                history.push(userData?.role === 'vendor' ? '/adlistVendor' : '/adlist')\n            }).catch((error) => {\n                setPointRuleloading(false)\n                Error(error)\n                console.log(error.response)\n            })\n        }).catch(e => {\n            console.log(e.response)\n            setPointRuleloading(false)\n        })\n    }\n\n    return (\n        <Fragment>\n            <Button.Ripple className='mb-1' color='primary' tag={Link} to={userData?.role === 'vendor' ? '/adlistVendor' : '/adlist'} >\n                <div className='d-flex align-items-center'>\n                    <ChevronLeft size={17} style={{ marginRight: '5px' }} />\n                    <span >Back</span>\n                </div>\n            </Button.Ripple>\n            <Form style={{ width: '100%' }} onSubmit={onSubmit} autoComplete=\"off\">\n                <h4 className='m-1'>AD Info</h4>\n                <Row className='match-height'>\n                    <Col sm='6'>\n                        <Card>\n                            <CardBody>\n                                <Row>\n                                    <Col sm=\"12\" >\n                                        <FormGroup>\n                                            <Label for=\"title\">Title<span className='text-danger'>*</span></Label>\n                                            <Input type=\"text\"\n                                                name=\"title\"\n                                                id='title'\n                                                value={userInput.title}\n                                                onChange={handleChange}\n                                                required\n                                                placeholder=\"title here...\"\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" >\n                                        <FormGroup>\n                                            <Label for=\"body\">Body<span className='text-danger'>*</span></Label>\n                                            <Input type=\"textarea\"\n                                                rows=\"4\"\n                                                name=\"body\"\n                                                id='body'\n                                                value={userInput.body}\n                                                onChange={handleChange}\n                                                required\n                                                placeholder=\"body\"\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    <Col sm='6'>\n                        <Card>\n                            <CardBody>\n                                <Row>\n                                    {/* <Col sm=\"12\" >\n                                        <FormGroup>\n                                            <Label for=\"effective_instagram_media_id\">Effective Instagram Media ID<span className='text-danger'>*</span></Label>\n                                            <Input type=\"text\"\n                                                name=\"effective_instagram_media_id\"\n                                                id='effective_instagram_media_id'\n                                                value={userInput.effective_instagram_media_id}\n                                                onChange={handleChange}\n                                                required\n                                                placeholder=\"effective instagram media id\"\n                                            />\n                                        </FormGroup>\n                                    </Col> */}\n                                    <Col sm=\"12\" >\n                                        <FormGroup>\n                                            <Label for=\"type\">AD Rule<span style={{ color: 'red' }}>*</span></Label>\n                                            <Select\n                                                ref={ruleRef}\n                                                theme={selectThemeColors}\n                                                maxMenuHeight={200}\n                                                className='react-select'\n                                                classNamePrefix='select'\n                                                onChange={(selected) => {\n                                                    setUserInput({ ...userInput, fb_adset_id: selected.value })\n                                                }}\n                                                options={adRuleList}\n                                                menuPlacement='auto'\n                                            />\n                                        </FormGroup>\n                                        <Input\n                                            required\n                                            style={{\n                                                opacity: 0,\n                                                width: \"100%\",\n                                                height: 0\n                                                // position: \"absolute\"\n                                            }}\n                                            onFocus={e => ruleRef.current.select.focus()}\n                                            value={userInput.fb_adset_id || ''}\n                                            onChange={e => ''}\n                                        />\n                                    </Col>\n                                    <Col sm=\"12\" >\n                                        <FormGroup>\n                                            <Label for=\"type\">Select Campaign<span style={{ color: 'red' }}>*</span></Label>\n                                            <Select\n                                                ref={campRef}\n                                                theme={selectThemeColors}\n                                                maxMenuHeight={200}\n                                                className='react-select'\n                                                classNamePrefix='select'\n                                                onChange={(selected) => {\n                                                    setUserInput({ ...userInput, campaign_id: selected.value })\n                                                }}\n                                                options={campaignList.map(x => { return { value: x.id, label: x.campaignName } })}\n                                                menuPlacement='auto'\n                                            />\n                                        </FormGroup>\n                                        <Input\n                                            required\n                                            style={{\n                                                opacity: 0,\n                                                width: \"100%\",\n                                                height: 0\n                                                // position: \"absolute\"\n                                            }}\n                                            onFocus={e => campRef.current.select.focus()}\n                                            value={userInput.campaign_id || ''}\n                                            onChange={e => ''}\n                                        />\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                        </Card>`\n                    </Col>\n                </Row>\n                <Card>\n                    <CardBody>\n                        <Row>\n                            <Col sm=\"4\" >\n                                <FormGroup>\n                                    <CustomInput type='switch' onChange={(e) => {\n                                        if (e.target.checked) {\n                                            setUserInput({...userInput, is_fb_page_post: true})\n                                        } else {\n                                            setUserInput({...userInput, is_fb_page_post: false})\n                                            setSubCategory([])\n                                        }\n                                    }\n                                    } id='is_fb_page_post' label='Is Facebook Page Post?' checked={userInput.is_fb_page_post}/>\n                                </FormGroup>\n                            </Col>\n                            {\n                                userInput.is_fb_page_post && <Col md='4' sm='6'>\n                                <FormGroup>\n                                    <Label for='fb_page_post_category_ids'>Facebook Page Category <span style={{ color: 'red' }}>*</span></Label>\n                                    {\n                                        businesscategorylist.length ? <Select\n                                            ref={catRef}\n                                            theme={selectThemeColors}\n                                            className='basic-multi-select'\n                                            classNamePrefix='select'\n                                            name=\"businesscategories\"\n                                            // defaultValue={businesscategorylist[0]}\n                                            options={businesscategorylist}\n                                            onChange={(selected) => handleChangeFBCategory(selected)}\n                                            isMulti\n                                            isClearable={false}\n                                        \n                                        /> : <Spinner color='primary' />\n                                    }\n                                    <Input\n                                        required\n                                        style={{\n                                            opacity: 0,\n                                            width: \"100%\",\n                                            height: 0\n                                            // position: \"absolute\"\n                                        }}\n                                        onFocus={e => catRef.current.select.focus()}\n                                        value={userInput.fb_page_post_category_ids || ''}\n                                        onChange={e => ''}\n                                    />\n                                </FormGroup>\n                            </Col>\n                            }\n                            {\n                                (subCategory?.length !== 0) && <Col sm=\"4\" >\n                                <FormGroup>\n                                    <Label for=\"facebookpage_subcategory_localuid\">Facebook Page Sub Category</Label>\n                                    <Select\n                                        theme={selectThemeColors}\n                                        maxMenuHeight={200}\n                                        className='react-select'\n                                        classNamePrefix='select'\n                                        onChange={(selected) => handleChangeFBSubCategory(selected)}\n                                        isMulti\n                                        isClearable={false}\n                                        options={subCategory?.map(item => { return { value: item.uid, label: item.name } })}\n                                        \n                                    />\n                                </FormGroup>\n                            </Col>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n                <Card>\n                    <CardHeader className='border-bottom'>\n                        <CardTitle tag='h4'>Image info</CardTitle>\n                    </CardHeader>\n                    <CardBody style={{ paddingTop: '15px' }}>\n                        <Row>\n                            <Col sm=\"6\" >\n                                <FormGroup>\n                                    <Label for=\"thumbnail_height\">Thumbnail Height</Label>\n                                    <Input type=\"number\"\n                                        name=\"thumbnail_height\"\n                                        id='thumbnail_height'\n                                        value={userInput.thumbnail_height}\n                                        onChange={handleChange}\n                                        // required\n                                        placeholder=\"thumbnail height here...\"\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col sm=\"6\" >\n                                <FormGroup>\n                                    <Label for=\"thumbnail_width\">Thumbnail Width</Label>\n                                    <Input type=\"number\"\n                                        name=\"thumbnail_width\"\n                                        id='thumbnail_width'\n                                        value={userInput.thumbnail_width}\n                                        onChange={handleChange}\n                                        // required\n                                        placeholder=\"thumbnail width here...\"\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col sm=\"6\" >\n                                <FormGroup>\n                                    <Label for=\"link_url\">Link URL</Label>\n                                    <Input type=\"text\"\n                                        name=\"link_url\"\n                                        id='link_url'\n                                        value={userInput.link_url}\n                                        onChange={handleChange}\n                                        // required\n                                        placeholder=\"link url\"\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col sm=\"6\" >\n                                <FormGroup>\n                                    <Label for=\"image_url\">Image URL</Label>\n                                    <Input type=\"text\"\n                                        name=\"image_url\"\n                                        id='image_url'\n                                        value={userInput.image_url}\n                                        onChange={handleChange}\n                                        // required\n                                        placeholder=\"image url\"\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col md='12' className='mb-2'>\n                                <Label for=\"voucherImage\">Upload Image</Label>\n                                <div className='d-flex'>\n                                    <div className=\"file position-relative overflow-hidden mr-2\">\n                                        <div className='text-center p-1' style={{\n                                            height: '102px',\n                                            width: '102px',\n                                            border: '1px dashed #d9d9d9',\n                                            backgroundColor: \"#fafafa\"\n                                        }}>\n                                            <span ><Plus size={20} className='my-1' /></span> <br />\n                                            <span>Upload</span>\n                                        </div>\n                                        <Input\n                                            // style={{ width: '300px' }}\n                                            style={{\n                                                position: 'absolute',\n                                                opacity: '0',\n                                                left: '0',\n                                                top: '0',\n                                                height: '102px',\n                                                width: '102px',\n                                                cursor: 'pointer'\n                                            }}\n                                            type=\"file\"\n                                            accept=\"image/png, image/jpeg\"\n                                            required\n                                            name=\"voucherImage\"\n                                            id='voucherImage'\n                                            onChange={e => {\n                                                if (e.target.files.length !== 0) {\n                                                    setFilePrevw(URL.createObjectURL(e.target.files[0]))\n                                                }\n                                                setFile(e.target.files[0])\n                                                getImageHash(e.target.files[0])\n                                            }}\n                                        />\n                                    </div>\n                                    {filePrevw && <img src={filePrevw} alt='voucher img' height='100px'></img>}\n                                </div>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n                <Card>\n                    <CardBody>\n                        <Row>\n                            <Col sm=\"12\" className='text-center'>\n                                {\n                                    pointRuleloading ? <Button.Ripple color='primary' className='mr-1' disabled>\n                                        <Spinner color='white' size='sm' />\n                                        <span className='ml-50'>Loading...</span>\n                                    </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' type=\"submit\">\n                                        <span >Submit</span>\n                                    </Button.Ripple>\n                                }\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Form>\n        </Fragment>\n    )\n}\n\nexport default CreateAD","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n"],"sourceRoot":""}