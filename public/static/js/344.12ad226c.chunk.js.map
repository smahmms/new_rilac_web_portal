{"version":3,"sources":["views/tables/data-tables/basic/AdminComponent/DatapackManagement/DatapackList/DatapackList.js","views/tables/data-tables/basic/AdminComponent/DatapackManagement/DatapackList/MypendingDatapackList.js","views/tables/data-tables/basic/AdminComponent/DatapackManagement/DatapackList/ViewDetails.js","views/tables/data-tables/basic/AdminComponent/DatapackManagement/DatapackList/NeedApproveDatapackList.js","views/tables/data-tables/basic/AdminComponent/DatapackManagement/DatapackList/DatapackListMain.js","views/viewhelper.js","views/helper.js","views/tables/data-tables/basic/AdminComponent/ClientSideDataTable.js","views/tables/data-tables/basic/ServerSideDataTable.js"],"names":["MySwal","withReactContent","Swal","DatapackList","_ref","datapackList","TableDataLoading","refresh","setrefresh","_useState","useState","_useState2","_slicedToArray","searchValue","history","useHistory","column","name","minWidth","sortable","selector","item","createdAt","formatReadableDate","row","_jsxs","_Fragment","children","_jsx","title","Edit","size","color","style","cursor","onClick","e","push","localStorage","setItem","JSON","stringify","Trash","id","fire","_defineProperty","text","icon","allowOutsideClick","allowEscapeKey","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","showLoaderOnConfirm","preConfirm","useJwt","datapackDelete","parseInt","then","res","console","log","Success","catch","err","Error","buttonsStyling","isLoading","result","isConfirmed","Card","CardHeader","CardTitle","Button","Ripple","className","ExportCSV","Object","keys","CommonDataTable","TableData","length","filteredData","MypendingDatapackList","Fragment","ViewDetailsModal","modal","toggleModal","datapackListInfo","setRefresh","action","roleWiseApprovedList","setRoleWiseApprovedList","_useState3","_useState4","addUserloading","setaddUserloading","_useState5","_useState6","approvedBy","setApprovedBy","useEffect","datapackListApprovalById","_step","itemArr","_iterator","_createForOfIteratorHelper","data","payload","module_data","roles","_loop","value","approvedby","approved","find","i","role_id","role_name","approved_by","approved_at","s","n","done","f","Modal","isOpen","toggle","border","ModalHeader","ModalBody","Row","Col","sm","CardBody","Table","map","index","Spinner","disabled","marginTop","datapackListApprove","action_id","response","type","NeedApproveDatapackList","setAction","setDatapackListInfo","setModal","modifiedAt","CheckSquare","XSquare","DetailsModal","DatapackListMain","userName","getItem","setDatapackList","penDatapackList","setPenDatapackList","myPenDatapackList","setMyPenDatapackList","_useState7","_useState8","setTableDataLoading","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","activeTab","setActiveTab","tab","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","datapackPendingList","pending","myPending","modifiedBy","stop","Nav","tabs","NavItem","NavLink","active","subMenuIDs","includes","TabContent","TabPane","tabId","tag","Link","to","Plus","marginRight","status","toast","error","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","success","options","year","month","day","hour","minute","date","Date","toLocaleDateString","thousandSeparator","x","toString","replace","handle401","window","location","href","clear","_x","apply","arguments","array","CSVname","link","document","createElement","csv","join","forEach","ctr","key","convertArrayOfObjectsToCSV","userData","parse","filename","concat","toISOString","replaceAll","match","setAttribute","encodeURI","click","currentPage","setCurrentPage","DataTable","noHeader","pagination","columns","paginationPerPage","sortIcon","ChevronDown","paginationDefaultPage","paginationComponent","ReactPaginate","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","progressPending","progressComponent","responsive","pointerOnHover","highlightOnHover","striped","ServerSideDataTable","props","RowCount","RowLimit","paginationServer"],"mappings":"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","file":"static/js/344.12ad226c.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState, useRef } from 'react'\nimport {\n    ChevronDown, CheckCircle, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft, RefreshCw, PlusCircle\n} from 'react-feather'\nimport {\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput\n} from 'reactstrap'\nimport classnames from 'classnames'\nimport { useHistory } from 'react-router-dom'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport ServerSideDataTable from '../../../ServerSideDataTable'\nimport { Success, Error } from '../../../../../../viewhelper'\nimport { toast } from 'react-toastify'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport { ExportCSV, formatReadableDate } from '../../../../../../helper'\nconst MySwal = withReactContent(Swal)\nimport { BMS_PASS, BMS_USER } from '../../../../../../../Configurables'\nimport CommonDataTable from '../../ClientSideDataTable'\n\nconst DatapackList = ({datapackList, TableDataLoading, refresh, setrefresh}) => {\n    const [searchValue, setsearchValue] = useState('')\n    const history = useHistory()\n    const deleteFunc = (id) => {\n        return MySwal.fire({\n            title: 'Do you want to Delete?',\n            text: `Information will be delete when another user will approve this operation.`,\n            icon: 'warning',\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n            showCancelButton: true,\n            confirmButtonText: 'Yes',\n            customClass: {\n                confirmButton: 'btn btn-primary',\n                cancelButton: 'btn btn-danger ml-1'\n            },\n            showLoaderOnConfirm: true,\n            preConfirm: () => {\n                return useJwt.datapackDelete({ id: parseInt(id) }).then(res => {\n                  \n                    console.log(res)\n                    Success(res)\n                    setrefresh(!refresh)\n                    \n                }).catch(err => {\n                    Error(err)\n                    console.log(err)\n                })\n            },\n            buttonsStyling: false,\n            allowOutsideClick: () => !Swal.isLoading()\n        }).then(function (result) {\n            if (result.isConfirmed) {\n    \n            }\n        })\n    }\n    const column = [\n        {\n            name: 'Name',\n            minWidth: '250px',\n            sortable: true,\n            selector: 'name'\n        },\n        {\n            name: 'Operator',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'operator'\n        },\n        {\n            name: 'Volume In MB',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'volumeInMB'\n        },\n        {\n            name: 'Pack Code',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'packcode'\n        },\n        {\n            name: 'Created By',\n            minWidth: '150px',\n            sortable: true,\n            selector: 'createdBy'\n        },\n        {\n            name: 'Created At',\n            minWidth: '250px',\n            sortable: true,\n            selector: (item) => {\n                return item.createdAt ? formatReadableDate(item.createdAt) : null\n            }\n        },\n        {\n            name: 'Action',\n            minWidth: '100px',\n            // sortable: true,\n            selector: row => {\n                return <>\n                    <span title=\"Edit\">\n                        <Edit size={15}\n                            color='teal'\n                            style={{ cursor: 'pointer' }}\n                            onClick={(e) => {\n                                history.push('/editDatapackList')\n                                localStorage.setItem('datapackInfo', JSON.stringify(row))\n                            }}\n                        />\n                    </span> &nbsp;&nbsp;\n                    <span title=\"Delete\">\n                        <Trash size={15}\n                            color='red'\n                            style={{ cursor: 'pointer' }}\n                            onClick={() => deleteFunc(row.id)}\n                        />\n                    </span>\n                </>\n            }\n        }\n    ]\n\n    return (\n        <Card>\n            <CardHeader>\n                <CardTitle></CardTitle>\n                <Button.Ripple className='ml-1 text-dark' color='light' onClick={e => {\n                    ExportCSV(datapackList, Object.keys(datapackList[0]), 'Datapack List')\n                }}>\n                    Export CSV\n                </Button.Ripple>\n            </CardHeader>\n            <CommonDataTable column={column} TableData={searchValue.length ? filteredData : datapackList} TableDataLoading={TableDataLoading} />\n        </Card>\n    )\n}\n\nexport default DatapackList","import React, { Fragment } from 'react'\nimport CommonDataTable from '../../ClientSideDataTable'\nimport { Badge } from 'reactstrap'\nimport { formatReadableDate } from '../../../../../../helper'\n\nconst MypendingDatapackList = ({datapackList, TableDataLoading, refresh, setrefresh}) => {\n    const column = [\n        {\n            name: 'Name',\n            minWidth: '250px',\n            sortable: true,\n            selector: 'name'\n        },\n        {\n            name: 'Operator',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'operator'\n        },\n        {\n            name: 'Volume In MB',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'volumeInMB'\n        },\n        {\n            name: 'Pack Code',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'packcode'\n        },\n        // {\n        //     name: 'Status',\n        //     minWidth: '100px',\n        //     sortable: true,\n        //     // selector: 'status'\n        //     selector: (row) => {\n        //         return <Badge color={row.status === 'active' ? 'light-success' : 'light-danger'}>{row.status}</Badge>\n        //     }\n        // },\n        {\n            name: 'Operation',\n            minWidth: '150px',\n            sortable: true,\n            selector: 'action'\n        },\n        {\n            name: 'Created By',\n            minWidth: '150px',\n            sortable: true,\n            selector: 'createdBy'\n        },\n        {\n            name: 'Created At',\n            minWidth: '250px',\n            sortable: true,\n            selector: (item) => {\n                return item.createdAt ? formatReadableDate(item.createdAt) : null\n            }\n        }\n    ]\n    return (\n        <Fragment>\n            <CommonDataTable column={column} TableData={ datapackList} TableDataLoading={TableDataLoading} />\n        </Fragment>\n    )\n}\n\nexport default MypendingDatapackList","import useJwt from '@src/auth/jwt/useJwt'\nimport useJwt2 from '@src/auth/jwt/useJwt2'\nimport { handle401 } from '@src/views/helper'\nimport { Fragment, useEffect, useState } from 'react'\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, CustomInput, Modal, ModalBody, ModalHeader, Row, Spinner, Table } from 'reactstrap'\nimport { Error, Success } from '../../../../../../viewhelper'\nimport { formatReadableDate } from '../../../../../../helper'\n\nconst ViewDetailsModal = ({ modal, toggleModal, datapackListInfo, setRefresh, refresh, action }) => {\n\nconst [roleWiseApprovedList, setRoleWiseApprovedList] = useState([])\nconst [addUserloading, setaddUserloading] = useState(false)\nconst [approvedBy, setApprovedBy] = useState([])\nconsole.log(approvedBy)\n\n\nuseEffect(() => {\n    if (datapackListInfo.id) {\n        useJwt.datapackListApprovalById(datapackListInfo.id).then(res => {\n            console.log(res)\n            const itemArr = []\n            for (const item of res.data.payload.module_data.roles) {\n                const approvedby = res.data.payload.approved.find(i => i.role_id === item.role_id)\n                if (approvedby) {\n                    itemArr.push({role_id: item.role_name, approved_by: approvedby.approved_by, approved_at: approvedby.approved_at})\n                } else {\n                    itemArr.push({role_id: item.role_name, approved_by: '--', approved_at: ''})\n                }\n            }\n            setRoleWiseApprovedList(itemArr)\n        }).catch(err => {\n            console.log(err)\n            Error(err)\n        })\n    }\n}, [datapackListInfo.id])\n\nconst handleApproveRejectActions = () => {\n    setaddUserloading(true)\n    useJwt.datapackListApprove({ id:datapackListInfo.id, action_id: action }).then(res => {\n                setRefresh(!refresh)\n                Success(res)\n                setaddUserloading(false)\n                toggleModal()\n                console.log(res)\n            }).catch(err => {\n                // handle401(err.response.status)\n                console.log(err.response)\n                setaddUserloading(false)\n                toggleModal()\n                Error(err)\n            })\n    useJwt.datapackListApprovalById(datapackListInfo.id).then(res => {\n        setApprovedBy(res.data.payload)\n    })\n}\n    return (\n        <Modal size=\"xl\" isOpen={modal} toggle={toggleModal} style={action === 1 ? {border:'2px solid green'} : action === 2 ? {border:'2px solid red'} : {}} >\n             <ModalHeader toggle={toggleModal}>{action === 1 ? 'Approve Datapack List' : action === 2 ? 'Reject Datapack List' : 'Datapack List Details'}</ModalHeader>\n            <ModalBody>\n                <Row>\n                    <Col sm='12'>\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle>Approval Entry</CardTitle>\n                                </CardHeader>\n                                <CardBody>\n                                    <Row>\n                                        <Col sm=\"12\" >\n                                            <Table>\n                                                <tr>\n                                                    <th>Role Id</th>\n                                                    <th>Approved By</th>\n                                                    <th>Approved At</th>\n                                                </tr>\n                                                {\n                                                    roleWiseApprovedList?.length !== 0 ? roleWiseApprovedList?.map((item, index) => <tr key={index}>\n                                                        <td>{item.role_id}</td>\n                                                        <td>{item.approved_by}</td>\n                                                        <td>{item.approved_at ? formatReadableDate(item.approved_at || '') : '--'}</td>\n                                                    </tr>) : <Spinner className='text-center'/>\n                                                }\n                                            </Table>\n                                        </Col>\n                                    </Row>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                </Row>\n\n                <Row>\n                    <Col sm=\"12\" className='text-center'>\n                        {\n                            addUserloading ? <Button.Ripple color='primary' className='mr-1' disabled style={{ marginTop: '25px' }}>\n                                <Spinner color='white' size='sm' />\n                                <span className='ml-50'>Loading...</span>\n                            </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' onClick={handleApproveRejectActions} type=\"button\" style={{ marginTop: '25px' }}>\n                            <span >Confirm</span>\n                        </Button.Ripple>\n                        }\n                    </Col>\n                </Row>\n\n            </ModalBody>\n        </Modal>\n    )\n}\nexport default ViewDetailsModal","import React, { Fragment, useState } from 'react'\nimport CommonDataTable from '../../ClientSideDataTable'\nimport { CheckSquare, XSquare } from 'react-feather'\nimport DetailsModal from './ViewDetails'\nimport { Badge } from 'reactstrap'\nimport { formatReadableDate } from '../../../../../../helper'\nimport { Success, Error } from '../../../../../../viewhelper'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\n\nconst NeedApproveDatapackList = ({datapackList, TableDataLoading, refresh, setrefresh}) => {\n\n    // const viewDetails = (e, item) => {\n    //     setref_id(item.ref_id)\n    //     datapackGroupList(item.id)\n    // }\n\nconst [action, setAction] = useState(0)\nconst [datapackListInfo, setDatapackListInfo] = useState({})\nconst [modal, setModal] = useState(false)\nconst toggleModal = () => setModal(!modal)\n\n    \n    // const handlePoPupActions = (id, status, message) => {\n    //     return MySwal.fire({\n    //         title: message,\n    //         text: `You won't be able to revert this`,\n    //         icon: 'warning',\n    //         allowOutsideClick: false,\n    //         allowEscapeKey: false,\n    //         showCancelButton: true,\n    //         confirmButtonText: 'Yes',\n    //         customClass: {\n    //             confirmButton: 'btn btn-primary',\n    //             cancelButton: 'btn btn-danger ml-1'\n    //         },\n    //         showLoaderOnConfirm: true,\n    //         preConfirm: () => {\n    //             const data = {\n    //                 id,\n    //                 action_id: status\n    //             }\n    //             return useJwt.datapackAction(data).then(res => {\n    //                 Success(res)\n    //                 console.log(res)\n    //                 setrefresh(!refresh)\n    //             }).catch(err => {\n    //                 console.log(err)\n    //                 Error(err)\n    //             })\n    //         },\n    //         buttonsStyling: false,\n    //         allowOutsideClick: () => !Swal.isLoading()\n    //     }).then(function (result) {\n    //         if (result.isConfirmed) {\n\n    //         }\n    //     })\n\n    // }\n    const column = [\n        {\n            name: 'Name',\n            minWidth: '250px',\n            sortable: true,\n            selector: 'name'\n        },\n        {\n            name: 'Operator',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'operator'\n        },\n        {\n            name: 'Volume In MB',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'volumeInMB'\n        },\n        {\n            name: 'Pack Code',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'packcode'\n        },\n        {\n            name: 'Operation',\n            minWidth: '150px',\n            sortable: true,\n            selector: 'action'\n        },\n        {\n            name: 'Modified By',\n            minWidth: '150px',\n            sortable: true,\n            selector: 'modifiedBy'\n        },\n        {\n            name: 'Modified At',\n            minWidth: '250px',\n            sortable: true,\n            selector: (item) => {\n                return item.modifiedAt ? formatReadableDate(item.modifiedAt) : null\n            }\n        },\n        {\n            name: 'Action',\n            minWidth: '150px',\n            // sortable: true,\n            selector: row => {\n                return <>\n                        <span title=\"Approve\">\n                        <CheckSquare size={15}\n                            color='teal'\n                            style={{ cursor: 'pointer' }}\n                            // onClick={() => handlePoPupActions(row.id, 1, 'Are you sure?')}\n                            onClick={() => {\n                                setDatapackListInfo(row)\n                                setModal(true)\n                                setAction(1)\n                            }}\n                        />\n                    </span>&nbsp;&nbsp;\n                    <span title=\"Reject\">\n                        <XSquare size={15}\n                            color='red'\n                            style={{ cursor: 'pointer' }}\n                            // onClick={() => handlePoPupActions(row.id, 2, 'Are you sure?')}\n                            onClick={() => {\n                                setDatapackListInfo(row)\n                                setModal(true)\n                                setAction(2)\n                            }}\n                        />\n                    </span>\n                </>\n            }\n        }\n    ]\n    return (\n        <Fragment>\n\n            <CommonDataTable column={column} TableData={ datapackList} TableDataLoading={TableDataLoading} />\n            <DetailsModal \n                modal={modal}\n                toggleModal={toggleModal}\n                datapackListInfo={datapackListInfo} \n                refresh={refresh}\n                setRefresh={setrefresh}\n                action={action}  \n            /> \n        </Fragment>\n    )\n}\n\nexport default NeedApproveDatapackList","import {React, useEffect, useState, useRef, Fragment } from 'react'\nimport {\n    ChevronDown, CheckCircle, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft, RefreshCw, PlusCircle\n} from 'react-feather'\nimport {\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput\n} from 'reactstrap'\nimport { subMenuIDs } from '../../../../../../../utility/Utils'\nimport classnames from 'classnames'\nimport {Link, useHistory } from 'react-router-dom'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport ServerSideDataTable from '../../../ServerSideDataTable'\nimport { Success, Error } from '../../../../../../viewhelper'\nimport { toast } from 'react-toastify'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport { ExportCSV, formatReadableDate } from '../../../../../../helper'\nconst MySwal = withReactContent(Swal)\nimport { handle401 } from '@src/views/helper'\nimport { BMS_PASS, BMS_USER } from '../../../../../../../Configurables'\nimport CommonDataTable from '../../ClientSideDataTable'\nimport DatapackList from './DatapackList'\nimport MypendingDatapackList from './MypendingDatapackList'\nimport NeedApproveDatapackList from './NeedApproveDatapackList'\n\nconst DatapackListMain = () => {\nconst userName = localStorage.getItem('username')\nconst [datapackList, setDatapackList] = useState([])\nconst [penDatapackList, setPenDatapackList] = useState([])\nconst [myPenDatapackList, setMyPenDatapackList] = useState([])\nconst [TableDataLoading, setTableDataLoading] = useState(true)\nconst [filteredData, setFilteredData] = useState([])\nconst [ref_id, setref_id] = useState(null)\n\nconst [refresh, setrefresh] = useState(1)\nconst [activeTab, setActiveTab] = useState('1')\n// ** Function to toggle tabs\nconst toggle = tab => setActiveTab(tab)\n\nuseEffect(async () => {\n    await useJwt.datapackList().then(res => {\n        console.log(res)\n        setDatapackList(res.data.payload)\n        setTableDataLoading(false)\n    }).catch(err => {\n        Error(err)\n        console.log(err.response)\n        setTableDataLoading(false)\n    })\n    await useJwt.datapackPendingList().then(res => {\n        console.log(res)\n        const pending = []\n        const myPending = []\n        for (const item of res.data.payload) {\n            if (item.modifiedBy === userName) {\n                myPending.push(item)\n            } else {\n                pending.push(item)\n            }\n        }\n        setMyPenDatapackList(myPending)\n        setPenDatapackList(pending)\n        setTableDataLoading(false)\n    }).catch(err => {\n        Error(err)\n        console.log(err.response)\n        setTableDataLoading(false)\n    })\n}, [refresh])\n    return (\n        <Fragment>\n            <Card>\n                <CardHeader>\n                    <Nav tabs>\n                        <NavItem>\n                            <NavLink active={activeTab === '1'} onClick={() => toggle('1')}>\n                                <span className='align-middle d-none d-sm-block'>Datapack List</span>\n                            </NavLink>\n                        </NavItem>\n                        {subMenuIDs.includes(34) && <NavItem>\n                            <NavLink active={activeTab === '2'} onClick={() => toggle('2')}>\n                                <span className='align-middle d-none d-sm-block'>My Pending</span>\n                            </NavLink>\n                        </NavItem>}\n                        {subMenuIDs.includes(34) && <NavItem>\n                            <NavLink active={activeTab === '3'} onClick={() => toggle('3')}>\n                                <span className='align-middle d-none d-sm-block'>Approve</span>\n                            </NavLink>\n                        </NavItem>}\n                    </Nav>\n                </CardHeader>\n            </Card>\n            <Card>\n                <TabContent activeTab={activeTab}>\n                    <TabPane tabId='1'>\n                        <Card>\n                            <CardHeader className='border-bottom'>\n                                <CardTitle tag='h4'>Datapack</CardTitle>\n                                <div>\n                                    {subMenuIDs.includes(16) && <Button.Ripple className='ml-2' color='primary' tag={Link} to='/createDatapackList' >\n                                        <div className='d-flex align-items-center'>\n                                            <Plus size={17} style={{ marginRight: '5px' }} />\n                                            <span >Create Datapack List</span>\n                                        </div>\n                                    </Button.Ripple>}\n\n                                </div>\n                            </CardHeader>\n\n                            <DatapackList datapackList={datapackList} TableDataLoading={TableDataLoading} refresh={refresh} setrefresh={setrefresh} />\n                        </Card>\n                    </TabPane>\n                    <TabPane tabId='2'>\n\n                        <MypendingDatapackList datapackList={myPenDatapackList} TableDataLoading={TableDataLoading}/>\n\n                    </TabPane>\n\n                    <TabPane tabId='3'>\n\n                        <NeedApproveDatapackList datapackList={penDatapackList} TableDataLoading={TableDataLoading} refresh={refresh} setrefresh={setrefresh}/>\n\n                    </TabPane>\n                </TabContent>\n            </Card>\n        </Fragment>\n    )\n}\n\nexport default DatapackListMain","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n","\n//Ex-> '1234567891' to '1234 567 891'\nexport const FormatePhoneNo = (phone) => {\n    const phonenoinstring = String(phone)\n    return phonenoinstring.replace(/^(.{4})(.*)(.{3})$/, '$1 $2 $3')\n}\n\nconst options = { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' }\n\nexport const formatReadableDate = (date) => { return (new Date(date)).toLocaleDateString(undefined, options) }\n\nexport const validateEmail = (email) => {\n    return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\n}\n\nexport const thousandSeparator = (x) => { return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") }\n\nexport const handle401 = async (status) => {\n    if (status === 401) {\n        window.location.href = '/Adminlogin'\n        await localStorage.clear()\n    }\n}\n\nexport const ExportCSV = (array, keys, CSVname) => {\n    // ** Downloads CSV\n    // const keys = ['name', 'email', 'mobile']\n    // ** Converts table to CSV\n    function convertArrayOfObjectsToCSV(array) {\n        let result\n        const columnDelimiter = ','\n        const lineDelimiter = '\\n'\n        result = ''\n        result += keys.join(columnDelimiter)\n        result += lineDelimiter\n\n        array.forEach(item => {\n            let ctr = 0\n            keys.forEach(key => {\n                if (ctr > 0) result += columnDelimiter\n                result += item[key]\n                ctr++\n            })\n            result += lineDelimiter\n        })\n        return result\n    }\n    const link = document.createElement('a')\n    let csv = convertArrayOfObjectsToCSV(array)\n    if (csv === null) return\n    const userData = JSON.parse(localStorage.getItem('userData'))\n    const filename = `${CSVname}_${new Date().toISOString()}_${userData['fullname'].replaceAll(/\\s/g, '')}.csv`\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n        csv = `data:text/csv;charset=utf-8,${csv}`\n    }\n\n    link.setAttribute('href', encodeURI(csv))\n    link.setAttribute('download', filename)\n    link.click()\n}","import React, { Fragment, useState, useEffect } from 'react'\nimport {\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft\n} from 'react-feather'\nimport {\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink\n} from 'reactstrap'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\n\nconst CommonDataTable = ({ column, TableData, TableDataLoading }) => {\n    const [currentPage, setCurrentPage] = useState(0)\n\n    // ** Function to handle Pagination\n    const handlePagination = page => {\n        setCurrentPage(page.selected)\n    }\n    // ** Custom Pagination\n    const CustomPagination = () => (\n        <ReactPaginate\n            previousLabel=''\n            nextLabel=''\n            forcePage={currentPage}\n            onPageChange={page => handlePagination(page)}\n            pageCount={TableData.length ? TableData.length / 10 : 1}\n            breakLabel='...'\n            pageRangeDisplayed={2}\n            marginPagesDisplayed={2}\n            activeClassName='active'\n            pageClassName='page-item'\n            breakClassName='page-item'\n            breakLinkClassName='page-link'\n            nextLinkClassName='page-link'\n            nextClassName='page-item next'\n            previousClassName='page-item prev'\n            previousLinkClassName='page-link'\n            pageLinkClassName='page-link'\n            containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        />\n    )\n    return (\n        <Fragment>\n\n            <DataTable\n                noHeader\n                pagination\n                columns={column}\n                paginationPerPage={10}\n                className='react-dataTable'\n                sortIcon={<ChevronDown size={10} />}\n                paginationDefaultPage={currentPage + 1}\n                paginationComponent={CustomPagination}\n                data={TableData}\n                progressPending={TableDataLoading}\n                progressComponent={<Spinner color='primary' />}\n                responsive={true}\n                pointerOnHover\n                highlightOnHover\n                striped\n            />\n             \n        </Fragment>\n    )\n}\n\nexport default CommonDataTable","import React, { Fragment, useState, useEffect } from 'react'\nimport {\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft\n} from 'react-feather'\nimport {\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink\n} from 'reactstrap'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\n\nconst ServerSideDataTable = (props) => {\n    const { currentPage, handlePagination, RowCount, column, TableData, TableDataLoading, RowLimit } = props\n\n    // ** Custom Pagination\n    const CustomPagination = () => (\n        <ReactPaginate\n            previousLabel=''\n            nextLabel=''\n            forcePage={currentPage}\n            onPageChange={page => handlePagination(page)}\n            pageCount={TableData.length ? RowCount / RowLimit : 1}\n            breakLabel='...'\n            pageRangeDisplayed={2}\n            marginPagesDisplayed={2}\n            activeClassName='active'\n            pageClassName='page-item'\n            breakClassName='page-item'\n            breakLinkClassName='page-link'\n            nextLinkClassName='page-link'\n            nextClassName='page-item next'\n            previousClassName='page-item prev'\n            previousLinkClassName='page-link'\n            pageLinkClassName='page-link'\n            containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        />\n    )\n    return (\n        <Fragment>\n            <DataTable\n                noHeader\n                pagination\n                /*selectableRows*/\n                highlightOnHover\n                paginationServer\n                columns={column}\n                paginationPerPage={RowLimit}\n                className='react-dataTable'\n                sortIcon={<ChevronDown size={10} />}\n                paginationDefaultPage={currentPage + 1}\n                paginationComponent={CustomPagination}\n                data={TableData}\n                progressPending={TableDataLoading}\n                progressComponent={<Spinner color='primary' />}\n                responsive={true}\n            // selectableRowsComponent={BootstrapCheckbox}\n            />\n        </Fragment>\n    )\n}\n\nexport default ServerSideDataTable"],"sourceRoot":""}