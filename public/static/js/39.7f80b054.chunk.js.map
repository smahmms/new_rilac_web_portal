{"version":3,"sources":["views/tables/data-tables/basic/AdminComponent/ADCampaignMgt/CreateAdCampaign.js","views/viewhelper.js","../node_modules/reactstrap/es/Label.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","assets/images/icons/notification 3.svg","assets/images/icons/clarity_email-solid.svg","assets/images/icons/Instagram_logo_2016 1.svg","assets/images/icons/fa6-solid_comment-sms.svg","assets/images/icons/logos_whatsapp.svg","assets/images/icons/google_svg 1.svg","assets/images/icons/ant-design_facebook-filled.svg"],"names":["CreateAdCampaign","userData","JSON","parse","localStorage","getItem","_useRTL","useRTL","_useRTL2","_slicedToArray","budgetRef","useRef","typeRef","objRef","catRef","googleTypeRef","history","useHistory","_useState","useState","_useState2","pointRuleloading","setPointRuleloading","_useState3","fb","google","self","_useState4","toggle","setToggle","_useState5","_useState6","quotalist","setQuotaList","_useState7","_useState8","MerchantList","setMerchantLists","_useState9","_useState10","googleCampaignAdvertisingChannelType","setGoogleCampaignAdvertisingChannelType","_useState11","_useState12","facebookCampaignSpecialAdCategories","setFacebookCampaignSpecialAdCategories","_useState13","_useState14","facebookCampaignObjectives","setFacebookCampaignObjectives","_useState15","budget_id","google_status","campaign_type","business_id","id","name","google_advertising_channel_type","objective","special_ad_categories","adAccountId","facebook_status","fbamount","googleamount","fbbudgetamount","googlebudgetamount","_useState16","userInput","setUserInput","useEffect","setItem","useJwt","getQuotaList","then","res","console","log","_step","allQuotas","_iterator","_createForOfIteratorHelper","data","payload","s","n","done","q","value","is_approved","push","err","e","f","catch","Error","customerBusinessList","map","x","label","businessname","response","_jsxs","Fragment","children","_jsx","Button","Ripple","className","color","tag","Link","to","role","ChevronLeft","size","style","marginRight","Form","width","onSubmit","preventDefault","createAdCampaign","Success","error","autoComplete","Card","CardHeader","justifyContent","CardTitle","paddingLeft","CustomInput","type","defaultChecked","onChange","target","checked","_objectSpread","seftToggole","CardBody","Row","Col","sm","FormGroup","Label","for","Input","required","placeholder","Select","theme","selectThemeColors","maxMenuHeight","ref","classNamePrefix","selected","options","menuPlacement","opacity","height","onFocus","current","select","focus","some","item","facebook","onSelectBudget","title","src","paddingTop","marginLeft","objectives","catagories","channel_type","disabled","Spinner","status","toast","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","success","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","order","offset","propTypes","node","hidden","check","tagPropType","cssModule","object","xs","md","lg","xl","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","props","Tag","htmlFor","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","mapToCssModules","classNames","classes","length","React","createElement","_extends","o","allowArrayLike","it","Symbol","iterator","Array","isArray","F","_e","TypeError","normalCompletion","didErr","call","step","next","_e2"],"mappings":"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","file":"static/js/39.7f80b054.chunk.js","sourcesContent":["import React, { Fragment, useMemo, useState, useRef, useEffect } from 'react'\nimport axios from 'axios'\nimport {\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft\n} from 'react-feather'\nimport {\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput\n} from 'reactstrap'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport { useRTL } from '@hooks/useRTL'\nimport { Error, Success, ErrorMessage } from '../../../../../viewhelper'\nimport { Link, useHistory } from 'react-router-dom'\nimport notification from '../../../../../../assets/images/icons/notification 3.svg'\nimport mail from '../../../../../../assets/images/icons/clarity_email-solid.svg'\nimport insta from '../../../../../../assets/images/icons/Instagram_logo_2016 1.svg'\nimport sms from '../../../../../../assets/images/icons/fa6-solid_comment-sms.svg'\nimport wapp from '../../../../../../assets/images/icons/logos_whatsapp.svg'\nimport google from '../../../../../../assets/images/icons/google_svg 1.svg'\nimport fb from '../../../../../../assets/images/icons/ant-design_facebook-filled.svg'\nimport Nouislider from 'nouislider-react'\nimport '@styles/react/libs/noui-slider/noui-slider.scss'\nimport Slider from 'react-rangeslider'\nimport 'react-rangeslider/lib/index.css'\nimport { reducer } from '@uppy/store-redux'\nimport Select from 'react-select'\nimport { selectThemeColors } from '@utils'\n\nconst CreateAdCampaign = () => {\n    const userData = JSON.parse(localStorage.getItem('userData'))\n    const [isRtl, setIsRtl] = useRTL()\n    const budgetRef = useRef()\n    const typeRef = useRef()\n    const objRef = useRef()\n    const catRef = useRef()\n    const googleTypeRef = useRef()\n    const history = useHistory()\n    const [pointRuleloading, setPointRuleloading] = useState(false)\n    const [toggle, setToggle] = useState({ fb: false, google: false, self: true })\n    const [quotalist, setQuotaList] = useState([])\n    const [MerchantList, setMerchantLists] = useState([])\n    const [googleCampaignAdvertisingChannelType, setGoogleCampaignAdvertisingChannelType] = useState([])\n    const [facebookCampaignSpecialAdCategories, setFacebookCampaignSpecialAdCategories] = useState([])\n    const [facebookCampaignObjectives, setFacebookCampaignObjectives] = useState([])\n\n    const [userInput, setUserInput] = useState({\n        budget_id: 0,\n        google_status:0,\n        campaign_type: \"\",\n        business_id: userData?.id || '',\n        name : '', \n        google_advertising_channel_type: '', \n        objective: '',\n        special_ad_categories: '', \n        adAccountId: '',\n        facebook_status:0,\n        fbamount: 0,\n        googleamount: 0,\n        fbbudgetamount: 0,\n        googlebudgetamount: 0\n    })\n    useEffect(() => {\n        localStorage.setItem('useBMStoken', false) //for token management\n        localStorage.setItem('usePMStoken', false) //for token management\n        useJwt.getQuotaList().then(res => {\n            console.log(res)\n            const allQuotas = []\n            for (const q of res.data.payload) {\n                if (q.is_approved === true) {\n                    allQuotas.push(q)\n                } \n            }\n            setQuotaList(allQuotas)\n        }).catch(err => {\n            Error(err)\n            console.log(err)\n        })\n        useJwt.customerBusinessList().then(res => {\n            const { payload } = res.data\n            setMerchantLists(payload.map(x => { return { value: x.id, label: x.businessname } }))\n        }).catch(err => {\n            console.log(err.response)\n            Error(err)\n        })\n        useJwt.googleCampaignAdvertisingChannelType().then(res => {\n            console.log(res)\n            setGoogleCampaignAdvertisingChannelType(res.data.payload)\n        }).catch(err => {\n            Error(err)\n            console.log(err)\n        })\n        useJwt.facebookCampaignSpecialAdCategories().then(res => {\n            console.log(res)\n            setFacebookCampaignSpecialAdCategories(res.data.payload)\n        }).catch(err => {\n            Error(err)\n            console.log(err)\n        })\n        useJwt.facebookCampaignObjectives().then(res => {\n            console.log(res)\n            setFacebookCampaignObjectives(res.data.payload)\n        }).catch(err => {\n            Error(err)\n            console.log(err)\n        })\n    }, [])\n    const onSubmit = (e) => {\n        e.preventDefault()\n        setPointRuleloading(true)\n        console.log(userInput)\n        useJwt.createAdCampaign(userInput).then((response) => {\n            setPointRuleloading(false)\n            Success(response)\n            console.log(response)\n            history.push(userData?.role === 'vendor' ? '/adCampaignlistVendor' : '/adCampaignlist')\n        }).catch((error) => {\n            setPointRuleloading(false)\n            Error(error)\n            console.log(error.response)\n        })\n    }\n\n    const seftToggole = (e) => {\n        if (e.target.checked) {\n            setToggle({ ...toggle, self: true })\n        } else {\n            setToggle({ ...toggle, self: false })\n        }\n    }\n\n    const onSelectBudget = (selected) => {\n        // setUserInput({ ...userInput, budget_id: selected.value })\n        let fbbudgetamount = 0, googlebudgetamount = 0\n        quotalist.some(item => {\n            if (item.id === selected.value) {\n\n                fbbudgetamount = item.facebook\n                googlebudgetamount = item.google\n\n                return true\n            }\n            return false\n        })\n        setUserInput({ ...userInput, fbbudgetamount, googlebudgetamount, budget_id: selected.value })\n    }\n\n    return (\n        <Fragment>\n            <Button.Ripple className='mb-1' color='primary' tag={Link} to={userData?.role === 'vendor' ? '/adCampaignlistVendor' : '/adCampaignlist'} >\n                <div className='d-flex align-items-center'>\n                    <ChevronLeft size={17} style={{ marginRight: '5px' }} />\n                    <span >Back</span>\n                </div>\n            </Button.Ripple>\n            <Form style={{ width: '100%' }} onSubmit={onSubmit} autoComplete=\"off\">\n                {userData?.role !== 'vendor' && <Card>\n                    <CardHeader className='border-bottom' style={{justifyContent: 'normal'}}>\n                        <CardTitle tag='h6'>Create Ad Campaign</CardTitle>\n                        <div style={{paddingLeft: 15}}>\n                        <CustomInput type='switch' label='Self' defaultChecked={true} onChange={(e) => seftToggole(e)} id='self'  />\n                        </div>\n\n                    </CardHeader>\n                    <CardBody className='mt-1'>\n                        <Row>\n                            <Col sm=\"4\" >\n                                <FormGroup>\n                                    <Label for=\"name\">Ad Campaign Name<span style={{ color: 'red' }}>*</span></Label>\n                                    <Input type=\"text\"\n                                        name=\"name\"\n                                        id='name'\n                                        value={userInput.name}\n                                        onChange={(e) => {\n                                            setUserInput({...userInput, name: e.target.value})\n                                        }}\n                                        required\n                                        placeholder=\"name here...\"\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col sm=\"2\" >\n                                <FormGroup>\n                                    <Label for=\"campaign_type\">Campaign Type<span style={{ color: 'red' }}>*</span></Label>\n                                    <Select\n                                        theme={selectThemeColors}\n                                        maxMenuHeight={200}\n                                        ref= {typeRef}\n                                        className='react-select'\n                                        classNamePrefix='select'\n                                        onChange={(selected) => {\n                                            setUserInput({ ...userInput, campaign_type: selected.value })\n                                        }}\n                                        options={[{ value: 'both', label: 'both' }, { value: 'facebook', label: 'facebook' }, { value: 'google', label: 'google' }]}\n                                        menuPlacement='auto'\n                                    />\n                                    <Input\n                                        required\n                                        style={{\n                                            opacity: 0,\n                                            width: \"100%\",\n                                            height: 0\n                                            // position: \"absolute\"\n                                        }}\n                                        onFocus={e => typeRef.current.select.focus()}\n                                        value={userInput.campaign_type || ''}\n                                        onChange={e => ''}\n                                    />\n                                </FormGroup>\n                            </Col>\n\n                            { toggle.self && <Col sm=\"3\" >\n                                <FormGroup>\n                                    <Label for=\"budget\">Select Budget<span style={{ color: 'red' }}>*</span></Label>\n                                    <Select\n                                        theme={selectThemeColors}\n                                        ref={budgetRef}\n                                        maxMenuHeight={200}\n                                        className='react-select'\n                                        classNamePrefix='select'\n                                        onChange={(selected) => onSelectBudget(selected)}\n                                        options={ quotalist.map(q => { return { value: q.id, label: q.title } }) }\n                                        menuPlacement='auto'\n                                    />\n                                    <Input\n                                        required\n                                        style={{\n                                            opacity: 0,\n                                            width: \"100%\",\n                                            height: 0\n                                            // position: \"absolute\"\n                                        }}\n                                        onFocus={e => budgetRef.current.select.focus()}\n                                        value={userInput.budget_id || ''}\n                                        onChange={e => ''}\n                                    />\n                                </FormGroup>\n                            </Col>\n                            }\n                            {\n                                toggle.self ? null : <Col sm=\"3\" >\n                                <FormGroup>\n                                    <Label for=\"merchant_id\">Select a Merchant</Label>\n                                    <Select\n                                        theme={selectThemeColors}\n                                        maxMenuHeight={200}\n                                        className='react-select'\n                                        classNamePrefix='select'\n                                        onChange={(selected) => {\n                                            setUserInput({ ...userInput, business_id: selected.value })\n                                        }}\n                                        // options={[{ value: 'self', label: 'Self' }, ...MerchantList]}\n                                        options={MerchantList}\n                                        menuPlacement='auto'\n                                    />\n                                </FormGroup>\n                            </Col>\n                            } \n                            \n                        </Row>\n                    </CardBody>\n                </Card>}\n                \n                <Card>\n                    <CardHeader className='border-bottom'>\n                        <CardTitle tag='h6'>\n                          <img src={fb} width='30%' className='mr-1'/> Facebook \n                        </CardTitle>\n                        {\n                            (toggle.self && userInput.fbbudgetamount !== 0) && <div style={{paddingTop: 10, marginLeft: '-100px'}}>\n                                <p>Budget = {userInput.fbbudgetamount}</p>\n                            </div>\n                        }\n                        \n                        <CustomInput type='switch' onChange={(e) => {\n                            if (e.target.checked) {\n                                setToggle({ ...toggle, fb: true })\n                            } else {\n                                setToggle({ ...toggle, fb: false })\n                            }\n                        }\n                        } id='fb' />\n                    </CardHeader>\n                    {\n                        toggle.fb && <CardBody style={{ paddingTop: '15px' }}>\n                            <Row>\n                                <Col sm=\"3\" >\n                                    <FormGroup>\n                                        <Label for=\"objective\">Objective<span style={{ color: 'red' }}>*</span></Label>\n                                        <Select\n                                            ref={objRef}\n                                            theme={selectThemeColors}\n                                            maxMenuHeight={200}\n                                            className='react-select'\n                                            classNamePrefix='select'\n                                            value={{value:userInput.objective, label: userInput.objective || 'select...'}}\n                                            onChange={(selected) => {\n                                                setUserInput({ ...userInput, objective: selected.value})\n                                            }}\n                                            options={facebookCampaignObjectives.map(x => { return { value: x.objectives, label: x.objectives } })}\n                                            menuPlacement='auto'\n                                        />\n                                    </FormGroup>\n                                    <Input\n                                        required\n                                        style={{\n                                            opacity: 0,\n                                            width: \"100%\",\n                                            height: 0\n                                            // position: \"absolute\"\n                                        }}\n                                        onFocus={e => objRef.current.select.focus()}\n                                        value={userInput.objective || ''}\n                                        onChange={e => ''}\n                                    />\n                                </Col>\n                                <Col sm=\"3\" >\n                                    <FormGroup>\n                                        <Label for=\"special_ad_categories\">Special Ad Categories<span style={{ color: 'red' }}>*</span></Label>\n                                         <Select\n                                            ref={catRef}\n                                            theme={selectThemeColors}\n                                            maxMenuHeight={200}\n                                            className='react-select'\n                                            classNamePrefix='select'\n                                            value={{value:userInput.special_ad_categories, label: userInput.special_ad_categories || 'select...'}}\n                                            onChange={(selected) => {\n                                                setUserInput({ ...userInput, special_ad_categories: selected.value})\n                                            }}\n                                            options={facebookCampaignSpecialAdCategories.map(x => { return { value: x.catagories, label: x.catagories } })}\n                                            menuPlacement='auto'\n                                        />\n                                    </FormGroup>\n                                    <Input\n                                        required\n                                        style={{\n                                            opacity: 0,\n                                            width: \"100%\",\n                                            height: 0\n                                            // position: \"absolute\"\n                                        }}\n                                        onFocus={e => catRef.current.select.focus()}\n                                        value={userInput.special_ad_categories || ''}\n                                        onChange={e => ''}\n                                    />\n                                </Col>\n                                {/* <Col sm=\"4\" >\n                                    <FormGroup>\n                                        <Label for=\"adAccountId\">Ad Account Id<span style={{ color: 'red' }}>*</span></Label>\n                                        <Input type=\"text\"\n                                            name=\"adAccountId\"\n                                            id='adAccountId'\n                                            value={userInput.adAccountId}\n                                            onChange={(e) => {\n                                                setUserInput({...userInput, facebook_data: {...userInput.facebook_data, adAccountId: e.target.value}})\n                                            }}\n                                            required\n                                            placeholder=\"ad account id here...\"\n                                        />\n                                    </FormGroup>\n                                </Col> */}\n                                 <Col sm=\"3\" >\n                                <FormGroup>\n                                    <Label for=\"fbamount\">Amount<span style={{ color: 'red' }}>*</span></Label>\n                                    <Input type=\"number\"\n                                        name=\"fbamount\"\n                                        id='fbamount'\n                                        value={userInput.fbamount}\n                                        onChange={(e) => {\n                                            setUserInput({...userInput, fbamount: e.target.value})\n                                        }}\n                                        required\n                                        placeholder=\"amount here...\"\n                                    />\n                                </FormGroup>\n                            </Col>\n\n                                <Col sm=\"3\" className='mt-2'>\n                                    <FormGroup>\n                                        <CustomInput type='switch' onChange={(e) => {\n                                            if (e.target.checked) {\n                                                setUserInput({...userInput, facebook_status: 1})\n                                            } else {\n                                                setUserInput({...userInput, facebook_status: 0})\n                                            }\n                                        }\n                                        } id='statusfb' label='Facebook Campaign Status' />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </CardBody>\n                        }                               \n                    </Card>\n                <Card>\n                    <CardHeader className='border-bottom'>\n                        <CardTitle tag='h6'>\n                            <img src={google} width='30%' className='mr-1'/> Google\n                        </CardTitle>\n                        {\n                            (toggle.self && userInput.googlebudgetamount !== 0) && <div style={{paddingTop: 10, marginLeft: '-75px'}}>\n                                <p>Budget = {userInput.googlebudgetamount}</p>\n                            </div>\n                        }\n                        <CustomInput type='switch' onChange={(e) => {\n                            if (e.target.checked) {\n                                setToggle({ ...toggle, google: true })\n                            } else {\n                                setToggle({ ...toggle, google: false })\n                            }\n                        }\n                        } id='google' />\n                    </CardHeader> \n                    {\n                        toggle.google && <CardBody style={{ paddingTop: '15px' }}>\n                            <Row>\n                                <Col sm=\"3\" >\n                                    <FormGroup>\n                                        <Label for=\"google_advertising_channel_type\">Advertising Channel Type<span style={{ color: 'red' }}>*</span></Label>\n                                        <Select\n                                            ref={googleTypeRef}\n                                            theme={selectThemeColors}\n                                            maxMenuHeight={200}\n                                            className='react-select'\n                                            classNamePrefix='select'\n                                            value={{value:userInput.google_advertising_channel_type, label: userInput.google_advertising_channel_type || 'select...'}}\n                                            onChange={(selected) => {\n                                                setUserInput({ ...userInput, google_advertising_channel_type: selected.value})\n                                            }}\n                                            options={googleCampaignAdvertisingChannelType.map(x => { return { value: x.channel_type, label: x.channel_type } })}\n                                            menuPlacement='auto'\n                                        />\n                                    </FormGroup>\n                                    <Input\n                                        required\n                                        style={{\n                                            opacity: 0,\n                                            width: \"100%\",\n                                            height: 0\n                                            // position: \"absolute\"\n                                        }}\n                                        onFocus={e => googleTypeRef.current.select.focus()}\n                                        value={userInput.google_advertising_channel_type || ''}\n                                        onChange={e => ''}\n                                    />\n                                </Col>\n                                <Col sm=\"3\" >\n                                <FormGroup>\n                                    <Label for=\"googleamount\">Amount<span style={{ color: 'red' }}>*</span></Label>\n                                    <Input type=\"number\"\n                                        name=\"googleamount\"\n                                        id='googleamount'\n                                        value={userInput.googleamount}\n                                        onChange={(e) => {\n                                            setUserInput({...userInput, googleamount: e.target.value})\n                                        }}\n                                        required\n                                        placeholder=\"amount here...\"\n                                    />\n                                </FormGroup>\n                            </Col>\n                                <Col sm=\"3\" className='mt-2'>\n                                    <FormGroup>\n                                        <CustomInput type='switch' onChange={(e) => {\n                                            if (e.target.checked) {\n                                                setUserInput({...userInput, google_status: 1})\n                                            } else {\n                                                setUserInput({...userInput, google_status: 0})\n                                            }\n                                        }\n                                        } id='status' label='Google Campaign Status' />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </CardBody>\n                        }                               \n                    </Card>\n                <Card>\n                    <CardBody>\n                        <Row>\n                            <Col sm=\"12\" className='text-center'>\n                                {\n                                    pointRuleloading ? <Button.Ripple color='primary' className='mr-1' disabled>\n                                        <Spinner color='white' size='sm' />\n                                        <span className='ml-50'>Loading...</span>\n                                    </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' type=\"submit\">\n                                        <span >Submit</span>\n                                    </Button.Ripple>\n                                }\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Form>\n        </Fragment>\n    )\n}\n\nexport default CreateAdCampaign","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default __webpack_public_path__ + \"static/media/notification 3.4394d461.svg\";","export default __webpack_public_path__ + \"static/media/clarity_email-solid.3ca72f78.svg\";","export default __webpack_public_path__ + \"static/media/Instagram_logo_2016 1.122983bb.svg\";","export default __webpack_public_path__ + \"static/media/fa6-solid_comment-sms.eaf22ed7.svg\";","export default __webpack_public_path__ + \"static/media/logos_whatsapp.4af9df8a.svg\";","export default __webpack_public_path__ + \"static/media/google_svg 1.051baa93.svg\";","export default __webpack_public_path__ + \"static/media/ant-design_facebook-filled.e2dd56f6.svg\";"],"sourceRoot":""}