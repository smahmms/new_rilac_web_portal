{"version":3,"sources":["views/tables/data-tables/basic/AdminComponent/DatapackManagement/DatapackGrouping/GroupList.js","views/tables/data-tables/basic/AdminComponent/DatapackManagement/DatapackGrouping/MyPendingGroupList.js","views/tables/data-tables/basic/AdminComponent/DatapackManagement/DatapackGrouping/ViewDetails.js","views/tables/data-tables/basic/AdminComponent/DatapackManagement/DatapackGrouping/NeedApproveGroupList.js","views/tables/data-tables/basic/AdminComponent/DatapackManagement/DatapackGrouping/DatapackGroup.js","views/viewhelper.js","views/helper.js","views/tables/data-tables/basic/AdminComponent/ClientSideDataTable.js","views/statusdb.js"],"names":["MySwal","withReactContent","Swal","GroupList","_ref","datapackGroupList","TableDataLoading","rule_type","setrefresh","refresh","history","setgroupEditData","useHistory","column","name","minWidth","sortable","selector","row","_row$group_items","group_items","map","e","_jsx","style","padding","borderBottom","width","children","keyword","_row$group_items2","pack_code","item","created_at","formatReadableDate","status","Badge","color","_jsxs","_Fragment","title","Edit","size","cursor","onClick","localStorage","setItem","JSON","stringify","push","Trash","preventDefault","fire","_defineProperty","text","icon","allowOutsideClick","allowEscapeKey","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","showLoaderOnConfirm","preConfirm","useJwt","datapackGroupDelete","id","then","res","console","log","Success","data","message","catch","err","Error","response","buttonsStyling","isLoading","result","isConfirmed","deleteDetails","Fragment","CommonDataTable","TableData","MyPendingGroupList","setgroupIdForView","setref_id","_row$group_item","group_item","_row$group_item2","ViewDetailsModal","modal","toggleModal","datapackInfo","setRefresh","action","_useState","useState","_useState2","_slicedToArray","roleWiseApprovedList","setRoleWiseApprovedList","_useState3","_useState4","addUserloading","setaddUserloading","useEffect","datapackGroupApprovalById","_step","itemArr","_iterator","_createForOfIteratorHelper","payload","module_data","roles","_loop","value","approvedby","approved","find","i","role_id","role_name","approved_by","approved_at","s","n","done","f","Modal","isOpen","toggle","border","ModalHeader","ModalBody","Row","Col","sm","Card","CardHeader","CardTitle","CardBody","Table","length","index","Spinner","className","Button","Ripple","disabled","marginTop","datapackGroupApprove","action_id","type","NeedApproveGroupList","setAction","setDatapackInfo","_useState5","_useState6","setModal","CheckSquare","XSquare","DetailsModal","DatapackGroup","userName","getItem","setDatapackGroupList","myPendingList","setMyPendingList","approvepending","setapprovepending","_useState7","_useState8","setTableDataLoading","_useState9","_useState10","groupEditData","_useState11","_useState12","groupIdForView","_useState13","_useState14","ref_id","_useState15","_useState16","_useState17","_useState18","activeTab","setActiveTab","tab","datapackGroupPendingList","myPending","othersPending","modified_by","concat","SKURuleEditPage","ViewTempDetails","Nav","tabs","NavItem","NavLink","active","subMenuIDs","includes","TabContent","TabPane","tabId","tag","Link","to","Plus","marginRight","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","success","options","year","month","day","hour","minute","date","Date","toLocaleDateString","thousandSeparator","x","toString","replace","handle401","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","window","location","href","clear","stop","_x","apply","arguments","ExportCSV","array","CSVname","link","document","createElement","csv","join","forEach","ctr","key","convertArrayOfObjectsToCSV","userData","parse","filename","toISOString","replaceAll","match","setAttribute","encodeURI","click","currentPage","setCurrentPage","DataTable","noHeader","pagination","columns","paginationPerPage","sortIcon","ChevronDown","paginationDefaultPage","paginationComponent","ReactPaginate","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","progressPending","progressComponent","responsive","pointerOnHover","highlightOnHover","striped","voucherstatus","operationstatus","Insert","Update","Delete","INSERT","UPDATE","DELETE","StatusSet","statusid","VoucherStatusSet","OperationStatusSet"],"mappings":"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","file":"static/js/342.cdc5e0f6.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState, useRef } from 'react'\nimport { Eye, Edit, Trash} from 'react-feather'\n// import CommonDataTable from '../../../../tables/data-tables/basic/AdminComponent/ClientSideDataTable'\nimport { subMenuIDs } from '../../../../../../../utility/Utils'\nimport { formatReadableDate } from '../../../../../../helper'\nimport { Badge } from 'reactstrap'\nimport { Error, Success, ErrorMessage } from '../../../../../../viewhelper'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport CommonDataTable from '../../ClientSideDataTable'\nimport { useHistory } from 'react-router-dom'\nconst MySwal = withReactContent(Swal)\n\nconst GroupList = ({datapackGroupList, rule_type, TableDataLoading, setrefresh, refresh, setgroupEditData}) => {\n    const history = useHistory()\n    const editDetails = (e, item) => {\n        localStorage.setItem('datapackInfo', JSON.stringify(item))\n        history.push('/editDatapack')\n    }\n\n    const deleteDetails = (e, item) => {\n        e.preventDefault()\n        return MySwal.fire({\n            title: 'Do you want to Delete',\n            text: `Information will be delete when another user will approve this operation.`,\n            icon: 'warning',\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n            showCancelButton: true,\n            confirmButtonText: 'Yes',\n            customClass: {\n                confirmButton: 'btn btn-primary',\n                cancelButton: 'btn btn-danger ml-1'\n            },\n            showLoaderOnConfirm: true,\n            preConfirm: () => {\n                return useJwt.datapackGroupDelete({ id: item.id }).then(res => {\n                  \n                    console.log(res)\n                    Success({data: {message : res.data.message}})\n                    setrefresh(refresh + 1)\n                    \n                }).catch(err => {\n                    Error(err)\n                    console.log(err.response)\n                })\n            },\n            buttonsStyling: false,\n            allowOutsideClick: () => !Swal.isLoading()\n        }).then(function (result) {\n            if (result.isConfirmed) {\n    \n            }\n        })\n    }\n\n    const column = [\n        {\n            name: 'Group Title',\n            minWidth: '150px',\n            sortable: true,\n            selector: 'group_title'\n        },\n        {\n            name: 'Operator',\n            minWidth: '50px',\n            sortable: true,\n            selector: row => {\n                return row?.group_items?.map(e => <div style={{padding:'5px 0', borderBottom:'1px solid #E0E0E0', width:'100px'}}>{e?.keyword}</div>)\n            }\n        },\n        {\n            name: 'Pack Code',\n            minWidth: '50px',\n            sortable: true,\n            selector: row => {\n                return row?.group_items?.map(e => <div style={{padding:'5px 0', borderBottom:'1px solid #E0E0E0', width:'100px'}}>{e.pack_code || '--'}</div>)\n            }\n        },\n        {\n            name: 'Created By',\n            minWidth: '150px',\n            sortable: true,\n            selector: 'created_by'\n        },\n        {\n            name: 'Created At',\n            minWidth: '250px',\n            sortable: true,\n            selector: (item) => {\n                return item.created_at ? formatReadableDate(item.created_at) : null\n            }\n        },\n        {\n            name: 'Status',\n            minWidth: '150px',\n            sortable: true,\n            selector: (item) => {\n                if (item.status === 1) {\n                    return <Badge color= 'light-success'>Active</Badge>\n                }\n               return <Badge color= 'light-danger'>Pending</Badge>\n            }\n        },\n        {\n            name: 'Action',\n            minWidth: '150px',\n            // sortable: true,\n            selector: row => {\n                return <>\n                    <span title=\"Edit\">\n                        <Edit size={15}\n                            color='#3b3acb'\n                            style={{ cursor: 'pointer' }}\n                            onClick={(e) => editDetails(e, row) }\n                        />\n                    </span> &nbsp;&nbsp;\n                    <span title=\"Delete\">\n                        <Trash size={15}\n                            color='red'\n                            style={{ cursor: 'pointer' }}\n                            onClick={(e) => deleteDetails(e, row) }\n                        />\n                    </span>\n                </>\n            }\n        }\n    ]\n\n    return (\n        <Fragment>\n\n           <CommonDataTable column={column} TableData={ datapackGroupList} TableDataLoading={TableDataLoading} />\n\n        </Fragment>\n    )\n}\n\nexport default GroupList","import React, { Fragment, useEffect, useState, useRef } from 'react'\nimport { Eye, Edit, Trash} from 'react-feather'\nimport CommonDataTable from '../../../../../../tables/data-tables/basic/AdminComponent/ClientSideDataTable'\nimport { subMenuIDs } from '../../../../../../../utility/Utils'\nimport { formatReadableDate } from '../../../../../../helper'\nimport { Badge } from 'reactstrap'\nimport { Error, Success, ErrorMessage } from '../../../../../../viewhelper'\nimport useJwt2 from '@src/auth/jwt/useJwt2'\nimport { OperationStatusSet } from '../../../../../../statusdb'\n\n\nconst MyPendingGroupList = ({datapackGroupList, rule_type, TableDataLoading, setgroupIdForView, setref_id}) => {\n    console.log(datapackGroupList)\n    const viewDetails = (e, item) => {\n\n        setref_id(item.ref_id)\n        setgroupIdForView(item.id)\n    }\n\n    const column = [\n\n        {\n            name: 'Group Title',\n            minWidth: '200px',\n            sortable: true,\n            selector: 'group_title'\n        },\n        {\n            name: 'Operator',\n            minWidth: '50px',\n            sortable: true,\n            selector: row => {\n                return row?.group_item?.map(e => <div style={{padding:'5px 0', borderBottom:'1px solid #E0E0E0', width:'100px'}}>{e?.keyword}</div>)\n            }\n        },\n        {\n            name: 'Pack Code',\n            minWidth: '50px',\n            sortable: true,\n            selector: row => {\n                return row?.group_item?.map(e => <div style={{padding:'5px 0', borderBottom:'1px solid #E0E0E0', width:'100px'}}>{e.pack_code || '--'}</div>)\n            }\n        },\n        {\n            name: 'Created By',\n            minWidth: '150px',\n            sortable: true,\n            selector: 'created_by'\n        },\n        {\n            name: 'Created At',\n            minWidth: '250px',\n            sortable: true,\n            selector: (item) => {\n                return item.created_at ? formatReadableDate(item.created_at) : null\n            }\n        }\n    ]\n\n    return (\n        <Fragment>\n\n           <CommonDataTable column={column} TableData={ datapackGroupList} TableDataLoading={TableDataLoading} />\n\n        </Fragment>\n    )\n}\n\nexport default MyPendingGroupList","import useJwt from '@src/auth/jwt/useJwt'\nimport { useEffect, useState } from 'react'\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Modal, ModalBody, ModalHeader, Row, Spinner, Table } from 'reactstrap'\nimport { formatReadableDate } from '../../../../../../helper'\nimport { Error, Success } from '../../../../../../viewhelper'\n\nconst ViewDetailsModal = ({ modal, toggleModal, datapackInfo, setRefresh, refresh, action }) => {\n\nconst [roleWiseApprovedList, setRoleWiseApprovedList] = useState([])\nconst [addUserloading, setaddUserloading] = useState(false)\nconsole.log(datapackInfo)\n\nuseEffect(() => {\n    if (datapackInfo.id) {\n        useJwt.datapackGroupApprovalById(datapackInfo.id).then(res => {\n            console.log(res)\n            const itemArr = []\n            for (const item of res.data.payload.module_data.roles) {\n                const approvedby = res.data.payload.approved.find(i => i.role_id === item.role_id)\n                if (approvedby) {\n                    itemArr.push({role_id: item.role_name, approved_by: approvedby.approved_by, approved_at: approvedby.approved_at})\n                } else {\n                    itemArr.push({role_id: item.role_name, approved_by: '--', approved_at: ''})\n                }\n            }\n            setRoleWiseApprovedList(itemArr)\n        }).catch(err => {\n            console.log(err)\n            Error(err)\n        })\n    }\n}, [datapackInfo.id])\n\nconst handleApproveRejectActions = () => {\n    setaddUserloading(true)\n    useJwt.datapackGroupApprove({ id:datapackInfo.id, action_id: action }).then(res => {\n                setRefresh(!refresh)\n                Success(res)\n                setaddUserloading(false)\n                toggleModal()\n                console.log(res)\n            }).catch(err => {\n                // handle401(err.response.status)\n                console.log(err.response)\n                setaddUserloading(false)\n                toggleModal()\n                Error(err)\n            })\n}\n    return (\n        <Modal size=\"xl\" isOpen={modal} toggle={toggleModal} style={action === 1 ? {border:'2px solid green'} : action === 2 ? {border:'2px solid red'} : {}} >\n             <ModalHeader toggle={toggleModal}>{action === 1 ? 'Approve Datapack' : action === 2 ? 'Reject Datapack' : 'Datapack Details'}</ModalHeader>\n            <ModalBody>\n                <Row>\n                    <Col sm='12'>\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle>Approval Entry</CardTitle>\n                                </CardHeader>\n                                <CardBody>\n                                    <Row>\n                                        <Col sm=\"12\" >\n                                            <Table>\n                                                <tr>\n                                                    <th>Role Name</th>\n                                                    <th>Approved By</th>\n                                                    <th>Approved At</th>\n                                                </tr>\n                                                {\n                                                    roleWiseApprovedList?.length !== 0 ? roleWiseApprovedList?.map((item, index) => <tr key={index}>\n                                                        <td>{item.role_id}</td>\n                                                        <td>{item.approved_by}</td>\n                                                        <td>{item.approved_at ? formatReadableDate(item.approved_at || '') : '--'}</td>\n                                                    </tr>) : <Spinner className='text-center'/>\n                                                }\n                                            </Table>\n                                        </Col>\n                                    </Row>\n                                </CardBody>\n                            </Card>`\n                        </Col>\n                </Row>\n\n                <Row>\n                    <Col sm=\"12\" className='text-center'>\n                        {\n                            addUserloading ? <Button.Ripple color='primary' className='mr-1' disabled style={{ marginTop: '25px' }}>\n                                <Spinner color='white' size='sm' />\n                                <span className='ml-50'>Loading...</span>\n                            </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' onClick={handleApproveRejectActions} type=\"button\" style={{ marginTop: '25px' }}>\n                            <span >Confirm</span>\n                        </Button.Ripple>\n                        }\n                    </Col>\n                </Row>\n\n            </ModalBody>\n        </Modal>\n    )\n}\nexport default ViewDetailsModal","import React, { Fragment, useEffect, useState, useRef } from 'react'\nimport { Eye, Edit, Trash, CheckSquare, XSquare} from 'react-feather'\nimport { subMenuIDs } from '../../../../../../../utility/Utils'\nimport { formatReadableDate } from '../../../../../../helper'\nimport { Badge } from 'reactstrap'\nimport { Error, Success, ErrorMessage } from '../../../../../../viewhelper'\nimport useJwt2 from '@src/auth/jwt/useJwt2'\nimport { OperationStatusSet } from '../../../../../../statusdb'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\nimport DetailsModal from './ViewDetails'\nimport CommonDataTable from '../../ClientSideDataTable'\n\nconst NeedApproveGroupList = ({datapackGroupList, rule_type, TableDataLoading, refresh, setrefresh, setref_id}) => {\n    console.log(datapackGroupList)\n    const viewDetails = (e, item) => {\n\n        setref_id(item.ref_id)\n        datapackGroupList(item.id)\n    }\n\n    const [action, setAction] = useState(0)\n    const [datapackInfo, setDatapackInfo] = useState({})\n    const [modal, setModal] = useState(false)\n    const toggleModal = () => setModal(!modal)\n\n    const column = [\n        {\n            name: 'Group Title',\n            minWidth: '200px',\n            sortable: true,\n            selector: 'group_title'\n        },\n        {\n            name: 'Operator',\n            minWidth: '50px',\n            sortable: true,\n            selector: row => {\n                return row?.group_item?.map(e => <div style={{padding:'5px 0', borderBottom:'1px solid #E0E0E0', width:'100px'}}>{e?.keyword}</div>)\n            }\n        },\n        {\n            name: 'Pack Code',\n            minWidth: '50px',\n            sortable: true,\n            selector: row => {\n                return row?.group_item?.map(e => <div style={{padding:'5px 0', borderBottom:'1px solid #E0E0E0', width:'100px'}}>{e.pack_code || '--'}</div>)\n            }\n        },\n        {\n            name: 'Created By',\n            minWidth: '150px',\n            sortable: true,\n            selector: 'created_by'\n        },\n        {\n            name: 'Created At',\n            minWidth: '250px',\n            sortable: true,\n            selector: (item) => {\n                return item.created_at ? formatReadableDate(item.created_at) : null\n            }\n        },\n        {\n            name: 'Action',\n            minWidth: '150px',\n            // sortable: true,\n            selector: row => {\n                return <>\n                        <span title=\"Approve\">\n                        <CheckSquare size={15}\n                            color='teal'\n                            style={{ cursor: 'pointer' }}\n                            // onClick={(e) => handlePoPupActions(row.id, 'Do you want to approve?', 1)}\n                            onClick={() => {\n                                setDatapackInfo(row)\n                                setModal(true)\n                                setAction(1)\n                            }}\n                        />\n                    </span>&nbsp;&nbsp;\n                    <span title=\"Reject\">\n                        <XSquare size={15}\n                            color='red'\n                            style={{ cursor: 'pointer' }}\n                            // onClick={(e) => handlePoPupActions(row.id, 'Do you want to reject?', 2)}\n                            onClick={(e) => {\n                                setDatapackInfo(row)\n                                setModal(true)\n                                setAction(2)\n                            }}\n                        />\n                    </span>\n                </>\n            }\n        }\n    ]\n\n    return (\n        <Fragment>\n\n           <CommonDataTable column={column} TableData={ datapackGroupList} TableDataLoading={TableDataLoading} />\n           <DetailsModal \n                modal={modal}\n                toggleModal={toggleModal}\n                datapackInfo={datapackInfo} \n                refresh={refresh}\n                setRefresh={setrefresh}\n                action={action}  \n            /> \n        </Fragment>\n    )\n}\n\nexport default NeedApproveGroupList","import React, { Fragment, useEffect, useState } from 'react'\nimport {ChevronDown, Share, Printer, FileText, File, Grid, CheckCircle, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft, RefreshCw} from 'react-feather'\nimport {Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput} from 'reactstrap'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport { Link, useHistory } from 'react-router-dom'\nimport { subMenuIDs } from '../../../../../../../utility/Utils'\nimport GroupList from './GroupList'\nimport MyPendingGroupList from './MyPendingGroupList'\nimport NeedApproveGroupList from './NeedApproveGroupList'\n// import SKURuleEditPage from './EditSkuRule'\n// import ViewTempDetails from './ViewTempDetails'\nimport { Error, Success, ErrorMessage } from '../../../../../../viewhelper'\nconst DatapackGroup = () => {\n    const userName = localStorage.getItem('username')\n    const [datapackGroupList, setDatapackGroupList] = useState([])\n    const [myPendingList, setMyPendingList] = useState([])\n    const [approvepending, setapprovepending] = useState([])\n    const [TableDataLoading, setTableDataLoading] = useState(true)\n    const [groupEditData, setgroupEditData] = useState(null)\n    const [groupIdForView, setgroupIdForView] = useState(null)\n    const [ref_id, setref_id] = useState(null)\n\n    const [refresh, setrefresh] = useState(false)\n    const [activeTab, setActiveTab] = useState('1')\n    // ** Function to toggle tabs\n    const toggle = tab => setActiveTab(tab)\n\n    // is_sku_rule = true then rule_type = 1\n    // is_global_rule = true then rule_type = 2\n    // is_service_rule = true then rule_type = 3\n\n    useEffect(() => {\n\n        useJwt.datapackGroupList().then(res => {\n            console.log('datapack', res)\n            setTableDataLoading(false)\n            setDatapackGroupList(res.data.payload)\n        }).catch(err => {\n            Error(err)\n            console.log(err)\n            setTableDataLoading(false)\n        })\n\n        useJwt.datapackGroupPendingList().then(res => {\n            const myPending = []\n            const othersPending = []\n            for (const item of res.data.payload) {\n                if (item.modified_by === userName) {\n                    myPending.push(item)\n                } else {\n                    othersPending.push(item)\n                }\n            }\n            setTableDataLoading(false)\n            setMyPendingList([...myPending])\n            setapprovepending([...othersPending])\n        }).catch(err => {\n            Error(err)\n            console.log(err)\n            setTableDataLoading(false)\n        })\n\n    }, [refresh])\n\n  \n    return (\n        <Fragment>\n            {\n                groupEditData ? <SKURuleEditPage refresh={refresh} setrefresh={setrefresh}  groupEditData={groupEditData} setgroupEditData={setgroupEditData} /> : groupIdForView ? < ViewTempDetails setgroupIdForView={setgroupIdForView} groupIdForView={groupIdForView} ref_id={ref_id}/> : <Fragment>\n                <Card>\n               <CardHeader>\n                   <Nav tabs>\n                   <NavItem>\n                       <NavLink active={activeTab === '1'} onClick={() => toggle('1')}>\n                       <span className='align-middle d-none d-sm-block'>Datapack Group List</span>\n                       </NavLink>\n                   </NavItem>\n                   {subMenuIDs.includes(34) && <NavItem>\n                       <NavLink active={activeTab === '2'} onClick={() => toggle('2')}>\n                       <span className='align-middle d-none d-sm-block'>My Pending</span>\n                       </NavLink>\n                   </NavItem>}\n                   {subMenuIDs.includes(34) && <NavItem>\n                       <NavLink active={activeTab === '3'} onClick={() => toggle('3')}>\n                       <span className='align-middle d-none d-sm-block'>Approve</span>\n                       </NavLink>\n                   </NavItem>}\n                   </Nav>\n               </CardHeader>\n               </Card>\n               <Card>\n               <TabContent activeTab={activeTab}>\n                 <TabPane tabId='1'>\n                   <Card>\n                       <CardHeader className='border-bottom'>\n                           <CardTitle tag='h4'>Datapack</CardTitle>\n                           <div>\n                           {subMenuIDs.includes(16) && <Button.Ripple className='ml-2' color='primary' tag={Link} to='/createDatapack' >\n                               <div className='d-flex align-items-center'>\n                                   <Plus size={17} style={{ marginRight: '5px' }} />\n                                   <span >Create Datapack</span>\n                               </div>\n                           </Button.Ripple>}\n                   \n                           </div>\n                       </CardHeader>\n   \n                           <GroupList datapackGroupList={datapackGroupList} TableDataLoading={TableDataLoading} refresh={refresh} setrefresh={setrefresh} setgroupEditData={setgroupEditData}/>\n                   </Card>\n                 </TabPane>\n                 <TabPane tabId='2'>\n   \n                      <MyPendingGroupList datapackGroupList={myPendingList} TableDataLoading={TableDataLoading} setgroupIdForView={setgroupIdForView} setref_id={setref_id}/>\n                \n                 </TabPane>\n   \n                 <TabPane tabId='3'>\n   \n                   <NeedApproveGroupList datapackGroupList={approvepending} TableDataLoading={TableDataLoading} refresh={refresh} setrefresh={setrefresh} setgroupIdForView={setgroupIdForView} setref_id={setref_id}/>\n   \n                 </TabPane>\n               </TabContent>\n           </Card>\n           </Fragment>\n            }\n        </Fragment>\n        \n    )\n}\n\nexport default DatapackGroup","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n","\n//Ex-> '1234567891' to '1234 567 891'\nexport const FormatePhoneNo = (phone) => {\n    const phonenoinstring = String(phone)\n    return phonenoinstring.replace(/^(.{4})(.*)(.{3})$/, '$1 $2 $3')\n}\n\nconst options = { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' }\n\nexport const formatReadableDate = (date) => { return (new Date(date)).toLocaleDateString(undefined, options) }\n\nexport const validateEmail = (email) => {\n    return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\n}\n\nexport const thousandSeparator = (x) => { return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") }\n\nexport const handle401 = async (status) => {\n    if (status === 401) {\n        window.location.href = '/Adminlogin'\n        await localStorage.clear()\n    }\n}\n\nexport const ExportCSV = (array, keys, CSVname) => {\n    // ** Downloads CSV\n    // const keys = ['name', 'email', 'mobile']\n    // ** Converts table to CSV\n    function convertArrayOfObjectsToCSV(array) {\n        let result\n        const columnDelimiter = ','\n        const lineDelimiter = '\\n'\n        result = ''\n        result += keys.join(columnDelimiter)\n        result += lineDelimiter\n\n        array.forEach(item => {\n            let ctr = 0\n            keys.forEach(key => {\n                if (ctr > 0) result += columnDelimiter\n                result += item[key]\n                ctr++\n            })\n            result += lineDelimiter\n        })\n        return result\n    }\n    const link = document.createElement('a')\n    let csv = convertArrayOfObjectsToCSV(array)\n    if (csv === null) return\n    const userData = JSON.parse(localStorage.getItem('userData'))\n    const filename = `${CSVname}_${new Date().toISOString()}_${userData['fullname'].replaceAll(/\\s/g, '')}.csv`\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n        csv = `data:text/csv;charset=utf-8,${csv}`\n    }\n\n    link.setAttribute('href', encodeURI(csv))\n    link.setAttribute('download', filename)\n    link.click()\n}","import React, { Fragment, useState, useEffect } from 'react'\nimport {\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft\n} from 'react-feather'\nimport {\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink\n} from 'reactstrap'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\n\nconst CommonDataTable = ({ column, TableData, TableDataLoading }) => {\n    const [currentPage, setCurrentPage] = useState(0)\n\n    // ** Function to handle Pagination\n    const handlePagination = page => {\n        setCurrentPage(page.selected)\n    }\n    // ** Custom Pagination\n    const CustomPagination = () => (\n        <ReactPaginate\n            previousLabel=''\n            nextLabel=''\n            forcePage={currentPage}\n            onPageChange={page => handlePagination(page)}\n            pageCount={TableData.length ? TableData.length / 10 : 1}\n            breakLabel='...'\n            pageRangeDisplayed={2}\n            marginPagesDisplayed={2}\n            activeClassName='active'\n            pageClassName='page-item'\n            breakClassName='page-item'\n            breakLinkClassName='page-link'\n            nextLinkClassName='page-link'\n            nextClassName='page-item next'\n            previousClassName='page-item prev'\n            previousLinkClassName='page-link'\n            pageLinkClassName='page-link'\n            containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        />\n    )\n    return (\n        <Fragment>\n\n            <DataTable\n                noHeader\n                pagination\n                columns={column}\n                paginationPerPage={10}\n                className='react-dataTable'\n                sortIcon={<ChevronDown size={10} />}\n                paginationDefaultPage={currentPage + 1}\n                paginationComponent={CustomPagination}\n                data={TableData}\n                progressPending={TableDataLoading}\n                progressComponent={<Spinner color='primary' />}\n                responsive={true}\n                pointerOnHover\n                highlightOnHover\n                striped\n            />\n             \n        </Fragment>\n    )\n}\n\nexport default CommonDataTable","\nconst status = {\n  1: { title: 'Active', color: 'light-success ' },\n  0: { title: 'Pending', color: 'light-primary' },\n  5: { title: 'Stopped', color: 'light-danger' },\n  11: { title: 'Unpaid', color: 'light-primary' }\n}\n\nconst voucherstatus = {\n  1: { title: 'Active', color: 'light-success ' },\n  0: { title: 'In-Active', color: 'light-primary' }\n}\n\nconst operationstatus = {\n  Insert: { title: 'Insert', color: 'light-success ' },\n  Update: { title: 'Update', color: 'light-primary' },\n  Delete: { title: 'Delete', color: 'light-danger' },\n\n  INSERT: { title: 'INSERT', color: 'light-success ' },\n  UPDATE: { title: 'UPDATE', color: 'light-primary' },\n  DELETE: { title: 'DELETE', color: 'light-danger' }\n}\nexport const StatusSet = (statusid) => {\n   return status[statusid] || { title: 'N/A', color: 'light-danger' }\n}\n\nexport const VoucherStatusSet = (statusid) => {\n  return voucherstatus[statusid] || { title: 'N/A', color: 'light-danger' }\n}\n\nexport const OperationStatusSet = (statusid) => {\n  return operationstatus[statusid] || { title: 'N/A', color: 'light-danger' }\n}"],"sourceRoot":""}