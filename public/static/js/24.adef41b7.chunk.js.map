{"version":3,"sources":["../../../utils/src/browser-info.ts","../../../utils/src/utils.ts","../../../sortable/src/PluginManager.ts","../../../sortable/src/EventDispatcher.ts","../../../sortable/src/Sortable.ts","../../../plugins/swap/src/index.ts","../../../sortable/src/Animation.ts","../../../plugins/multi-drag/src/index.ts","../../../plugins/on-spill/src/index.ts","../../../plugins/auto-scroll/src/index.ts","../../src/modular-complete.ts","../node_modules/reactstrap/es/ListGroupItem.js","../home/runner/work/react-sortablejs/react-sortablejs/node_modules/@parcel/scope-hoisting/lib/helpers.js","util.ts","react-sortable.tsx"],"names":["e","t","window","navigator","userAgent","match","n","o","i","r","a","l","s","capture","passive","c","addEventListener","u","removeEventListener","d","substring","matches","msMatchesSelector","webkitMatchesSelector","h","host","document","nodeType","parentNode","f","p","g","v","classList","className","replace","m","style","defaultView","getComputedStyle","currentStyle","indexOf","b","DOMMatrix","WebKitCSSMatrix","CSSMatrix","MSCSSMatrix","w","getElementsByTagName","length","E","scrollingElement","documentElement","y","getBoundingClientRect","top","left","bottom","right","height","width","innerHeight","innerWidth","parseInt","D","x","_","children","display","It","ghost","dragged","draggable","S","lastElementChild","previousElementSibling","C","nodeName","toUpperCase","clone","T","scrollLeft","scrollTop","clientWidth","scrollWidth","clientHeight","scrollHeight","overflowX","overflowY","body","M","Math","round","N","arguments","call","this","apply","setTimeout","O","A","Polymer","jQuery","Zepto","dom","cloneNode","I","P","k","Date","getTime","R","X","initializeByDefault","Y","mount","hasOwnProperty","push","pluginEvent","eventCanceled","cancel","forEach","pluginName","sortable","options","initializePlugins","Object","assign","defaults","modifyOption","getEventProperties","eventProperties","optionListeners","B","rootEl","name","targetEl","cloneEl","toEl","fromEl","oldIndex","newIndex","oldDraggableIndex","newDraggableIndex","originalEvent","putSortable","extraEventProperties","charAt","substr","CustomEvent","createEvent","initEvent","bubbles","cancelable","to","from","item","pullMode","lastPutMode","dispatchEvent","H","evt","keys","bind","dragEl","L","parentEl","K","ghostEl","W","j","nextEl","z","lastDownEl","G","U","cloneHidden","q","dragStarted","lt","tt","activeSortable","active","V","Q","Z","$","hideGhostForTarget","xt","unhideGhostForTarget","Mt","cloneNowHidden","cloneNowShown","dispatchSortableEvent","F","J","et","nt","ot","it","rt","at","st","ct","ut","dt","ht","ft","pt","gt","vt","mt","bt","wt","Et","yt","Dt","_t","createElement","St","cssText","pointerEvents","Ct","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","marginLeft","marginRight","flexDirection","gridTemplateColumns","split","float","clear","Tt","group","join","checkPull","pull","checkPut","put","revertClone","preventDefault","stopPropagation","stopImmediatePropagation","Nt","Ot","touches","clientX","clientY","some","emptyInsertThreshold","target","_onDragOver","At","_isOutsideThisEl","toString","el","sort","disabled","store","handle","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","filter","preventOnFilter","animation","easing","setData","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","Number","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","nativeDraggable","_onTapStart","get","captureAnimationState","slice","rect","thisAnimationDuration","fromRect","addAnimationState","removeAnimationState","splice","animateAll","clearTimeout","prevFromRect","prevToRect","toRect","sqrt","pow","animate","max","animationResetTimer","animationTime","animatingX","animatingY","forRepaintDummy","offsetWidth","animated","Pt","onMove","draggedRect","related","relatedRect","willInsertAfter","kt","Rt","Xt","tagName","src","href","charCodeAt","Yt","Bt","prototype","constructor","contains","_getDirection","type","pointerType","shadowRoot","path","composedPath","checked","button","isContentEditable","trim","_prepareDragStart","ownerDocument","nextSibling","_lastX","_lastY","_onDrop","_disableDelayedDragEvents","_triggerDragStart","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","abs","floor","_onTouchMove","_onDragStart","selection","empty","getSelection","removeAllRanges","_dragStarted","_appendGhost","_nulling","_emulateDragOver","elementFromPoint","appendChild","dataTransfer","_hideClone","cloneId","insertBefore","_loopId","setInterval","effectAllowed","_dragStartId","_ignoreWhileAnimating","nextElementSibling","isOwner","axis","revert","dragRect","targetRect","canSort","fromSortable","completed","changed","insertion","_showClone","_offMoveEvents","_offUpEvents","clearInterval","removeChild","save","handleEvent","dropEffect","toArray","getAttribute","set","closest","option","destroy","Array","querySelectorAll","removeAttribute","utils","on","off","css","find","is","extend","throttle","toggleClass","index","nextTick","cancelNextTick","detectDirection","getChild","create","version","Ht","Ft","Lt","Kt","Wt","jt","zt","Gt","Ut","qt","Vt","sortableIndex","Zt","Qt","changedTouches","onSpill","$t","Jt","startIndex","dragStart","drop","te","ee","ne","oe","ie","re","ae","le","se","pid","ce","ue","scroll","scrollSensitivity","scrollSpeed","scrollFn","vx","vy","layer","bubbleScroll","_handleAutoScroll","_handleFallbackAutoScroll","dragOverCompleted","dragOverBubble","nulling","swapClass","dragOverValid","swap","isEqualNode","swapItem","_deselectMultiDrag","_checkKeyDown","_checkKeyUp","selectedClass","multiDragKey","multiDragKeyDown","isMultiDrag","delayStartGlobal","delayEnded","setupClone","showClone","hideClone","dragStartGlobal","multiDrag","dragOver","dragOverAnimationCapture","dragOverAnimationComplete","originalEvt","shiftKey","nullingGlobal","destroyGlobal","shift","key","select","deselect","multiDragElement","items","concat","clones","oldIndicies","newIndicies","toLowerCase","propTypes","tag","tagPropType","PropTypes","bool","color","string","action","any","cssModule","object","handleDisabledOnClick","ListGroupItem","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","onClick","React","_extends","defaultProps","__esModule","default","isArray","Symbol","iterator","TypeError","getOwnPropertySymbols","getOwnPropertyDescriptor","enumerable","getOwnPropertyDescriptors","defineProperties","defineProperty","value","configurable","writable","parentElement","element","map","reverse","setPrototypeOf","__proto__","Reflect","construct","sham","Proxy","ReferenceError","getPrototypeOf","exports","Utils","dragging","ref","list","chosen","selected","setList","plugins","current","makeOptions","id","getChildren","filtered","onAdd","onChange","onChoose","onClone","onEnd","onFilter","onRemove","onSort","onStart","onUnchoose","onUpdate","onSelect","onDeselect","propertyIsEnumerable","prepareOnHandlerPropAndDOM","prepareOnHandlerProp","callOnHandlerProp","removeOnSpill","revertOnSpill","console","log","includes","ReactSortable"],"mappings":"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","file":"static/js/24.adef41b7.chunk.js","sourcesContent":["function userAgent(pattern) {\n  if (typeof window !== \"undefined\" && window.navigator) {\n    return !!(/*@__PURE__*/ navigator.userAgent.match(pattern));\n  }\n}\n\nexport const IE11OrLess = userAgent(\n  /(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i\n);\nexport const Edge = userAgent(/Edge/i);\nexport const FireFox = userAgent(/firefox/i);\nexport const Safari =\n  userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nexport const IOS = userAgent(/iP(ad|od|hone)/i);\nexport const ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n","import { IE11OrLess } from \"./browser-info\";\nimport Sortable from \"../../sortable/src/Sortable\";\n\nconst captureMode = {\n  capture: false,\n  passive: false,\n};\n\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction matches(/**HTMLElement*/ el, /**String*/ selector) {\n  if (!selector) return;\n\n  selector[0] === \">\" && (selector = selector.substring(1));\n\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType\n    ? el.host\n    : el.parentNode;\n}\n\nfunction closest(\n  /**HTMLElement*/ el,\n  /**String*/ selector,\n  /**HTMLElement*/ ctx,\n  includeCTX\n) {\n  if (el) {\n    ctx = ctx || document;\n\n    do {\n      if (\n        (selector != null &&\n          (selector[0] === \">\"\n            ? el.parentNode === ctx && matches(el, selector)\n            : matches(el, selector))) ||\n        (includeCTX && el === ctx)\n      ) {\n        return el;\n      }\n\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while ((el = getParentOrHost(el)));\n  }\n\n  return null;\n}\n\nconst R_SPACE = /\\s+/g;\n\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? \"add\" : \"remove\"](name);\n    } else {\n      let className = (\" \" + el.className + \" \")\n        .replace(R_SPACE, \" \")\n        .replace(\" \" + name + \" \", \" \");\n      el.className = (className + (state ? \" \" + name : \"\")).replace(\n        R_SPACE,\n        \" \"\n      );\n    }\n  }\n}\n\nfunction css(el, prop, val) {\n  let style = el && el.style;\n\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, \"\");\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf(\"webkit\") === -1) {\n        prop = \"-webkit-\" + prop;\n      }\n\n      style[prop] = val + (typeof val === \"string\" ? \"\" : \"px\");\n    }\n  }\n}\n\nfunction matrix(el, selfOnly) {\n  let appliedTransforms = \"\";\n  if (typeof el === \"string\") {\n    appliedTransforms = el;\n  } else {\n    do {\n      //@ts-ignore\n      let transform = css(el, \"transform\");\n\n      if (transform && transform !== \"none\") {\n        appliedTransforms = transform + \" \" + appliedTransforms;\n      }\n      /* jshint boss:true */\n    } while (!selfOnly && (el = el.parentNode));\n  }\n\n  const matrixFn =\n    window.DOMMatrix ||\n    window.WebKitCSSMatrix ||\n    //@ts-ignore\n    window.CSSMatrix ||\n    //@ts-ignore\n    window.MSCSSMatrix;\n  /*jshint -W056 */\n  return matrixFn && new matrixFn(appliedTransforms);\n}\n\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    let list = ctx.getElementsByTagName(tagName),\n      i = 0,\n      n = list.length;\n\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n\n    return list;\n  }\n\n  return [];\n}\n\nfunction getWindowScrollingElement() {\n  let scrollingElement = document.scrollingElement;\n\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n\n/**\n * Returns the \"bounding client rect\" of given element\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\n * @param  {[HTMLElement]} container              The parent the element will be placed in\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\n */\nfunction getRect(\n  el,\n  relativeToContainingBlock,\n  relativeToNonStaticParent,\n  undoScale,\n  container\n) {\n  if (!el.getBoundingClientRect && el !== window) return;\n\n  let elRect, top, left, bottom, right, height, width;\n\n  if (el !== window && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n\n  if (\n    (relativeToContainingBlock || relativeToNonStaticParent) &&\n    el !== window\n  ) {\n    // Adjust for translate()\n    container = container || el.parentNode;\n\n    // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n    if (!IE11OrLess) {\n      do {\n        if (\n          container &&\n          container.getBoundingClientRect &&\n          //@ts-ignore\n          (css(container, \"transform\") !== \"none\" ||\n            (relativeToNonStaticParent &&\n              //@ts-ignore\n              css(container, \"position\") !== \"static\"))\n        ) {\n          let containerRect = container.getBoundingClientRect();\n\n          // Set relative to edges of padding box of container\n          top -=\n            //@ts-ignore\n            containerRect.top + parseInt(css(container, \"border-top-width\"));\n          left -=\n            //@ts-ignore\n            containerRect.left + parseInt(css(container, \"border-left-width\"));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n\n          break;\n        }\n        /* jshint boss:true */\n      } while ((container = container.parentNode));\n    }\n  }\n\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    //@ts-ignore\n    let elMatrix = matrix(container || el),\n      scaleX = elMatrix && elMatrix.a,\n      scaleY = elMatrix && elMatrix.d;\n\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n\n      width /= scaleX;\n      height /= scaleY;\n\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height,\n  };\n}\n\n/**\n * Checks if a side of an element is scrolled past a side of its parents\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\n */\nfunction isScrolledPast(el, elSide, parentSide) {\n  let parent = getParentAutoScrollElement(el, true),\n    //@ts-ignore\n    elSideVal = getRect(el)[elSide];\n\n  /* jshint boss:true */\n  while (parent) {\n    //@ts-ignore\n    let parentSideVal = getRect(parent)[parentSide],\n      visible;\n\n    if (parentSide === \"top\" || parentSide === \"left\") {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n\n    if (!visible) return parent;\n\n    if (parent === getWindowScrollingElement()) break;\n\n    parent = getParentAutoScrollElement(parent, false);\n  }\n\n  return false;\n}\n\n/**\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\n * and non-draggable elements\n * @param  {HTMLElement} el       The parent element\n * @param  {Number} childNum      The index of the child\n * @param  {Object} options       Parent Sortable's options\n * @return {HTMLElement}          The child at index childNum, or null if not found\n */\nfunction getChild(el, childNum, options) {\n  let currentChild = 0,\n    i = 0,\n    children = el.children;\n\n  while (i < children.length) {\n    if (\n      children[i].style.display !== \"none\" &&\n      //@ts-ignore\n      children[i] !== Sortable.ghost &&\n      //@ts-ignore\n      children[i] !== Sortable.dragged &&\n      closest(children[i], options.draggable, el, false)\n    ) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n      currentChild++;\n    }\n\n    i++;\n  }\n  return null;\n}\n\n/**\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n * @param  {HTMLElement} el       Parent element\n * @param  {selector} selector    Any other elements that should be ignored\n * @return {HTMLElement}          The last child, ignoring ghostEl\n */\nfunction lastChild(el, selector) {\n  let last = el.lastElementChild;\n\n  while (\n    last &&\n    //@ts-ignore\n    (last === Sortable.ghost ||\n      //@ts-ignore\n      css(last, \"display\") === \"none\" ||\n      (selector && !matches(last, selector)))\n  ) {\n    last = last.previousElementSibling;\n  }\n\n  return last || null;\n}\n\n/**\n * Returns the index of an element within its parent for a selected set of\n * elements\n * @param  {HTMLElement} el\n * @param  {selector} selector\n * @return {number}\n */\nfunction index(el, selector) {\n  let index = 0;\n\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n\n  /* jshint boss:true */\n  while ((el = el.previousElementSibling)) {\n    if (\n      el.nodeName.toUpperCase() !== \"TEMPLATE\" &&\n      //@ts-ignore\n      el !== Sortable.clone &&\n      (!selector || matches(el, selector))\n    ) {\n      index++;\n    }\n  }\n\n  return index;\n}\n\n/**\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\n * The value is returned in real pixels.\n * @param  {HTMLElement} el\n * @return {Array}             Offsets in the format of [left, top]\n */\nfunction getRelativeScrollOffset(el) {\n  let offsetLeft = 0,\n    offsetTop = 0,\n    winScroller = getWindowScrollingElement();\n\n  if (el) {\n    do {\n      //@ts-ignore\n      let elMatrix = matrix(el),\n        scaleX = elMatrix.a,\n        scaleY = elMatrix.d;\n\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n\n  return [offsetLeft, offsetTop];\n}\n\n/**\n * Returns the index of the object within the given array\n * @param  {Array} arr   Array that may or may not hold the object\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\n * @return {Number}      The index of the object in the array, or -1\n */\nfunction indexOfObject(arr, obj) {\n  for (let i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n  return -1;\n}\n\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n\n  let elem = el;\n  let gotSelf = false;\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (\n      elem.clientWidth < elem.scrollWidth ||\n      elem.clientHeight < elem.scrollHeight\n    ) {\n      //@ts-ignore\n      let elemCSS = css(elem);\n      if (\n        (elem.clientWidth < elem.scrollWidth &&\n          (elemCSS.overflowX == \"auto\" || elemCSS.overflowX == \"scroll\")) ||\n        (elem.clientHeight < elem.scrollHeight &&\n          (elemCSS.overflowY == \"auto\" || elemCSS.overflowY == \"scroll\"))\n      ) {\n        if (!elem.getBoundingClientRect || elem === document.body)\n          return getWindowScrollingElement();\n\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n  } while ((elem = elem.parentNode));\n\n  return getWindowScrollingElement();\n}\n\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (let key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction isRectEqual(rect1, rect2) {\n  return (\n    Math.round(rect1.top) === Math.round(rect2.top) &&\n    Math.round(rect1.left) === Math.round(rect2.left) &&\n    Math.round(rect1.height) === Math.round(rect2.height) &&\n    Math.round(rect1.width) === Math.round(rect2.width)\n  );\n}\n\nlet _throttleTimeout;\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      let args = arguments,\n        _this = this;\n\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\n\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\n\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\n\nfunction clone(el) {\n  //@ts-ignore\n  let Polymer = window.Polymer;\n  //@ts-ignore\n  let $ = window.jQuery || window.Zepto;\n\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\n\nfunction setRect(el, rect) {\n  css(el, \"position\", \"absolute\");\n  css(el, \"top\", rect.top);\n  css(el, \"left\", rect.left);\n  css(el, \"width\", rect.width);\n  css(el, \"height\", rect.height);\n}\n\nfunction unsetRect(el) {\n  css(el, \"position\", \"\");\n  css(el, \"top\", \"\");\n  css(el, \"left\", \"\");\n  css(el, \"width\", \"\");\n  css(el, \"height\", \"\");\n}\n\nconst expando = \"Sortable\" + new Date().getTime();\n\nexport {\n  on,\n  off,\n  matches,\n  getParentOrHost,\n  closest,\n  toggleClass,\n  css,\n  matrix,\n  find,\n  getWindowScrollingElement,\n  getRect,\n  isScrolledPast,\n  getChild,\n  lastChild,\n  index,\n  getRelativeScrollOffset,\n  indexOfObject,\n  getParentAutoScrollElement,\n  extend,\n  isRectEqual,\n  throttle,\n  cancelThrottle,\n  scrollBy,\n  clone,\n  setRect,\n  unsetRect,\n  expando,\n};\n","let plugins = [];\n\nconst defaults = {\n  initializeByDefault: true,\n};\n\nconst pluginManager = {\n  mount(plugin) {\n    // Set default static properties\n    for (let option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n    plugins.push(plugin);\n  },\n  pluginEvent(eventName, sortable, evt) {\n    this.eventCanceled = false;\n    evt.cancel = () => {\n      this.eventCanceled = true;\n    };\n    const eventNameGlobal = eventName + \"Global\";\n    plugins.forEach((plugin) => {\n      if (!sortable[plugin.pluginName]) return;\n      // Fire global events if it exists in this sortable\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal]({ sortable, ...evt });\n      }\n\n      // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n      if (\n        sortable.options[plugin.pluginName] &&\n        sortable[plugin.pluginName][eventName]\n      ) {\n        sortable[plugin.pluginName][eventName]({ sortable, ...evt });\n      }\n    });\n  },\n  initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach((plugin) => {\n      const pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n\n      let initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized;\n\n      // Add default options from plugin\n      Object.assign(defaults, initialized.defaults);\n    });\n\n    for (let option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      let modified = this.modifyOption(\n        sortable,\n        option,\n        sortable.options[option]\n      );\n      if (typeof modified !== \"undefined\") {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties(name, sortable) {\n    let eventProperties = {};\n    plugins.forEach((plugin) => {\n      if (typeof plugin.eventProperties !== \"function\") return;\n      Object.assign(\n        eventProperties,\n        plugin.eventProperties.call(sortable[plugin.pluginName], name)\n      );\n    });\n\n    return eventProperties;\n  },\n  modifyOption(sortable, name, value) {\n    let modifiedValue;\n    plugins.forEach((plugin) => {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return;\n\n      // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n      if (\n        plugin.optionListeners &&\n        typeof plugin.optionListeners[name] === \"function\"\n      ) {\n        modifiedValue = plugin.optionListeners[name].call(\n          sortable[plugin.pluginName],\n          value\n        );\n      }\n    });\n\n    return modifiedValue;\n  },\n};\n\nexport default pluginManager;\n","import { expando, IE11OrLess, Edge } from \"../../utils/src\";\nimport PluginManager from \"./PluginManager\";\n\nexport default function dispatchEvent({\n  sortable,\n  rootEl,\n  name,\n  targetEl,\n  cloneEl,\n  toEl,\n  fromEl,\n  oldIndex,\n  newIndex,\n  oldDraggableIndex,\n  newDraggableIndex,\n  originalEvent,\n  putSortable,\n  extraEventProperties,\n}) {\n  sortable = sortable || (rootEl && rootEl[expando]);\n  if (!sortable) return;\n\n  let evt,\n    options = sortable.options,\n    onName = \"on\" + name.charAt(0).toUpperCase() + name.substr(1);\n  // Support for new CustomEvent feature\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true,\n    });\n  } else {\n    evt = document.createEvent(\"Event\");\n    evt.initEvent(name, true, true);\n  }\n\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n  let allEventProperties = {\n    ...extraEventProperties,\n    ...PluginManager.getEventProperties(name, sortable),\n  };\n  for (let option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n","import { version } from \"../package.json\";\nimport AnimationStateManager from \"./Animation\";\nimport PluginManager from \"./PluginManager\";\nimport dispatchEvent from \"./EventDispatcher\";\n/**\n * @todo import as namespace: import * as utils from \"../../utils/src\"\n */\nimport {\n  on,\n  off,\n  closest,\n  toggleClass,\n  css,\n  matrix,\n  find,\n  getWindowScrollingElement,\n  getRect,\n  isScrolledPast,\n  getChild,\n  lastChild,\n  index,\n  getRelativeScrollOffset,\n  extend,\n  throttle,\n  scrollBy,\n  clone,\n  expando,\n  IE11OrLess,\n  Edge,\n  FireFox,\n  Safari,\n  IOS,\n  ChromeForAndroid,\n} from \"../../utils/src\";\n\nlet pluginEvent = function (\n  eventName,\n  sortable,\n  //@ts-ignore\n  { evt: originalEvent, ...data } = {}\n) {\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, {\n    dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    dragStarted: moved,\n    putSortable,\n    //@ts-ignore\n    activeSortable: Sortable.active,\n    originalEvent,\n\n    oldIndex,\n    oldDraggableIndex,\n    newIndex,\n    newDraggableIndex,\n\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n\n    cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown() {\n      cloneHidden = false;\n    },\n\n    dispatchSortableEvent(name) {\n      _dispatchEvent({ sortable, name, originalEvent });\n    },\n\n    ...data,\n  });\n};\n\nfunction _dispatchEvent(info) {\n  dispatchEvent({\n    putSortable,\n    cloneEl,\n    targetEl: dragEl,\n    rootEl,\n    oldIndex,\n    oldDraggableIndex,\n    newIndex,\n    newDraggableIndex,\n    ...info,\n  });\n}\n\nlet dragEl,\n  parentEl,\n  ghostEl,\n  rootEl,\n  nextEl,\n  lastDownEl,\n  cloneEl,\n  cloneHidden,\n  oldIndex,\n  newIndex,\n  oldDraggableIndex,\n  newDraggableIndex,\n  activeGroup,\n  putSortable,\n  awaitingDragStarted = false,\n  ignoreNextClick = false,\n  sortables = [],\n  tapEvt,\n  touchEvt,\n  lastDx,\n  lastDy,\n  tapDistanceLeft,\n  tapDistanceTop,\n  moved,\n  lastTarget,\n  lastDirection,\n  pastFirstInvertThresh = false,\n  isCircumstantialInvert = false,\n  targetMoveDistance,\n  // For positioning ghost absolutely\n  ghostRelativeParent,\n  ghostRelativeParentInitialScroll = [], // (left, top)\n  _silent = false,\n  savedInputChecked = [];\n\n/** @const */\nconst documentExists = typeof document !== \"undefined\",\n  PositionGhostAbsolutely = IOS,\n  CSSFloatProperty = Edge || IE11OrLess ? \"cssFloat\" : \"float\",\n  // This will not pass for IE9, because IE9 DnD only works on anchors\n  supportDraggable =\n    documentExists &&\n    !ChromeForAndroid &&\n    !IOS &&\n    \"draggable\" in document.createElement(\"div\"),\n  supportCssPointerEvents = (function () {\n    if (!documentExists) return;\n    // false when <= IE11\n    if (IE11OrLess) {\n      return false;\n    }\n    let el = document.createElement(\"x\");\n    el.style.cssText = \"pointer-events:auto\";\n    return el.style.pointerEvents === \"auto\";\n  })(),\n  _detectDirection = function (el, options) {\n    //@ts-ignore\n    let elCSS = css(el),\n      elWidth =\n        parseInt(elCSS.width) -\n        parseInt(elCSS.paddingLeft) -\n        parseInt(elCSS.paddingRight) -\n        parseInt(elCSS.borderLeftWidth) -\n        parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      //@ts-ignore\n      firstChildCSS = child1 && css(child1),\n      //@ts-ignore\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth =\n        firstChildCSS &&\n        parseInt(firstChildCSS.marginLeft) +\n          parseInt(firstChildCSS.marginRight) +\n          //@ts-ignore\n          getRect(child1).width,\n      secondChildWidth =\n        secondChildCSS &&\n        parseInt(secondChildCSS.marginLeft) +\n          parseInt(secondChildCSS.marginRight) +\n          //@ts-ignore\n          getRect(child2).width;\n\n    if (elCSS.display === \"flex\") {\n      return elCSS.flexDirection === \"column\" ||\n        elCSS.flexDirection === \"column-reverse\"\n        ? \"vertical\"\n        : \"horizontal\";\n    }\n\n    if (elCSS.display === \"grid\") {\n      return elCSS.gridTemplateColumns.split(\" \").length <= 1\n        ? \"vertical\"\n        : \"horizontal\";\n    }\n\n    if (child1 && firstChildCSS.float && firstChildCSS.float !== \"none\") {\n      let touchingSideChild2 =\n        firstChildCSS.float === \"left\" ? \"left\" : \"right\";\n\n      return child2 &&\n        (secondChildCSS.clear === \"both\" ||\n          secondChildCSS.clear === touchingSideChild2)\n        ? \"vertical\"\n        : \"horizontal\";\n    }\n\n    return child1 &&\n      (firstChildCSS.display === \"block\" ||\n        firstChildCSS.display === \"flex\" ||\n        firstChildCSS.display === \"table\" ||\n        firstChildCSS.display === \"grid\" ||\n        (firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === \"none\") ||\n        (child2 &&\n          elCSS[CSSFloatProperty] === \"none\" &&\n          firstChildWidth + secondChildWidth > elWidth))\n      ? \"vertical\"\n      : \"horizontal\";\n  },\n  _dragElInRowColumn = function (dragRect, targetRect, vertical) {\n    let dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n\n    return (\n      dragElS1Opp === targetS1Opp ||\n      dragElS2Opp === targetS2Opp ||\n      dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2\n    );\n  },\n  /**\n   * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n   * @param  {Number} x      X position\n   * @param  {Number} y      Y position\n   * @return {HTMLElement}   Element of the first found nearest Sortable\n   */\n  _detectNearestEmptySortable = function (x, y) {\n    let ret;\n    sortables.some((sortable) => {\n      //@ts-ignore\n      if (lastChild(sortable)) return;\n\n      //@ts-ignore\n      let rect = getRect(sortable),\n        threshold = sortable[expando].options.emptyInsertThreshold,\n        insideHorizontally =\n          x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically =\n          y >= rect.top - threshold && y <= rect.bottom + threshold;\n\n      if (threshold && insideHorizontally && insideVertically) {\n        return (ret = sortable);\n      }\n    });\n    return ret;\n  },\n  _prepareGroup = function (options) {\n    function toFn(value, pull) {\n      return function (to, from, dragEl, evt) {\n        let sameGroup =\n          to.options.group.name &&\n          from.options.group.name &&\n          to.options.group.name === from.options.group.name;\n\n        if (value == null && (pull || sameGroup)) {\n          // Default pull value\n          // Default pull and put value if same group\n          return true;\n        } else if (value == null || value === false) {\n          return false;\n        } else if (pull && value === \"clone\") {\n          return value;\n        } else if (typeof value === \"function\") {\n          return toFn(value(to, from, dragEl, evt), pull)(\n            to,\n            from,\n            dragEl,\n            evt\n          );\n        } else {\n          let otherGroup = (pull ? to : from).options.group.name;\n\n          return (\n            value === true ||\n            (typeof value === \"string\" && value === otherGroup) ||\n            (value.join && value.indexOf(otherGroup) > -1)\n          );\n        }\n      };\n    }\n\n    let group = {};\n    let originalGroup = options.group;\n\n    if (!originalGroup || typeof originalGroup != \"object\") {\n      originalGroup = { name: originalGroup };\n    }\n\n    //@ts-ignore\n    group.name = originalGroup.name;\n    //@ts-ignore\n    group.checkPull = toFn(originalGroup.pull, true);\n    //@ts-ignore\n    group.checkPut = toFn(originalGroup.put);\n    //@ts-ignore\n    group.revertClone = originalGroup.revertClone;\n\n    options.group = group;\n  },\n  _hideGhostForTarget = function () {\n    if (!supportCssPointerEvents && ghostEl) {\n      css(ghostEl, \"display\", \"none\");\n    }\n  },\n  _unhideGhostForTarget = function () {\n    if (!supportCssPointerEvents && ghostEl) {\n      css(ghostEl, \"display\", \"\");\n    }\n  };\n\n// #1184 fix - Prevent click event on fallback if dragged but item not changed position\nif (documentExists) {\n  document.addEventListener(\n    \"click\",\n    function (evt) {\n      if (ignoreNextClick) {\n        evt.preventDefault();\n        evt.stopPropagation && evt.stopPropagation();\n        evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n        ignoreNextClick = false;\n        return false;\n      }\n    },\n    true\n  );\n}\n\nlet nearestEmptyInsertDetectEvent = function (evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n    let nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n    if (nearest) {\n      // Create imitation event\n      let event = {};\n      for (let i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n      //@ts-ignore\n      event.target = event.rootEl = nearest;\n      //@ts-ignore\n      event.preventDefault = void 0;\n      //@ts-ignore\n      event.stopPropagation = void 0;\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\n\nlet _checkOutsideTargetEl = function (evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n\n/**\n * @class  Sortable\n * @param  {HTMLElement}  el\n * @param  {Object}       [options]\n */\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw `Sortable: \\`el\\` must be an HTMLElement, not ${{}.toString.call(\n      el\n    )}`;\n  }\n\n  this.el = el; // root element\n  this.options = options = Object.assign({}, options);\n\n  // Export instance\n  el[expando] = this;\n\n  let defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? \">li\" : \">*\",\n    swapThreshold: 1, // percentage; 0 <= x <= 1\n    invertSwap: false, // invert always\n    invertedSwapThreshold: null, // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function () {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: \"sortable-ghost\",\n    chosenClass: \"sortable-chosen\",\n    dragClass: \"sortable-drag\",\n    ignore: \"a, img\",\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function (dataTransfer, dragEl) {\n      dataTransfer.setData(\"Text\", dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: \"data-id\",\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold:\n      (Number.parseInt ? Number : window).parseInt(\n        //@ts-ignore\n        window.devicePixelRatio,\n        10\n      ) || 1,\n    forceFallback: false,\n    fallbackClass: \"sortable-fallback\",\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: { x: 0, y: 0 },\n    supportPointer:\n      //@ts-ignore\n      Sortable.supportPointer !== false && \"PointerEvent\" in window,\n    emptyInsertThreshold: 5,\n  };\n\n  //@ts-ignore\n  PluginManager.initializePlugins(this, el, defaults);\n\n  // Set default options\n  for (let name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n\n  _prepareGroup(options);\n\n  // Bind all private methods\n  for (let fn in this) {\n    if (fn.charAt(0) === \"_\" && typeof this[fn] === \"function\") {\n      this[fn] = this[fn].bind(this);\n    }\n  }\n\n  // Setup drag mode\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  }\n\n  // Bind events\n  if (options.supportPointer) {\n    on(el, \"pointerdown\", this._onTapStart);\n  } else {\n    on(el, \"mousedown\", this._onTapStart);\n    on(el, \"touchstart\", this._onTapStart);\n  }\n\n  if (this.nativeDraggable) {\n    on(el, \"dragover\", this);\n    on(el, \"dragenter\", this);\n  }\n\n  sortables.push(this.el);\n\n  // Restore sorting\n  options.store &&\n    options.store.get &&\n    this.sort(options.store.get(this) || []);\n\n  // Add animation state manager\n  Object.assign(this, AnimationStateManager());\n}\n\nSortable.prototype = /** @lends Sortable.prototype */ {\n  constructor: Sortable,\n\n  _isOutsideThisEl: function (target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n\n  _getDirection: function (evt, target) {\n    return typeof this.options.direction === \"function\"\n      ? this.options.direction.call(this, evt, target, dragEl)\n      : this.options.direction;\n  },\n\n  _onTapStart: function (/** Event|TouchEvent */ evt) {\n    if (!evt.cancelable) return;\n    let _this = this,\n      el = this.el,\n      options = this.options,\n      preventOnFilter = options.preventOnFilter,\n      type = evt.type,\n      touch =\n        (evt.touches && evt.touches[0]) ||\n        (evt.pointerType && evt.pointerType === \"touch\" && evt),\n      target = (touch || evt).target,\n      originalTarget =\n        (evt.target.shadowRoot &&\n          ((evt.path && evt.path[0]) ||\n            (evt.composedPath && evt.composedPath()[0]))) ||\n        target,\n      filter = options.filter;\n\n    _saveInputCheckedState(el);\n\n    // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n    if (dragEl) {\n      return;\n    }\n\n    if (\n      (/mousedown|pointerdown/.test(type) && evt.button !== 0) ||\n      options.disabled\n    ) {\n      return; // only left button and enabled\n    }\n\n    // cancel dnd if original target is content editable\n    if (originalTarget.isContentEditable) {\n      return;\n    }\n\n    // Safari ignores further event handling after mousedown\n    if (\n      !this.nativeDraggable &&\n      Safari &&\n      target &&\n      target.tagName.toUpperCase() === \"SELECT\"\n    ) {\n      return;\n    }\n\n    target = closest(target, options.draggable, el, false);\n\n    if (target && target.animated) {\n      return;\n    }\n\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    }\n\n    // Get the index of the dragged element within its parent\n    //@ts-ignore\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable);\n\n    // Check filter\n    if (typeof filter === \"function\") {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: \"filter\",\n          targetEl: target,\n          toEl: el,\n          fromEl: el,\n        });\n        pluginEvent(\"filter\", _this, { evt });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(\",\").some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: \"filter\",\n            targetEl: target,\n            fromEl: el,\n            toEl: el,\n          });\n          pluginEvent(\"filter\", _this, { evt });\n          return true;\n        }\n      });\n\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    }\n\n    // Prepare `dragstart`\n    this._prepareDragStart(evt, touch, target);\n  },\n\n  _prepareDragStart: function (\n    /** Event */ evt,\n    /** Touch */ touch,\n    /** HTMLElement */ target\n  ) {\n    let _this = this,\n      el = _this.el,\n      options = _this.options,\n      ownerDocument = el.ownerDocument,\n      dragStartFn;\n\n    if (target && !dragEl && target.parentNode === el) {\n      //@ts-ignore\n      let dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n\n      //@ts-ignore\n      Sortable.dragged = dragEl;\n\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY,\n      };\n\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n\n      dragEl.style[\"will-change\"] = \"all\";\n\n      dragStartFn = function () {\n        pluginEvent(\"delayEnded\", _this, { evt });\n        //@ts-ignore\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n          return;\n        }\n        // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n        _this._disableDelayedDragEvents();\n\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        }\n\n        // Bind the events: dragstart/dragend\n        _this._triggerDragStart(evt, touch);\n\n        // Drag start event\n        _dispatchEvent({\n          sortable: _this,\n          name: \"choose\",\n          originalEvent: evt,\n        });\n\n        // Chosen item\n        toggleClass(dragEl, options.chosenClass, true);\n      };\n\n      // Disable \"draggable\"\n      options.ignore.split(\",\").forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n\n      on(ownerDocument, \"dragover\", nearestEmptyInsertDetectEvent);\n      on(ownerDocument, \"mousemove\", nearestEmptyInsertDetectEvent);\n      on(ownerDocument, \"touchmove\", nearestEmptyInsertDetectEvent);\n\n      on(ownerDocument, \"mouseup\", _this._onDrop);\n      on(ownerDocument, \"touchend\", _this._onDrop);\n      on(ownerDocument, \"touchcancel\", _this._onDrop);\n\n      // Make dragEl draggable (must be before delay for FireFox)\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n\n      pluginEvent(\"delayStart\", this, { evt });\n\n      // Delay is impossible for native DnD in Edge or IE\n      if (\n        options.delay &&\n        (!options.delayOnTouchOnly || touch) &&\n        (!this.nativeDraggable || !(Edge || IE11OrLess))\n      ) {\n        //@ts-ignore\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n          return;\n        }\n        // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n        on(ownerDocument, \"mouseup\", _this._disableDelayedDrag);\n        on(ownerDocument, \"touchend\", _this._disableDelayedDrag);\n        on(ownerDocument, \"touchcancel\", _this._disableDelayedDrag);\n        on(ownerDocument, \"mousemove\", _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, \"touchmove\", _this._delayedDragTouchMoveHandler);\n        options.supportPointer &&\n          on(ownerDocument, \"pointermove\", _this._delayedDragTouchMoveHandler);\n\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n\n  _delayedDragTouchMoveHandler: function (/** TouchEvent|PointerEvent **/ e) {\n    let touch = e.touches ? e.touches[0] : e;\n    if (\n      Math.max(\n        Math.abs(touch.clientX - this._lastX),\n        Math.abs(touch.clientY - this._lastY)\n      ) >=\n      Math.floor(\n        this.options.touchStartThreshold /\n          ((this.nativeDraggable && window.devicePixelRatio) || 1)\n      )\n    ) {\n      this._disableDelayedDrag();\n    }\n  },\n\n  _disableDelayedDrag: function () {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n\n    this._disableDelayedDragEvents();\n  },\n\n  _disableDelayedDragEvents: function () {\n    let ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, \"mouseup\", this._disableDelayedDrag);\n    off(ownerDocument, \"touchend\", this._disableDelayedDrag);\n    off(ownerDocument, \"touchcancel\", this._disableDelayedDrag);\n    off(ownerDocument, \"mousemove\", this._delayedDragTouchMoveHandler);\n    off(ownerDocument, \"touchmove\", this._delayedDragTouchMoveHandler);\n    off(ownerDocument, \"pointermove\", this._delayedDragTouchMoveHandler);\n  },\n\n  _triggerDragStart: function (/** Event */ evt, /** Touch */ touch) {\n    touch = touch || (evt.pointerType == \"touch\" && evt);\n\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, \"pointermove\", this._onTouchMove);\n      } else if (touch) {\n        on(document, \"touchmove\", this._onTouchMove);\n      } else {\n        on(document, \"mousemove\", this._onTouchMove);\n      }\n    } else {\n      on(dragEl, \"dragend\", this);\n      on(rootEl, \"dragstart\", this._onDragStart);\n    }\n\n    try {\n      //@ts-ignore\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          //@ts-ignore\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n\n  _dragStarted: function (fallback, evt) {\n    let _this = this;\n    awaitingDragStarted = false;\n    if (rootEl && dragEl) {\n      pluginEvent(\"dragStarted\", this, { evt });\n\n      if (this.nativeDraggable) {\n        on(document, \"dragover\", _checkOutsideTargetEl);\n      }\n      let options = this.options;\n\n      // Apply effect\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n\n      //@ts-ignore\n      Sortable.active = this;\n\n      fallback && this._appendGhost();\n\n      // Drag start event\n      _dispatchEvent({\n        sortable: this,\n        name: \"start\",\n        originalEvent: evt,\n      });\n    } else {\n      this._nulling();\n    }\n  },\n\n  _emulateDragOver: function () {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n\n      _hideGhostForTarget();\n\n      let target = document.elementFromPoint(\n        touchEvt.clientX,\n        touchEvt.clientY\n      );\n      let parent = target;\n\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(\n          touchEvt.clientX,\n          touchEvt.clientY\n        );\n        if (target === parent) break;\n        parent = target;\n      }\n\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            let inserted;\n\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent,\n            });\n\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n\n          target = parent; // store last element\n        } while (\n          /* jshint boss:true */\n          //@ts-ignore\n          (parent = parent.parentNode)\n        );\n      }\n\n      _unhideGhostForTarget();\n    }\n  },\n\n  _onTouchMove: function (/**TouchEvent*/ evt) {\n    if (tapEvt) {\n      let options = this.options,\n        fallbackTolerance = options.fallbackTolerance,\n        fallbackOffset = options.fallbackOffset,\n        touch = evt.touches ? evt.touches[0] : evt,\n        ghostMatrix = ghostEl && matrix(ghostEl, true),\n        scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n        scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n        relativeScrollOffset =\n          PositionGhostAbsolutely &&\n          ghostRelativeParent &&\n          getRelativeScrollOffset(ghostRelativeParent),\n        dx =\n          (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) +\n          (relativeScrollOffset\n            ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0]\n            : 0) /\n            (scaleX || 1),\n        dy =\n          (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) +\n          (relativeScrollOffset\n            ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1]\n            : 0) /\n            (scaleY || 1);\n\n      // only set the status to dragging, when we are actually dragging\n      //@ts-ignore\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (\n          fallbackTolerance &&\n          Math.max(\n            Math.abs(touch.clientX - this._lastX),\n            Math.abs(touch.clientY - this._lastY)\n          ) < fallbackTolerance\n        ) {\n          return;\n        }\n        this._onDragStart(evt, true);\n      }\n\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy,\n          };\n        }\n\n        let cssMatrix = `matrix(${ghostMatrix.a},${ghostMatrix.b},${ghostMatrix.c},${ghostMatrix.d},${ghostMatrix.e},${ghostMatrix.f})`;\n\n        css(ghostEl, \"webkitTransform\", cssMatrix);\n        css(ghostEl, \"mozTransform\", cssMatrix);\n        css(ghostEl, \"msTransform\", cssMatrix);\n        css(ghostEl, \"transform\", cssMatrix);\n\n        lastDx = dx;\n        lastDy = dy;\n\n        touchEvt = touch;\n      }\n\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n\n  _appendGhost: function () {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      let container = this.options.fallbackOnBody ? document.body : rootEl,\n        rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n        options = this.options;\n\n      // Position absolutely\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n\n        while (\n          //@ts-ignore\n          css(ghostRelativeParent, \"position\") === \"static\" &&\n          //@ts-ignore\n          css(ghostRelativeParent, \"transform\") === \"none\" &&\n          ghostRelativeParent !== document\n        ) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n\n        if (\n          ghostRelativeParent !== document.body &&\n          ghostRelativeParent !== document.documentElement\n        ) {\n          if (ghostRelativeParent === document)\n            ghostRelativeParent = getWindowScrollingElement();\n\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(\n          ghostRelativeParent\n        );\n      }\n\n      ghostEl = dragEl.cloneNode(true);\n\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n\n      css(ghostEl, \"transition\", \"\");\n      css(ghostEl, \"transform\", \"\");\n\n      css(ghostEl, \"box-sizing\", \"border-box\");\n      css(ghostEl, \"margin\", 0);\n      css(ghostEl, \"top\", rect.top);\n      css(ghostEl, \"left\", rect.left);\n      css(ghostEl, \"width\", rect.width);\n      css(ghostEl, \"height\", rect.height);\n      css(ghostEl, \"opacity\", \"0.8\");\n      css(ghostEl, \"position\", PositionGhostAbsolutely ? \"absolute\" : \"fixed\");\n      css(ghostEl, \"zIndex\", \"100000\");\n      css(ghostEl, \"pointerEvents\", \"none\");\n\n      //@ts-ignore\n      Sortable.ghost = ghostEl;\n\n      container.appendChild(ghostEl);\n\n      // Set transform-origin\n      css(\n        ghostEl,\n        \"transform-origin\",\n        (tapDistanceLeft / parseInt(ghostEl.style.width)) * 100 +\n          \"% \" +\n          (tapDistanceTop / parseInt(ghostEl.style.height)) * 100 +\n          \"%\"\n      );\n    }\n  },\n\n  _onDragStart: function (/**Event*/ evt, /**boolean*/ fallback) {\n    let _this = this;\n    let dataTransfer = evt.dataTransfer;\n    let options = _this.options;\n\n    pluginEvent(\"dragStart\", this, { evt });\n    //@ts-ignore\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n      return;\n    }\n\n    pluginEvent(\"setupClone\", this);\n    //@ts-ignore\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n\n      cloneEl.draggable = false;\n      cloneEl.style[\"will-change\"] = \"\";\n\n      this._hideClone();\n\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      //@ts-ignore\n      Sortable.clone = cloneEl;\n    }\n\n    // #1143: IFrame support workaround\n    _this.cloneId = _nextTick(function () {\n      pluginEvent(\"clone\", _this);\n      //@ts-ignore\n      if (Sortable.eventCanceled) return;\n\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n      _this._hideClone();\n\n      _dispatchEvent({\n        sortable: _this,\n        name: \"clone\",\n      });\n    });\n\n    !fallback && toggleClass(dragEl, options.dragClass, true);\n\n    // Set proper drop events\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, \"mouseup\", _this._onDrop);\n      off(document, \"touchend\", _this._onDrop);\n      off(document, \"touchcancel\", _this._onDrop);\n\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = \"move\";\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n\n      on(document, \"drop\", _this);\n\n      // #1276 fix:\n      css(dragEl, \"transform\", \"translateZ(0)\");\n    }\n\n    awaitingDragStarted = true;\n\n    _this._dragStartId = _nextTick(\n      _this._dragStarted.bind(_this, fallback, evt)\n    );\n    on(document, \"selectstart\", _this);\n\n    moved = true;\n\n    if (Safari) {\n      css(document.body, \"user-select\", \"none\");\n    }\n  },\n\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function (/**Event*/ evt) {\n    let el = this.el,\n      target = evt.target,\n      dragRect,\n      targetRect,\n      revert,\n      options = this.options,\n      group = options.group,\n      //@ts-ignore\n      activeSortable = Sortable.active,\n      isOwner = activeGroup === group,\n      canSort = options.sort,\n      fromSortable = putSortable || activeSortable,\n      vertical,\n      _this = this,\n      completedFired = false;\n\n    if (_silent) return;\n\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, {\n        evt,\n        isOwner,\n        axis: vertical ? \"vertical\" : \"horizontal\",\n        revert,\n        dragRect,\n        targetRect,\n        canSort,\n        fromSortable,\n        target,\n        completed,\n        onMove(target, after) {\n          return onMove(\n            rootEl,\n            el,\n            dragEl,\n            dragRect,\n            target,\n            //@ts-ignore\n            getRect(target),\n            evt,\n            after\n          );\n        },\n        changed,\n        ...extra,\n      });\n    }\n\n    // Capture animation state\n    function capture() {\n      //@ts-ignore\n      dragOverEvent(\"dragOverAnimationCapture\");\n\n      _this.captureAnimationState();\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    }\n\n    // Return invocation when dragEl is inserted (or completed)\n    function completed(insertion) {\n      dragOverEvent(\"dragOverCompleted\", { insertion });\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(\n            dragEl,\n            putSortable\n              ? putSortable.options.ghostClass\n              : activeSortable.options.ghostClass,\n            false\n          );\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n\n        //@ts-ignore\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n          //@ts-ignore\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        }\n\n        // Animation\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n        _this.animateAll(function () {\n          //@ts-ignore\n          dragOverEvent(\"dragOverAnimationComplete\");\n          _this._ignoreWhileAnimating = null;\n        });\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      }\n\n      // Null lastTarget if it is not inside a previously swapped element\n      if (\n        (target === dragEl && !dragEl.animated) ||\n        (target === el && !target.animated)\n      ) {\n        lastTarget = null;\n      }\n\n      // no bubbling and not fallback\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n\n        // Do not detect for empty insert if already inserted\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n\n      return (completedFired = true);\n    }\n\n    // Call when dragEl has been inserted\n    function changed() {\n      //@ts-ignore\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n      _dispatchEvent({\n        sortable: _this,\n        name: \"change\",\n        toEl: el,\n        newIndex,\n        newDraggableIndex,\n        originalEvent: evt,\n      });\n    }\n\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n\n    target = closest(target, options.draggable, el, true);\n\n    //@ts-ignore\n    dragOverEvent(\"dragOver\");\n    //@ts-ignore\n    if (Sortable.eventCanceled) return completedFired;\n\n    if (\n      dragEl.contains(evt.target) ||\n      (target.animated && target.animatingX && target.animatingY) ||\n      _this._ignoreWhileAnimating === target\n    ) {\n      return completed(false);\n    }\n\n    ignoreNextClick = false;\n\n    if (\n      activeSortable &&\n      !options.disabled &&\n      (isOwner\n        ? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n        : putSortable === this ||\n          ((this.lastPutMode = activeGroup.checkPull(\n            this,\n            activeSortable,\n            dragEl,\n            evt\n          )) &&\n            group.checkPut(this, activeSortable, dragEl, evt)))\n    ) {\n      vertical = this._getDirection(evt, target) === \"vertical\";\n\n      //@ts-ignore\n      dragRect = getRect(dragEl);\n\n      //@ts-ignore\n      dragOverEvent(\"dragOverValid\");\n      //@ts-ignore\n      if (Sortable.eventCanceled) return completedFired;\n\n      if (revert) {\n        parentEl = rootEl; // actualization\n        capture();\n\n        this._hideClone();\n\n        //@ts-ignore\n        dragOverEvent(\"revert\");\n\n        //@ts-ignore\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n\n        return completed(true);\n      }\n\n      let elLastChild = lastChild(el, options.draggable);\n\n      if (\n        !elLastChild ||\n        (_ghostIsLast(evt, vertical, this) && !elLastChild.animated)\n      ) {\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        }\n\n        // assign target only if condition is true\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n\n        if (target) {\n          //@ts-ignore\n          targetRect = getRect(target);\n        }\n\n        if (\n          onMove(\n            rootEl,\n            el,\n            dragEl,\n            dragRect,\n            target,\n            targetRect,\n            evt,\n            !!target\n          ) !== false\n        ) {\n          capture();\n          el.appendChild(dragEl);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        //@ts-ignore\n        targetRect = getRect(target);\n        let direction = 0,\n          targetBeforeFirstSwap,\n          differentLevel = dragEl.parentNode !== el,\n          differentRowCol = !_dragElInRowColumn(\n            (dragEl.animated && dragEl.toRect) || dragRect,\n            (target.animated && target.toRect) || targetRect,\n            vertical\n          ),\n          side1 = vertical ? \"top\" : \"left\",\n          scrolledPastTop =\n            isScrolledPast(target, \"top\", \"top\") ||\n            isScrolledPast(dragEl, \"top\", \"top\"),\n          scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert =\n            (!differentRowCol && options.invertSwap) || differentLevel;\n        }\n\n        direction = _getSwapDirection(\n          evt,\n          target,\n          targetRect,\n          vertical,\n          differentRowCol ? 1 : options.swapThreshold,\n          options.invertedSwapThreshold == null\n            ? options.swapThreshold\n            : options.invertedSwapThreshold,\n          isCircumstantialInvert,\n          lastTarget === target\n        );\n\n        let sibling;\n\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          //@ts-ignore\n          let dragIndex = index(dragEl);\n\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (\n            sibling &&\n            //@ts-ignore\n            (css(sibling, \"display\") === \"none\" || sibling === ghostEl)\n          );\n        }\n        // If dragEl is already beside target: Do not insert\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n\n        lastTarget = target;\n\n        lastDirection = direction;\n\n        let nextSibling = target.nextElementSibling,\n          after = false;\n\n        after = direction === 1;\n\n        let moveVector = onMove(\n          rootEl,\n          el,\n          dragEl,\n          dragRect,\n          target,\n          targetRect,\n          evt,\n          after\n        );\n\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n\n          _silent = true;\n          setTimeout(_unsilent, 30);\n\n          capture();\n\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(\n              dragEl,\n              after ? nextSibling : target\n            );\n          }\n\n          // Undo chrome's scroll adjustment (has no effect on other browsers)\n          if (scrolledPastTop) {\n            scrollBy(\n              scrolledPastTop,\n              0,\n              scrollBefore - scrolledPastTop.scrollTop\n            );\n          }\n\n          parentEl = dragEl.parentNode; // actualization\n\n          // must be done before animation\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(\n              //@ts-ignore\n              targetBeforeFirstSwap - getRect(target)[side1]\n            );\n          }\n          changed();\n\n          return completed(true);\n        }\n      }\n\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n\n    return false;\n  },\n\n  _ignoreWhileAnimating: null,\n\n  _offMoveEvents: function () {\n    off(document, \"mousemove\", this._onTouchMove);\n    off(document, \"touchmove\", this._onTouchMove);\n    off(document, \"pointermove\", this._onTouchMove);\n    off(document, \"dragover\", nearestEmptyInsertDetectEvent);\n    off(document, \"mousemove\", nearestEmptyInsertDetectEvent);\n    off(document, \"touchmove\", nearestEmptyInsertDetectEvent);\n  },\n\n  _offUpEvents: function () {\n    let ownerDocument = this.el.ownerDocument;\n\n    off(ownerDocument, \"mouseup\", this._onDrop);\n    off(ownerDocument, \"touchend\", this._onDrop);\n    off(ownerDocument, \"pointerup\", this._onDrop);\n    off(ownerDocument, \"touchcancel\", this._onDrop);\n    off(document, \"selectstart\", this);\n  },\n\n  _onDrop: function (/**Event*/ evt) {\n    let el = this.el,\n      options = this.options;\n\n    // Get the index of the dragged element within its parent\n    //@ts-ignore\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    pluginEvent(\"drop\", this, {\n      evt,\n    });\n\n    parentEl = dragEl && dragEl.parentNode;\n\n    // Get again after plugin event\n    //@ts-ignore\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    //@ts-ignore\n    if (Sortable.eventCanceled) {\n      this._nulling();\n      return;\n    }\n\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n\n    clearInterval(this._loopId);\n\n    clearTimeout(this._dragStartTimer);\n\n    _cancelNextTick(this.cloneId);\n    _cancelNextTick(this._dragStartId);\n\n    // Unbind events\n    if (this.nativeDraggable) {\n      off(document, \"drop\", this);\n      off(el, \"dragstart\", this._onDragStart);\n    }\n    this._offMoveEvents();\n    this._offUpEvents();\n\n    if (Safari) {\n      css(document.body, \"user-select\", \"\");\n    }\n\n    css(dragEl, \"transform\", \"\");\n\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n      if (\n        rootEl === parentEl ||\n        (putSortable && putSortable.lastPutMode !== \"clone\")\n      ) {\n        // Remove clone(s)\n        cloneEl &&\n          cloneEl.parentNode &&\n          cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, \"dragend\", this);\n        }\n\n        _disableDraggable(dragEl);\n        dragEl.style[\"will-change\"] = \"\";\n\n        // Remove classes\n        // ghostClass is added in dragStarted\n        if (moved && !awaitingDragStarted) {\n          toggleClass(\n            dragEl,\n            putSortable\n              ? putSortable.options.ghostClass\n              : this.options.ghostClass,\n            false\n          );\n        }\n        toggleClass(dragEl, this.options.chosenClass, false);\n\n        // Drag stop event\n        _dispatchEvent({\n          sortable: this,\n          name: \"unchoose\",\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt,\n        });\n\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: \"add\",\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt,\n            });\n\n            // Remove event\n            _dispatchEvent({\n              sortable: this,\n              name: \"remove\",\n              toEl: parentEl,\n              originalEvent: evt,\n            });\n\n            // drag from one list and drop into another\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: \"sort\",\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt,\n            });\n\n            _dispatchEvent({\n              sortable: this,\n              name: \"sort\",\n              toEl: parentEl,\n              originalEvent: evt,\n            });\n          }\n\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: \"update\",\n                toEl: parentEl,\n                originalEvent: evt,\n              });\n\n              _dispatchEvent({\n                sortable: this,\n                name: \"sort\",\n                toEl: parentEl,\n                originalEvent: evt,\n              });\n            }\n          }\n        }\n\n        //@ts-ignore\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n\n          _dispatchEvent({\n            sortable: this,\n            name: \"end\",\n            toEl: parentEl,\n            originalEvent: evt,\n          });\n\n          // Save sorting\n          this.save();\n        }\n      }\n    }\n    this._nulling();\n  },\n\n  _nulling: function () {\n    pluginEvent(\"nulling\", this);\n    //@ts-ignore\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n\n  handleEvent: function (/**Event*/ evt) {\n    switch (evt.type) {\n      case \"drop\":\n      case \"dragend\":\n        this._onDrop(evt);\n        break;\n\n      case \"dragenter\":\n      case \"dragover\":\n        if (dragEl) {\n          this._onDragOver(evt);\n          _globalDragOver(evt);\n        }\n        break;\n\n      case \"selectstart\":\n        evt.preventDefault();\n        break;\n    }\n  },\n\n  /**\n   * Serializes the item into an array of string.\n   * @returns {String[]}\n   */\n  toArray: function () {\n    let order = [],\n      el,\n      children = this.el.children,\n      i = 0,\n      n = children.length,\n      options = this.options;\n\n    for (; i < n; i++) {\n      el = children[i];\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n\n    return order;\n  },\n\n  /**\n   * Sorts the elements according to the array.\n   * @param  {String[]}  order  order of the items\n   */\n  sort: function (order) {\n    let items = {},\n      rootEl = this.el;\n\n    this.toArray().forEach(function (id, i) {\n      let el = rootEl.children[i];\n\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n  },\n\n  /**\n   * Save the current sorting\n   */\n  save: function () {\n    let store = this.options.store;\n    store && store.set && store.set(this);\n  },\n\n  /**\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n   * @param   {HTMLElement}  el\n   * @param   {String}       [selector]  default: `options.draggable`\n   * @returns {HTMLElement|null}\n   */\n  closest: function (el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n\n  /**\n   * Set/get option\n   * @param   {string} name\n   * @param   {*}      [value]\n   * @returns {*}\n   */\n  option: function (name, value) {\n    let options = this.options;\n\n    if (value === void 0) {\n      return options[name];\n    } else {\n      let modifiedValue = PluginManager.modifyOption(this, name, value);\n      if (typeof modifiedValue !== \"undefined\") {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n\n      if (name === \"group\") {\n        _prepareGroup(options);\n      }\n    }\n  },\n\n  /**\n   * Destroy\n   */\n  destroy: function () {\n    pluginEvent(\"destroy\", this);\n    let el = this.el;\n\n    el[expando] = null;\n\n    off(el, \"mousedown\", this._onTapStart);\n    off(el, \"touchstart\", this._onTapStart);\n    off(el, \"pointerdown\", this._onTapStart);\n\n    if (this.nativeDraggable) {\n      off(el, \"dragover\", this);\n      off(el, \"dragenter\", this);\n    }\n    // Remove draggable attributes\n    Array.prototype.forEach.call(el.querySelectorAll(\"[draggable]\"), function (\n      el\n    ) {\n      el.removeAttribute(\"draggable\");\n    });\n\n    this._onDrop();\n\n    this._disableDelayedDragEvents();\n\n    sortables.splice(sortables.indexOf(this.el), 1);\n\n    this.el = el = null;\n  },\n\n  _hideClone: function () {\n    if (!cloneHidden) {\n      pluginEvent(\"hideClone\", this);\n      //@ts-ignore\n      if (Sortable.eventCanceled) return;\n\n      css(cloneEl, \"display\", \"none\");\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n      cloneHidden = true;\n    }\n  },\n\n  _showClone: function (putSortable) {\n    if (putSortable.lastPutMode !== \"clone\") {\n      this._hideClone();\n      return;\n    }\n\n    if (cloneHidden) {\n      pluginEvent(\"showClone\", this);\n      //@ts-ignore\n      if (Sortable.eventCanceled) return;\n\n      // show clone at dragEl or original position\n      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n\n      css(cloneEl, \"display\", \"\");\n      cloneHidden = false;\n    }\n  },\n};\n\nfunction _globalDragOver(/**Event*/ evt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = \"move\";\n  }\n  evt.cancelable && evt.preventDefault();\n}\n\nfunction onMove(\n  fromEl,\n  toEl,\n  dragEl,\n  dragRect,\n  targetEl,\n  targetRect,\n  originalEvent,\n  willInsertAfter\n) {\n  let evt,\n    sortable = fromEl[expando],\n    onMoveFn = sortable.options.onMove,\n    retVal;\n  // Support for new CustomEvent feature\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(\"move\", {\n      bubbles: true,\n      cancelable: true,\n    });\n  } else {\n    evt = document.createEvent(\"Event\");\n    evt.initEvent(\"move\", true, true);\n  }\n\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  //@ts-ignore\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n\n  evt.originalEvent = originalEvent;\n\n  fromEl.dispatchEvent(evt);\n\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n\n  return retVal;\n}\n\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\n\nfunction _unsilent() {\n  _silent = false;\n}\n\nfunction _ghostIsLast(evt, vertical, sortable) {\n  //@ts-ignore\n  let rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  const spacer = 10;\n\n  return vertical\n    ? evt.clientX > rect.right + spacer ||\n        (evt.clientX <= rect.right &&\n          evt.clientY > rect.bottom &&\n          evt.clientX >= rect.left)\n    : (evt.clientX > rect.right && evt.clientY > rect.top) ||\n        (evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer);\n}\n\nfunction _getSwapDirection(\n  evt,\n  target,\n  targetRect,\n  vertical,\n  swapThreshold,\n  invertedSwapThreshold,\n  invertSwap,\n  isLastTarget\n) {\n  let mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n    targetLength = vertical ? targetRect.height : targetRect.width,\n    targetS1 = vertical ? targetRect.top : targetRect.left,\n    targetS2 = vertical ? targetRect.bottom : targetRect.right,\n    invert = false;\n\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (\n        !pastFirstInvertThresh &&\n        (lastDirection === 1\n          ? mouseOnAxis > targetS1 + (targetLength * invertedSwapThreshold) / 2\n          : mouseOnAxis < targetS2 - (targetLength * invertedSwapThreshold) / 2)\n      ) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (\n          lastDirection === 1\n            ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n            : mouseOnAxis > targetS2 - targetMoveDistance\n        ) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (\n        mouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold)) / 2 &&\n        mouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold)) / 2\n      ) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n\n  invert = invert || invertSwap;\n\n  if (invert) {\n    // Invert of regular\n    if (\n      mouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold) / 2 ||\n      mouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold) / 2\n    ) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * Gets the direction dragEl must be swapped relative to target in order to make it\n * seem that dragEl has been \"inserted\" into that element's position\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n * @return {Number}                   Direction dragEl must be swapped\n */\nfunction _getInsertDirection(target) {\n  //@ts-ignore\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n\n/**\n * Generate id\n * @param   {HTMLElement} el\n * @returns {String}\n * @private\n */\nfunction _generateId(el) {\n  let str = el.tagName + el.className + el.src + el.href + el.textContent,\n    i = str.length,\n    sum = 0;\n\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum.toString(36);\n}\n\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n\n  let inputs = root.getElementsByTagName(\"input\");\n  let idx = inputs.length;\n\n  while (idx--) {\n    let el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\n\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\n\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n}\n\n// Fixed #973:\nif (documentExists) {\n  on(document, \"touchmove\", function (evt) {\n    //@ts-ignore\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n}\n\n// Export utils\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function (el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild,\n};\n\n/**\n * Get the Sortable instance of an element\n * @param  {HTMLElement} element The element\n * @return {Sortable|undefined}         The instance of Sortable\n */\nSortable.get = function (element) {\n  return element[expando];\n};\n\n/**\n * Mount a plugin to Sortable\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\n */\nSortable.mount = function (...plugins) {\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n\n  plugins.forEach((plugin) => {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw `Sortable: Mounted plugin must be a constructor function, not ${{}.toString.call(\n        plugin\n      )}`;\n    }\n    if (plugin.utils) Sortable.utils = { ...Sortable.utils, ...plugin.utils };\n\n    PluginManager.mount(plugin);\n  });\n};\n\n/**\n * Create sortable instance\n * @param {HTMLElement}  el\n * @param {Object}      [options]\n */\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n};\n\n// Export\nSortable.version = version;\n\nexport default Sortable;\n","import { toggleClass, index } from \"../../../utils/src\";\n\nlet lastSwapEl;\n\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: \"sortable-swap-highlight\",\n    };\n  }\n\n  Swap.prototype = {\n    dragStart({ dragEl }) {\n      lastSwapEl = dragEl;\n    },\n    dragOverValid({\n      completed,\n      target,\n      onMove,\n      activeSortable,\n      changed,\n      cancel,\n    }) {\n      if (!activeSortable.options.swap) return;\n      let el = this.sortable.el,\n        options = this.options;\n      if (target && target !== el) {\n        let prevSwapEl = lastSwapEl;\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n      changed();\n\n      completed(true);\n      cancel();\n    },\n    drop({ activeSortable, putSortable, dragEl }) {\n      let toSortable = putSortable || this.sortable;\n      let options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n      if (\n        lastSwapEl &&\n        (options.swap || (putSortable && putSortable.options.swap))\n      ) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable)\n            activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling() {\n      lastSwapEl = null;\n    },\n  };\n\n  return Object.assign(Swap, {\n    pluginName: \"swap\",\n    eventProperties() {\n      return {\n        swapItem: lastSwapEl,\n      };\n    },\n  });\n}\n\nfunction swapNodes(n1, n2) {\n  let p1 = n1.parentNode,\n    p2 = n2.parentNode,\n    i1,\n    i2;\n\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n\n  //@ts-ignore\n  i1 = index(n1);\n  //@ts-ignore\n  i2 = index(n2);\n\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nexport default SwapPlugin;\n","import {\n  getRect,\n  css,\n  matrix,\n  isRectEqual,\n  indexOfObject,\n} from \"../../utils/src\";\nimport * as Sortable from \"./Sortable\";\n\nexport default function AnimationStateManager() {\n  let animationStates = [],\n    animationCallbackId;\n\n  return {\n    captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      let children = [].slice.call(this.el.children);\n\n      children.forEach((child) => {\n        //@ts-ignore\n        if (css(child, \"display\") === \"none\" || child === Sortable.ghost)\n          return;\n        animationStates.push({\n          target: child,\n          //@ts-ignore\n          rect: getRect(child),\n        });\n        let fromRect = { ...animationStates[animationStates.length - 1].rect };\n\n        // If animating: compensate for current animation\n        if (child.thisAnimationDuration) {\n          let childMatrix = matrix(child, true);\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n\n        child.fromRect = fromRect;\n      });\n    },\n\n    addAnimationState(state) {\n      animationStates.push(state);\n    },\n\n    removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, { target }), 1);\n    },\n\n    animateAll(callback) {\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === \"function\") callback();\n        return;\n      }\n\n      let animating = false,\n        animationTime = 0;\n\n      animationStates.forEach((state) => {\n        let time = 0,\n          animatingThis = false,\n          target = state.target,\n          fromRect = target.fromRect,\n          //@ts-ignore\n          toRect = getRect(target),\n          prevFromRect = target.prevFromRect,\n          prevToRect = target.prevToRect,\n          animatingRect = state.rect,\n          targetMatrix = matrix(target, true);\n\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n\n        target.toRect = toRect;\n\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (\n            isRectEqual(prevFromRect, toRect) &&\n            !isRectEqual(fromRect, toRect) &&\n            // Make sure animatingRect is on line between toRect & fromRect\n            (animatingRect.top - toRect.top) /\n              (animatingRect.left - toRect.left) ===\n              (fromRect.top - toRect.top) / (fromRect.left - toRect.left)\n          ) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(\n              animatingRect,\n              prevFromRect,\n              prevToRect,\n              this.options\n            );\n          }\n        }\n\n        // if fromRect != toRect: animate\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n\n          if (!time) {\n            time = this.options.animation;\n          }\n          this.animate(target, animatingRect, toRect, time);\n        }\n\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n\n      clearTimeout(animationCallbackId);\n      if (!animating) {\n        if (typeof callback === \"function\") callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === \"function\") callback();\n        }, animationTime);\n      }\n      animationStates = [];\n    },\n\n    animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, \"transition\", \"\");\n        css(target, \"transform\", \"\");\n        //@ts-ignore\n        let elMatrix = matrix(this.el),\n          scaleX = elMatrix && elMatrix.a,\n          scaleY = elMatrix && elMatrix.d,\n          translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n          translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n\n        css(\n          target,\n          \"transform\",\n          \"translate3d(\" + translateX + \"px,\" + translateY + \"px,0)\"\n        );\n\n        this.forRepaintDummy = repaint(target); // repaint\n\n        css(\n          target,\n          \"transition\",\n          \"transform \" +\n            duration +\n            \"ms\" +\n            (this.options.easing ? \" \" + this.options.easing : \"\")\n        );\n        css(target, \"transform\", \"translate3d(0,0,0)\");\n        typeof target.animated === \"number\" && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, \"transition\", \"\");\n          css(target, \"transform\", \"\");\n          target.animated = false;\n\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    },\n  };\n}\n\nfunction repaint(target) {\n  return target.offsetWidth;\n}\n\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return (\n    (Math.sqrt(\n      Math.pow(fromRect.top - animatingRect.top, 2) +\n        Math.pow(fromRect.left - animatingRect.left, 2)\n    ) /\n      Math.sqrt(\n        Math.pow(fromRect.top - toRect.top, 2) +\n          Math.pow(fromRect.left - toRect.left, 2)\n      )) *\n    options.animation\n  );\n}\n","import {\n  toggleClass,\n  getRect,\n  index,\n  closest,\n  on,\n  off,\n  clone,\n  css,\n  setRect,\n  unsetRect,\n  matrix,\n  expando,\n} from \"../../../utils/src\";\n\nimport dispatchEvent from \"../../../sortable/src/EventDispatcher\";\n\nlet multiDragElements = [],\n  multiDragClones = [],\n  lastMultiDragSelect, // for selection with modifier key down (SHIFT)\n  multiDragSortable,\n  initialFolding = false, // Initial multi-drag fold when drag started\n  folding = false, // Folding any other time\n  dragStarted = false,\n  dragEl,\n  clonesFromRect,\n  clonesHidden;\n\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (let fn in this) {\n      if (fn.charAt(0) === \"_\" && typeof this[fn] === \"function\") {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n\n    if (sortable.options.supportPointer) {\n      on(document, \"pointerup\", this._deselectMultiDrag);\n    } else {\n      on(document, \"mouseup\", this._deselectMultiDrag);\n      on(document, \"touchend\", this._deselectMultiDrag);\n    }\n\n    on(document, \"keydown\", this._checkKeyDown);\n    on(document, \"keyup\", this._checkKeyUp);\n\n    this.defaults = {\n      selectedClass: \"sortable-selected\",\n      multiDragKey: null,\n      setData(dataTransfer, dragEl) {\n        let data = \"\";\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach((multiDragElement, i) => {\n            data += (!i ? \"\" : \", \") + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n        dataTransfer.setData(\"Text\", data);\n      },\n    };\n  }\n\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n\n    delayStartGlobal({ dragEl: dragged }) {\n      dragEl = dragged;\n    },\n\n    delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl);\n    },\n\n    setupClone({ sortable, cancel }) {\n      if (!this.isMultiDrag) return;\n      for (let i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style[\"will-change\"] = \"\";\n\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl &&\n          toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n\n      sortable._hideClone();\n      cancel();\n    },\n\n    clone({ sortable, rootEl, dispatchSortableEvent, cancel }) {\n      if (!this.isMultiDrag) return;\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent(\"clone\");\n\n          cancel();\n        }\n      }\n    },\n\n    showClone({ cloneNowShown, rootEl, cancel }) {\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach((clone) => {\n        css(clone, \"display\", \"\");\n      });\n\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n\n    hideClone({ sortable, cloneNowHidden, cancel }) {\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach((clone) => {\n        css(clone, \"display\", \"none\");\n        if (this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n\n    dragStartGlobal({ sortable }) {\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n\n      multiDragElements.forEach((multiDragElement) => {\n        //@ts-ignore\n        multiDragElement.sortableIndex = index(multiDragElement);\n      });\n\n      // Sort multi-drag elements\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n\n    dragStarted({ sortable }) {\n      if (!this.isMultiDrag) return;\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n\n        sortable.captureAnimationState();\n\n        if (this.options.animation) {\n          multiDragElements.forEach((multiDragElement) => {\n            if (multiDragElement === dragEl) return;\n            css(multiDragElement, \"position\", \"absolute\");\n          });\n\n          //@ts-ignore\n          let dragRect = getRect(dragEl, false, true, true);\n\n          multiDragElements.forEach((multiDragElement) => {\n            if (multiDragElement === dragEl) return;\n            setRect(multiDragElement, dragRect);\n          });\n\n          folding = true;\n          initialFolding = true;\n        }\n      }\n\n      sortable.animateAll(() => {\n        folding = false;\n        initialFolding = false;\n\n        if (this.options.animation) {\n          multiDragElements.forEach((multiDragElement) => {\n            unsetRect(multiDragElement);\n          });\n        }\n\n        // Remove all auxiliary multidrag items from el, if sorting enabled\n        if (this.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n\n    dragOver({ target, completed, cancel }) {\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n\n    revert({ fromSortable, rootEl, sortable, dragRect }) {\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach((multiDragElement) => {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            //@ts-ignore\n            rect: folding ? getRect(multiDragElement) : dragRect,\n          });\n\n          unsetRect(multiDragElement);\n\n          multiDragElement.fromRect = dragRect;\n\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n\n    dragOverCompleted({\n      sortable,\n      isOwner,\n      insertion,\n      activeSortable,\n      parentEl,\n      putSortable,\n    }) {\n      let options = this.options;\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n\n        initialFolding = false;\n        // If leaving sort:false root, or already folding - Fold to new location\n        if (\n          options.animation &&\n          multiDragElements.length > 1 &&\n          (folding ||\n            (!isOwner && !activeSortable.options.sort && !putSortable))\n        ) {\n          //@ts-ignore\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          let dragRectAbsolute = getRect(dragEl, false, true, true);\n\n          multiDragElements.forEach((multiDragElement) => {\n            if (multiDragElement === dragEl) return;\n            setRect(multiDragElement, dragRectAbsolute);\n\n            // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n            parentEl.appendChild(multiDragElement);\n          });\n\n          folding = true;\n        }\n\n        // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n\n          if (multiDragElements.length > 1) {\n            let clonesHiddenBefore = clonesHidden;\n            activeSortable._showClone(sortable);\n\n            // Unfold animation for clones if showing from hidden\n            if (\n              activeSortable.options.animation &&\n              !clonesHidden &&\n              clonesHiddenBefore\n            ) {\n              multiDragClones.forEach((clone) => {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect,\n                });\n\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n\n    dragOverAnimationCapture({ dragRect, isOwner, activeSortable }) {\n      multiDragElements.forEach((multiDragElement) => {\n        multiDragElement.thisAnimationDuration = null;\n      });\n\n      if (\n        activeSortable.options.animation &&\n        !isOwner &&\n        activeSortable.multiDrag.isMultiDrag\n      ) {\n        clonesFromRect = Object.assign({}, dragRect);\n        let dragMatrix = matrix(dragEl, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n\n    dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n\n    drop({\n      originalEvent: evt,\n      rootEl,\n      parentEl,\n      sortable,\n      dispatchSortableEvent,\n      oldIndex,\n      putSortable,\n    }) {\n      let toSortable = putSortable || this.sortable;\n\n      if (!evt) return;\n\n      let options = this.options,\n        children = parentEl.children;\n\n      // Multi-drag selection\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n        toggleClass(\n          dragEl,\n          options.selectedClass,\n          !~multiDragElements.indexOf(dragEl)\n        );\n\n        if (!~multiDragElements.indexOf(dragEl)) {\n          multiDragElements.push(dragEl);\n          dispatchEvent({\n            sortable,\n            rootEl,\n            name: \"select\",\n            targetEl: dragEl,\n            //@ts-ignore\n            originalEvt: evt,\n          });\n\n          // Modifier activated, select from last to dragEl\n          if (\n            evt.shiftKey &&\n            lastMultiDragSelect &&\n            sortable.el.contains(lastMultiDragSelect)\n          ) {\n            //@ts-ignore\n            let lastIndex = index(lastMultiDragSelect),\n              //@ts-ignore\n              currentIndex = index(dragEl);\n\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              let n, i;\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n\n                dispatchEvent({\n                  sortable,\n                  rootEl,\n                  name: \"select\",\n                  targetEl: children[i],\n                  //@ts-ignore\n                  originalEvt: evt,\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl;\n          }\n\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable,\n            rootEl,\n            name: \"deselect\",\n            targetEl: dragEl,\n            //@ts-ignore\n            originalEvt: evt,\n          });\n        }\n      }\n\n      // Multi-drag drop\n      if (dragStarted && this.isMultiDrag) {\n        // Do not \"unfold\" after around dragEl if reverted\n        if (\n          (parentEl[expando].options.sort || parentEl !== rootEl) &&\n          multiDragElements.length > 1\n        ) {\n          //@ts-ignore\n          let dragRect = getRect(dragEl),\n            multiDragIndex = index(\n              dragEl,\n              \":not(.\" + this.options.selectedClass + \")\"\n            );\n\n          if (!initialFolding && options.animation)\n            dragEl.thisAnimationDuration = null;\n\n          toSortable.captureAnimationState();\n\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl.fromRect = dragRect;\n              multiDragElements.forEach((multiDragElement) => {\n                multiDragElement.thisAnimationDuration = null;\n                if (multiDragElement !== dragEl) {\n                  //@ts-ignore\n                  let rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect;\n\n                  // Prepare unfold animation\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect,\n                  });\n                }\n              });\n            }\n\n            // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n            removeMultiDragElements();\n\n            multiDragElements.forEach((multiDragElement) => {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(\n                  multiDragElement,\n                  children[multiDragIndex]\n                );\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n              multiDragIndex++;\n            });\n\n            // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n            //@ts-ignore\n            if (oldIndex === index(dragEl)) {\n              let update = false;\n              multiDragElements.forEach((multiDragElement) => {\n                //@ts-ignore\n                if (\n                  //@ts-ignore\n                  multiDragElement.sortableIndex !== index(multiDragElement)\n                ) {\n                  update = true;\n                  return;\n                }\n              });\n\n              if (update) {\n                dispatchSortableEvent(\"update\");\n              }\n            }\n          }\n\n          // Must be done after capturing individual rects (scroll bar)\n          multiDragElements.forEach((multiDragElement) => {\n            unsetRect(multiDragElement);\n          });\n\n          toSortable.animateAll();\n        }\n\n        multiDragSortable = toSortable;\n      }\n\n      // Remove clones if necessary\n      if (\n        rootEl === parentEl ||\n        (putSortable && putSortable.lastPutMode !== \"clone\")\n      ) {\n        multiDragClones.forEach((clone) => {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n\n    nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n\n    destroyGlobal() {\n      this._deselectMultiDrag();\n      off(document, \"pointerup\", this._deselectMultiDrag);\n      off(document, \"mouseup\", this._deselectMultiDrag);\n      off(document, \"touchend\", this._deselectMultiDrag);\n\n      off(document, \"keydown\", this._checkKeyDown);\n      off(document, \"keyup\", this._checkKeyUp);\n    },\n\n    _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return;\n\n      // Only deselect if selection is in this sortable\n      if (multiDragSortable !== this.sortable) return;\n\n      // Only deselect if target is not item in this sortable\n      if (\n        evt &&\n        closest(evt.target, this.options.draggable, this.sortable.el, false)\n      )\n        return;\n\n      // Only deselect if left click\n      if (evt && evt.button !== 0) return;\n\n      while (multiDragElements.length) {\n        let el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: \"deselect\",\n          //@ts-ignore\n          targetEl: el,\n          //@ts-ignore\n          originalEvt: evt,\n        });\n      }\n    },\n\n    _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n\n    _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    },\n  };\n\n  return Object.assign(MultiDrag, {\n    // Static methods & properties\n    pluginName: \"multiDrag\",\n    utils: {\n      /**\n       * Selects the provided multi-drag item\n       * @param  {HTMLElement} el    The element to be selected\n       */\n      select(el) {\n        let sortable = el.parentNode[expando];\n        if (\n          !sortable ||\n          !sortable.options.multiDrag ||\n          ~multiDragElements.indexOf(el)\n        )\n          return;\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n          multiDragSortable = sortable;\n        }\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n      /**\n       * Deselects the provided multi-drag item\n       * @param  {HTMLElement} el    The element to be deselected\n       */\n      deselect(el) {\n        let sortable = el.parentNode[expando],\n          index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      },\n    },\n    eventProperties() {\n      const oldIndicies = [],\n        newIndicies = [];\n\n      multiDragElements.forEach((multiDragElement) => {\n        oldIndicies.push({\n          multiDragElement,\n          index: multiDragElement.sortableIndex,\n        });\n\n        // multiDragElements will already be sorted if folding\n        let newIndex;\n        if (folding && multiDragElement !== dragEl) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(\n            multiDragElement,\n            \":not(.\" + this.options.selectedClass + \")\"\n          );\n        } else {\n          //@ts-ignore\n          newIndex = index(multiDragElement);\n        }\n        newIndicies.push({\n          multiDragElement,\n          index: newIndex,\n        });\n      });\n      return {\n        items: [...multiDragElements],\n        clones: [...multiDragClones],\n        oldIndicies,\n        newIndicies,\n      };\n    },\n    optionListeners: {\n      multiDragKey(key) {\n        key = key.toLowerCase();\n        if (key === \"ctrl\") {\n          key = \"Control\";\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n        return key;\n      },\n    },\n  });\n}\n\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach((multiDragElement, i) => {\n    let target =\n      rootEl.children[\n        multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)\n      ];\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n\n/**\n * Insert multi-drag clones\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\n * @param  {HTMLElement} rootEl\n */\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach((clone, i) => {\n    let target =\n      rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\n\nfunction removeMultiDragElements() {\n  multiDragElements.forEach((multiDragElement) => {\n    if (multiDragElement === dragEl) return;\n    multiDragElement.parentNode &&\n      multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nexport default MultiDragPlugin;\n","import { getChild } from \"../../../utils/src\";\n\nconst drop = function ({\n  originalEvent,\n  putSortable,\n  dragEl,\n  activeSortable,\n  dispatchSortableEvent,\n  hideGhostForTarget,\n  unhideGhostForTarget,\n}) {\n  if (!originalEvent) return;\n  let toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  let touch =\n    originalEvent.changedTouches && originalEvent.changedTouches.length\n      ? originalEvent.changedTouches[0]\n      : originalEvent;\n  let target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent(\"spill\");\n    this.onSpill({ dragEl, putSortable });\n  }\n};\n\nfunction Revert() {}\n\nRevert.prototype = {\n  startIndex: null,\n  dragStart({ oldDraggableIndex }) {\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill({ dragEl, putSortable }) {\n    this.sortable.captureAnimationState();\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n    let nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n    this.sortable.animateAll();\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop,\n};\n\nObject.assign(Revert, {\n  pluginName: \"revertOnSpill\",\n});\n\nfunction Remove() {}\n\nRemove.prototype = {\n  onSpill({ dragEl, putSortable }) {\n    const parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop,\n};\n\nObject.assign(Remove, {\n  pluginName: \"removeOnSpill\",\n});\n\nexport default [Remove, Revert];\n\nexport { Remove as RemoveOnSpill, Revert as RevertOnSpill };\n","import {\n  on,\n  off,\n  css,\n  throttle,\n  cancelThrottle,\n  scrollBy,\n  getParentAutoScrollElement,\n  expando,\n  getRect,\n  getWindowScrollingElement,\n  Edge,\n  IE11OrLess,\n  Safari,\n} from \"../../../utils/src\";\n\nimport Sortable from \"../../../sortable/src/Sortable\";\n\nlet autoScrolls = [],\n  scrollEl,\n  scrollRootEl,\n  scrolling = false,\n  lastAutoScrollX,\n  lastAutoScrollY,\n  touchEvt,\n  pointerElemChangedInterval;\n\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true,\n    };\n\n    // Bind all private methods\n    for (let fn in this) {\n      if (fn.charAt(0) === \"_\" && typeof this[fn] === \"function\") {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n\n  AutoScroll.prototype = {\n    dragStarted({ originalEvent }) {\n      if (this.sortable.nativeDraggable) {\n        on(document, \"dragover\", this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, \"pointermove\", this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, \"touchmove\", this._handleFallbackAutoScroll);\n        } else {\n          on(document, \"mousemove\", this._handleFallbackAutoScroll);\n        }\n      }\n    },\n\n    dragOverCompleted({ originalEvent }) {\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n\n    drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, \"dragover\", this._handleAutoScroll);\n      } else {\n        off(document, \"pointermove\", this._handleFallbackAutoScroll);\n        off(document, \"touchmove\", this._handleFallbackAutoScroll);\n        off(document, \"mousemove\", this._handleFallbackAutoScroll);\n      }\n\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n\n    nulling() {\n      touchEvt = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n\n      autoScrolls.length = 0;\n    },\n\n    _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n\n    _handleAutoScroll(evt, fallback) {\n      const x = (evt.touches ? evt.touches[0] : evt).clientX,\n        y = (evt.touches ? evt.touches[0] : evt).clientY,\n        elem = document.elementFromPoint(x, y);\n\n      touchEvt = evt;\n\n      // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n      if (fallback || Edge || IE11OrLess || Safari) {\n        //@ts-ignore\n        autoScroll(evt, this.options, elem, fallback);\n\n        // Listener for pointer element change\n        let ogElemScroller = getParentAutoScrollElement(elem, true);\n        if (\n          scrolling &&\n          (!pointerElemChangedInterval ||\n            x !== lastAutoScrollX ||\n            y !== lastAutoScrollY)\n        ) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval();\n          // Detect for pointer elem change, emulating native DnD behaviour\n          pointerElemChangedInterval = setInterval(() => {\n            let newElem = getParentAutoScrollElement(\n              document.elementFromPoint(x, y),\n              true\n            );\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n            //@ts-ignore\n            autoScroll(evt, this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (\n          !this.options.bubbleScroll ||\n          getParentAutoScrollElement(elem, true) === getWindowScrollingElement()\n        ) {\n          clearAutoScrolls();\n          return;\n        }\n        autoScroll(\n          //@ts-ignore\n          evt,\n          this.options,\n          getParentAutoScrollElement(elem, false),\n          false\n        );\n      }\n    },\n  };\n\n  return Object.assign(AutoScroll, {\n    pluginName: \"scroll\",\n    initializeByDefault: true,\n  });\n}\n\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\n\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\n\nconst autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  const x = (evt.touches ? evt.touches[0] : evt).clientX,\n    y = (evt.touches ? evt.touches[0] : evt).clientY,\n    sens = options.scrollSensitivity,\n    speed = options.scrollSpeed,\n    winScroller = getWindowScrollingElement();\n\n  let scrollThisInstance = false,\n    scrollCustomFn;\n\n  // New scroll root, set scrollEl\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n\n    clearAutoScrolls();\n\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n\n  let layersOut = 0;\n  let currentParent = scrollEl;\n  do {\n    let el = currentParent,\n      //@ts-ignore\n      rect = getRect(el),\n      top = rect.top,\n      bottom = rect.bottom,\n      left = rect.left,\n      right = rect.right,\n      width = rect.width,\n      height = rect.height,\n      canScrollX,\n      canScrollY,\n      scrollWidth = el.scrollWidth,\n      scrollHeight = el.scrollHeight,\n      //@ts-ignore\n      elCSS = css(el),\n      scrollPosX = el.scrollLeft,\n      scrollPosY = el.scrollTop;\n\n    if (el === winScroller) {\n      canScrollX =\n        width < scrollWidth &&\n        (elCSS.overflowX === \"auto\" ||\n          elCSS.overflowX === \"scroll\" ||\n          elCSS.overflowX === \"visible\");\n      canScrollY =\n        height < scrollHeight &&\n        (elCSS.overflowY === \"auto\" ||\n          elCSS.overflowY === \"scroll\" ||\n          elCSS.overflowY === \"visible\");\n    } else {\n      canScrollX =\n        width < scrollWidth &&\n        (elCSS.overflowX === \"auto\" || elCSS.overflowX === \"scroll\");\n      canScrollY =\n        height < scrollHeight &&\n        (elCSS.overflowY === \"auto\" || elCSS.overflowY === \"scroll\");\n    }\n\n    let vx =\n      canScrollX &&\n      //@ts-ignore\n      (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) -\n        //@ts-ignore\n        (Math.abs(left - x) <= sens && !!scrollPosX);\n    let vy =\n      canScrollY &&\n      //@ts-ignore\n      (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) -\n        //@ts-ignore\n        (Math.abs(top - y) <= sens && !!scrollPosY);\n\n    if (!autoScrolls[layersOut]) {\n      for (let i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n\n    if (\n      autoScrolls[layersOut].vx != vx ||\n      autoScrolls[layersOut].vy != vy ||\n      autoScrolls[layersOut].el !== el\n    ) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n\n      clearInterval(autoScrolls[layersOut].pid);\n\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n        autoScrolls[layersOut].pid = setInterval(\n          function () {\n            // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n            if (isFallback && this.layer === 0) {\n              //@ts-ignore\n              Sortable.active._onTouchMove(touchEvt); // To move ghost if it is positioned absolutely\n            }\n            let scrollOffsetY = autoScrolls[this.layer].vy\n              ? autoScrolls[this.layer].vy * speed\n              : 0;\n            let scrollOffsetX = autoScrolls[this.layer].vx\n              ? autoScrolls[this.layer].vx * speed\n              : 0;\n\n            if (typeof scrollCustomFn === \"function\") {\n              if (\n                scrollCustomFn.call(\n                  //@ts-ignore\n                  Sortable.dragged.parentNode[expando],\n                  scrollOffsetX,\n                  scrollOffsetY,\n                  evt,\n                  touchEvt,\n                  autoScrolls[this.layer].el\n                ) !== \"continue\"\n              ) {\n                return;\n              }\n            }\n\n            scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n          }.bind({ layer: layersOut }),\n          24\n        );\n      }\n    }\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nexport default AutoScrollPlugin;\n","import Sortable from \"../../sortable/src/Sortable\";\nimport Swap from \"../../plugins/swap/src\";\nimport MultiDrag from \"../../plugins/multi-drag/src\";\nimport { RemoveOnSpill, RevertOnSpill } from \"../../plugins/on-spill/src\";\nimport AutoScroll from \"../../plugins/auto-scroll/src\";\n\n//@ts-ignore\nSortable.mount(new AutoScroll());\nSortable.mount(RemoveOnSpill, RevertOnSpill);\n//@ts-ignore\nSortable.mount(new Swap());\n//@ts-ignore\nSortable.mount(new MultiDrag());\n\nexport default Sortable;\nexport { Sortable };\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  color: PropTypes.string,\n  action: PropTypes.bool,\n  className: PropTypes.any,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar handleDisabledOnClick = function handleDisabledOnClick(e) {\n  e.preventDefault();\n};\n\nvar ListGroupItem = function ListGroupItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      active = props.active,\n      disabled = props.disabled,\n      action = props.action,\n      color = props.color,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"active\", \"disabled\", \"action\", \"color\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, disabled ? 'disabled' : false, action ? 'list-group-item-action' : false, color ? \"list-group-item-\" + color : false, 'list-group-item'), cssModule); // Prevent click event when disabled.\n\n  if (disabled) {\n    attributes.onClick = handleDisabledOnClick;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nListGroupItem.propTypes = propTypes;\nListGroupItem.defaultProps = defaultProps;\nexport default ListGroupItem;",null,"import { PropsWithChildren } from \"react\";\nimport Sortable, { Options } from \"sortablejs\";\nimport { MultiDragEvent } from \"./react-sortable\";\nimport { AllMethodNames, ItemInterface, ReactSortableProps } from \"./types\";\n\n/**\n * Removes the `node` from the DOM\n * @param node\n */\nexport function removeNode(node: HTMLElement): void {\n  if (node.parentElement !== null) node.parentElement.removeChild(node);\n}\n\n/**\n * Inserts the `newChild` node at the given index in a parent\n * @param parent The parent HTML Element.\n * @param newChild A HTML eement to add as a child of the parent.\n * @param index index of the parent to place the new child in.\n */\nexport function insertNodeAt(\n  parent: HTMLElement,\n  newChild: HTMLElement,\n  index: number\n): void {\n  const refChild = parent.children[index] || null;\n  parent.insertBefore(newChild, refChild);\n}\n\n// @todo - create a dom handler function for arrays or not at all\n\n/** removes stuff from the dom in a nice order */\n// @todo - do I need parenElement?\nexport function handleDOMChanges<T extends ItemInterface>(\n  customs: Normalized<T>[]\n): void {\n  removeNodes(customs);\n  insertNodes(customs);\n}\n\nexport function removeNodes<T extends ItemInterface>(\n  customs: Normalized<T>[]\n): void {\n  customs.forEach((curr) => removeNode(curr.element));\n}\n\nexport function insertNodes<T extends ItemInterface>(\n  customs: Normalized<T>[]\n): void {\n  customs.forEach((curr) => {\n    insertNodeAt(curr.parentElement, curr.element, curr.oldIndex);\n  });\n}\n\nexport function createCustoms<T extends ItemInterface>(\n  evt: MultiDragEvent,\n  list: T[]\n): Normalized<T>[] {\n  const mode = getMode(evt);\n  const parentElement = { parentElement: evt.from };\n  let custom = [];\n  switch (mode) {\n    case \"normal\":\n      /* eslint-disable */\n      const item = {\n        element: evt.item,\n        newIndex: evt.newIndex!,\n        oldIndex: evt.oldIndex!,\n        parentElement: evt.from,\n      };\n      custom = [item];\n      break;\n    case \"swap\":\n      const drag: Input = {\n        element: evt.item,\n        oldIndex: evt.oldIndex!,\n        newIndex: evt.newIndex!,\n        ...parentElement,\n      };\n      const swap: Input = {\n        element: evt.swapItem!,\n        oldIndex: evt.newIndex!,\n        newIndex: evt.oldIndex!,\n        ...parentElement,\n      };\n      custom = [drag, swap];\n      break;\n    case \"multidrag\":\n      custom = evt.oldIndicies.map<Input>((curr, index) => ({\n        element: curr.multiDragElement,\n        oldIndex: curr.index,\n        newIndex: evt.newIndicies[index].index,\n        ...parentElement,\n      }));\n      break;\n  }\n  /* eslint-enable */\n\n  const customs = createNormalized(custom, list);\n  return customs;\n}\n\n/** moves items form old index to new index without breaking anything ideally. */\nexport function handleStateChanges<T extends ItemInterface>(\n  normalized: Normalized<T>[],\n  list: T[]\n): T[] {\n  const a = handleStateRemove(normalized, list);\n  const b = handleStateAdd(normalized, a);\n  return b;\n}\n\nexport function handleStateRemove<T extends ItemInterface>(\n  normalized: Normalized<T>[],\n  list: T[]\n): T[] {\n  const newList = [...list];\n  normalized\n    .concat()\n    .reverse()\n    .forEach((curr) => newList.splice(curr.oldIndex, 1));\n  return newList;\n}\n\nexport function handleStateAdd<T extends ItemInterface>(\n  normalized: Normalized<T>[],\n  list: T[],\n  evt?: Sortable.SortableEvent,\n  clone?: ((currentItem: T, evt: Sortable.SortableEvent) => T) | undefined\n): T[] {\n  const newList = [...list];\n  normalized.forEach((curr) => {\n    const newItem = clone && evt && clone(curr.item, evt);\n    newList.splice(curr.newIndex, 0, newItem || curr.item);\n  });\n  return newList;\n}\n\nexport function getMode(evt: MultiDragEvent): \"multidrag\" | \"swap\" | \"normal\" {\n  if (evt.oldIndicies && evt.oldIndicies.length > 0) return \"multidrag\";\n  if (evt.swapItem) return \"swap\";\n  return \"normal\";\n}\n\nexport function createNormalized<T extends ItemInterface>(\n  inputs: Input[],\n  list: T[]\n): Normalized<T>[] {\n  const normalized = inputs\n    .map<Normalized<T>>((curr) => ({ ...curr, item: list[curr.oldIndex] }))\n    .sort((a, b) => a.oldIndex - b.oldIndex);\n  return normalized;\n}\n\nexport interface Input {\n  parentElement: HTMLElement;\n  element: HTMLElement;\n  oldIndex: number;\n  newIndex: number;\n}\n\nexport interface Normalized<T> extends Input {\n  item: T;\n}\n\n/**\n * Removes the following group of properties from `props`,\n * leaving only `Sortable.Options` without any `on` methods.\n * @param props `ReactSortable.Props`\n */\nexport function destructurePropsForOptions<T>(\n  props: PropsWithChildren<ReactSortableProps<T>>\n): Exclude<Options, AllMethodNames> {\n  /* eslint-disable */\n  const {\n    // react sortable props\n    list,\n    setList,\n    children,\n    tag,\n    style,\n    className,\n    clone,\n    // sortable options that have methods we want to overwrite\n    onAdd,\n    onChange,\n    onChoose,\n    onClone,\n    onEnd,\n    onFilter,\n    onRemove,\n    onSort,\n    onStart,\n    onUnchoose,\n    onUpdate,\n    onMove,\n    onSpill,\n    onSelect,\n    onDeselect,\n    ...options\n  } = props;\n  /* eslint-enable */\n  return options;\n}\n\n/**\n * Construct a type with the properties of T except for those in type K.\n * Including this allows for backwards compatibility with earlier versions of TS.\n */\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n","import classNames from \"classnames\";\nimport {\n  Children,\n  cloneElement,\n  Component,\n  createElement,\n  createRef,\n  ReactElement,\n  RefObject,\n} from \"react\";\nimport Sortable, { MoveEvent, Options, SortableEvent } from \"sortablejs\";\nimport invariant from \"tiny-invariant\";\nimport {\n  AllMethodsExceptMove,\n  HandledMethodNames,\n  ItemInterface,\n  ReactSortableProps,\n  Store,\n  UnHandledMethodNames,\n} from \"./types\";\nimport {\n  createCustoms,\n  destructurePropsForOptions,\n  getMode,\n  handleStateAdd,\n  handleStateChanges,\n  handleStateRemove,\n  insertNodes,\n  removeNode,\n  removeNodes,\n} from \"./util\";\n\n/** Holds a global reference for which react element is being dragged */\n// @todo - use context to manage this. How does one use 2 different providers?\nconst store: Store = { dragging: null };\n\nexport class ReactSortable<T extends ItemInterface> extends Component<\n  ReactSortableProps<T>\n> {\n  /* eslint-disable-next-line */\n  static defaultProps: Partial<ReactSortableProps<any>> = {\n    clone: (item) => item,\n  };\n\n  private ref: RefObject<HTMLElement>;\n  constructor(props: ReactSortableProps<T>) {\n    super(props);\n    // @todo forward ref this component\n    this.ref = createRef<HTMLElement>();\n\n    // make all state false because we can't change sortable unless a mouse gesture is made.\n    const newList = props.list.map((item) => ({\n      ...item,\n      chosen: false,\n      selected: false,\n    }));\n\n    props.setList(newList, this.sortable, store);\n    invariant(\n      //@ts-expect-error: Doesn't exist. Will deprecate soon.\n      !props.plugins,\n      `\nPlugins prop is no longer supported.\nInstead, mount it with \"Sortable.mount(new MultiDrag())\"\nPlease read the updated README.md at https://github.com/SortableJS/react-sortablejs.\n      `\n    );\n  }\n  componentDidMount(): void {\n    if (this.ref.current === null) return;\n    const newOptions = this.makeOptions();\n    Sortable.create(this.ref.current, newOptions);\n  }\n\n  render(): JSX.Element {\n    const { tag, style, className, id } = this.props;\n    const classicProps = { style, className, id };\n\n    // if no tag, default to a `div` element.\n    const newTag = !tag || tag === null ? \"div\" : tag;\n    return createElement(\n      newTag,\n      {\n        // @todo - find a way (perhaps with the callback) to allow AntD components to work\n        ref: this.ref,\n        ...classicProps,\n      },\n      this.getChildren()\n    );\n  }\n\n  private getChildren() {\n    const {\n      children,\n      dataIdAttr,\n      selectedClass = \"sortable-selected\",\n      chosenClass = \"sortable-chosen\",\n      /* eslint-disable */\n      dragClass = \"sortable-drag\",\n      fallbackClass = \"sortable-falback\",\n      ghostClass = \"sortable-ghost\",\n      swapClass = \"sortable-swap-highlight\",\n      /* eslint-enable */\n      filter = \"sortable-filter\",\n      list,\n    } = this.props;\n\n    // if no children, don't do anything.\n    if (!children || children == null) return null;\n    const dataid = dataIdAttr || \"data-id\";\n    /* eslint-disable-next-line */\n    return Children.map(children as ReactElement<any>[], (child, index) => {\n      const item = list[index];\n      const { className: prevClassName } = child.props;\n\n      // @todo - handle the function if avalable. I don't think anyone will be doing this soon.\n      const filtered = typeof filter === \"string\" && {\n        [filter.replace(\".\", \"\")]: !!item.filtered,\n      };\n\n      const className = classNames(prevClassName, {\n        [selectedClass]: item.selected,\n        [chosenClass]: item.chosen,\n        ...filtered,\n        // [dragClass]: true,\n        // [fallbackClass]: true,\n        // [ghostClass]: true,\n        // [swapClass]: true\n      });\n\n      return cloneElement(child, {\n        [dataid]: child.key,\n        className,\n      });\n    });\n  }\n\n  /** Appends the `sortable` property to this component */\n  private get sortable(): Sortable | null {\n    const el = this.ref.current;\n    if (el === null) return null;\n    const key = Object.keys(el).find((k) => k.includes(\"Sortable\"));\n    if (!key) return null;\n    //@ts-expect-error: fix me.\n    return el[key] as Sortable;\n  }\n\n  /** Converts all the props from `ReactSortable` into the `options` object that `Sortable.create(el, [options])` can use. */\n  makeOptions(): Options {\n    const DOMHandlers: HandledMethodNames[] = [\n      \"onAdd\",\n      \"onChoose\",\n      \"onDeselect\",\n      \"onEnd\",\n      \"onRemove\",\n      \"onSelect\",\n      \"onSpill\",\n      \"onStart\",\n      \"onUnchoose\",\n      \"onUpdate\",\n    ];\n    const NonDOMHandlers: UnHandledMethodNames[] = [\n      \"onChange\",\n      \"onClone\",\n      \"onFilter\",\n      \"onSort\",\n    ];\n    const newOptions: Options = destructurePropsForOptions(this.props);\n    DOMHandlers.forEach(\n      (name) => (newOptions[name] = this.prepareOnHandlerPropAndDOM(name))\n    );\n    NonDOMHandlers.forEach(\n      (name) => (newOptions[name] = this.prepareOnHandlerProp(name))\n    );\n\n    /** onMove has 2 arguments and needs to be handled seperately. */\n    const onMove = (evt: MoveEvent, originalEvt: Event) => {\n      const { onMove } = this.props;\n      const defaultValue = evt.willInsertAfter || -1;\n      if (!onMove) return defaultValue;\n      const result = onMove(evt, originalEvt, this.sortable, store);\n      if (typeof result === \"undefined\") return false;\n      return result;\n    };\n\n    return {\n      ...newOptions,\n      onMove,\n    };\n  }\n\n  /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop & an `on[Handler]` ReactSortable method.  */\n  prepareOnHandlerPropAndDOM(\n    evtName: HandledMethodNames\n  ): (evt: SortableEvent) => void {\n    return (evt) => {\n      // call the component prop\n      this.callOnHandlerProp(evt, evtName);\n      // calls state change\n      //@ts-expect-error: until @types multidrag item is in\n      this[evtName](evt);\n    };\n  }\n\n  /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop */\n  prepareOnHandlerProp(\n    evtName: Exclude<AllMethodsExceptMove, HandledMethodNames>\n  ): (evt: SortableEvent) => void {\n    return (evt) => {\n      // call the component prop\n      this.callOnHandlerProp(evt, evtName);\n    };\n  }\n\n  /** Calls the `props.on[Handler]` function */\n  callOnHandlerProp(evt: SortableEvent, evtName: AllMethodsExceptMove): void {\n    const propEvent = this.props[evtName];\n    if (propEvent) propEvent(evt, this.sortable, store);\n  }\n\n  // SORTABLE DOM HANDLING\n\n  onAdd(evt: MultiDragEvent): void {\n    const { list, setList, clone } = this.props;\n    /* eslint-disable-next-line */\n    const otherList = [...store.dragging!.props.list];\n    const customs = createCustoms(evt, otherList);\n    removeNodes(customs);\n    const newList = handleStateAdd(customs, list, evt, clone).map((item) => ({\n      ...item,\n      selected: false,\n    }));\n    setList(newList, this.sortable, store);\n  }\n\n  onRemove(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const mode = getMode(evt);\n    const customs = createCustoms(evt, list);\n    insertNodes(customs);\n\n    let newList = [...list];\n    // remove state if not in clone mode. otherwise, keep.\n    if (evt.pullMode !== \"clone\") newList = handleStateRemove(customs, newList);\n    // if clone, it doesn't really remove. instead it clones in place.\n    // @todo -\n    else {\n      // switch used to get the clone\n      let customClones = customs;\n      switch (mode) {\n        case \"multidrag\":\n          customClones = customs.map((item, index) => ({\n            ...item,\n            element: evt.clones[index],\n          }));\n          break;\n        case \"normal\":\n          customClones = customs.map((item) => ({\n            ...item,\n            element: evt.clone,\n          }));\n          break;\n        case \"swap\":\n        default: {\n          invariant(\n            true,\n            `mode \"${mode}\" cannot clone. Please remove \"props.clone\" from <ReactSortable/> when using the \"${mode}\" plugin`\n          );\n        }\n      }\n      removeNodes(customClones);\n\n      // replace selected items with cloned items\n      customs.forEach((curr) => {\n        const index = curr.oldIndex;\n        /* eslint-disable-next-line */\n        const newItem = this.props.clone!(curr.item, evt);\n        newList.splice(index, 1, newItem);\n      });\n    }\n\n    // remove item.selected from list\n    newList = newList.map((item) => ({ ...item, selected: false }));\n    setList(newList, this.sortable, store);\n  }\n\n  onUpdate(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const customs = createCustoms(evt, list);\n    removeNodes(customs);\n    insertNodes(customs);\n    const newList = handleStateChanges(customs, list);\n    return setList(newList, this.sortable, store);\n  }\n\n  onStart(): void {\n    store.dragging = this;\n  }\n\n  onEnd(): void {\n    store.dragging = null;\n  }\n\n  onChoose(evt: SortableEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item, index) => {\n      if (index === evt.oldIndex) {\n        return {\n          ...item,\n          chosen: true,\n        };\n      }\n      return item;\n    });\n    setList(newList, this.sortable, store);\n  }\n\n  onUnchoose(evt: SortableEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item, index) => {\n      if (index === evt.oldIndex) {\n        return {\n          ...item,\n          chosen: false,\n        };\n      }\n      return item;\n    });\n    setList(newList, this.sortable, store);\n  }\n\n  onSpill(evt: SortableEvent): void {\n    const { removeOnSpill, revertOnSpill } = this.props;\n    if (removeOnSpill && !revertOnSpill) removeNode(evt.item);\n  }\n\n  onSelect(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item) => ({ ...item, selected: false }));\n    evt.newIndicies.forEach((curr) => {\n      const index = curr.index;\n      if (index === -1) {\n        console.log(\n          `\"${evt.type}\" had indice of \"${curr.index}\", which is probably -1 and doesn't usually happen here.`\n        );\n        console.log(evt);\n        return;\n      }\n      newList[index].selected = true;\n    });\n    setList(newList, this.sortable, store);\n  }\n\n  onDeselect(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item) => ({ ...item, selected: false }));\n    evt.newIndicies.forEach((curr) => {\n      const index = curr.index;\n      if (index === -1) return;\n      newList[index].selected = true;\n    });\n    setList(newList, this.sortable, store);\n  }\n}\n\n// everything below this point can be removed\n// once @types has been merged. PR submited\ninterface MultiIndices {\n  multiDragElement: HTMLElement;\n  index: number;\n}\n\nexport interface MultiDragEvent extends SortableEvent {\n  // @todo - add this to @types\n  clones: HTMLElement[];\n  oldIndicies: MultiIndices[];\n  newIndicies: MultiIndices[];\n  swapItem: HTMLElement | null;\n}\n"],"sourceRoot":""}