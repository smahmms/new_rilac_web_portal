{"version":3,"sources":["views/tables/data-tables/basic/TrollyTable.js","views/viewhelper.js","views/tables/data-tables/basic/AddNewModal.js"],"names":["MySwal","withReactContent","Swal","status","title","color","DataTableWithButtons","_useState","useState","_useState2","_slicedToArray","isloading","setisloading","_useState3","_useState4","loading","setloading","_useState5","_useState6","loading2","setloading2","_useState7","_useState8","depotloading","setdepotloading","_useState9","_useState10","modal","setModal","_useState11","_useState12","data","setdata","_useState13","_useState14","currentPage","setCurrentPage","_useState15","_useState16","searchValue","setSearchValue","_useState17","_useState18","filteredData","_useState19","_useState20","primarydepot","setprimarydepot","_useState21","total","ready","inused","_useState22","counter","setcounter","_useState23","trollyid","_useState24","userinput","setuserinput","_useState25","_useState26","error","seterror","_useState27","macid","_useState28","editerror","setediterror","_useState29","_useState30","singletrollydetails","setsingletrollydetails","_useState31","_useState32","_useState33","_useState34","formModal","setFormModal","_useState35","_useState36","formModal2","setFormModal2","_useState37","qurcode","trolleyid","_useState38","viewinfo","setviewinfo","_useState39","_useState40","searchdata","setsearchdata","handleConfirmText","fire","_defineProperty","text","icon","allowOutsideClick","allowEscapeKey","showCancelButton","showLoaderOnConfirm","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","preConfirm","useJwt","trollyDelete","then","res","catch","console","log","response","Error","isLoading","result","isConfirmed","updatedData","filter","item","removedeleteitem","columns","name","selector","minWidth","cell","storeinfo","storename","sortable","row","_jsx","Badge","pill","children","allowOverflow","_jsxs","className","Eye","size","style","cursor","onClick","e","Edit","singletrollyinfo","depotdefaultval","every","id","storeid","item2","value","label","openEditModal","Trash","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","storeList","data1","payload","map","err","trollyList","data2","forEach","stop","onchange","_objectSpread","target","onchangeedit","Fragment","Card","CardBody","paddingTop","fontSize","CardHeader","CardTitle","tag","Form","width","onSubmit","preventDefault","primarydepot2","iserror","trollyAdd","Success","concat","_toConsumableArray","autoComplete","Col","sm","FormGroup","Label","for","Input","type","onChange","required","placeholder","Select","theme","selectThemeColors","classNamePrefix","option","_ref2","action","options","isClearable","Button","Ripple","disabled","marginTop","Spinner","Plus","display","Row","inputsearch","startsWith","toLowerCase","includes","DataTable","noHeader","pagination","paginationPerPage","sortIcon","ChevronDown","paginationDefaultPage","paginationComponent","_jsx2","ReactPaginate","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","length","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","progressPending","progressComponent","responsive","AddNewModal","open","handleModal","Modal","isOpen","toggle","ModalHeader","ModalBody","_ref3","ModalFooter","trollyEdit","updatedata","oneditsubmit","md","order","offset","QRCode","toast","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","success","_ref","Date","Picker","setPicker","CloseBtn","X","modalClassName","contentClassName","close","InputGroup","InputGroupAddon","addonType","InputGroupText","User","Briefcase","Mail","Calendar","Flatpickr","date","DollarSign","outline"],"mappings":"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","file":"static/js/311.3b818204.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState, forwardRef, useEffect } from 'react'\n\nimport { Link } from 'react-router-dom'\n// ** Table Data & Columns\n//import { data } from '../data'\n\n// ** Add New Modal Component\nimport AddNewModal from './AddNewModal'\nimport Select from 'react-select'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport {\n  ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical,\n  Edit, Archive, Trash, Search, Eye\n} from 'react-feather'\nimport { selectThemeColors, transformInToFormObject } from '@utils'\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Input,\n  Label,\n  Row,\n  Col,\n  Badge,\n  Form,\n  FormGroup,\n  UncontrolledDropdown,\n  Spinner,\n  CardBody,\n  Modal, ModalHeader, ModalBody, ModalFooter\n} from 'reactstrap'\n\nimport { Error, Success } from '../../../viewhelper'\nimport useJwt from '@src/auth/jwt/useJwt'\n\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport QRCode from \"react-qr-code\"\nimport '../cashier/cashierStyles/payment.css'\n\nconst MySwal = withReactContent(Swal)\n// ** Vars\n//const states = ['success', 'danger', 'warning', 'info', 'dark', 'primary', 'secondary']\n\nconst status = {\n  1: { title: 'Active', color: 'light-success ' },\n  6: { title: 'Ready', color: 'light-primary' },\n  7: { title: 'Processed', color: 'light-danger' },\n  8: { title: 'Checked', color: 'light-secondary' },\n  9: { title: 'Paid', color: 'light-info' },\n  2: { title: 'Booked', color: 'light-info' },\n  10: { title: 'Scanning', color: 'light-info' },\n  3: { title: 'Collected', color: 'light-info' }\n}\n\nconst statusoptions = [\n  { value: 1, label: 'Active' },\n  { value: 6, label: 'Ready' },\n  { value: 7, label: 'Processed' },\n  { value: 8, label: 'Checked' },\n  { value: 9, label: 'Paid' }\n]\n\n\nconst DataTableWithButtons = () => {\n  // ** States\n  const [isloading, setisloading] = useState(true)\n  const [loading, setloading] = useState(false)\n  const [loading2, setloading2] = useState(false)\n  const [depotloading, setdepotloading] = useState(true)\n  const [modal, setModal] = useState(false)\n  const [data, setdata] = useState([])\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [primarydepot, setprimarydepot] = useState([])\n  const [counter, setcounter] = useState({\n    total: 0,\n    ready: 0,\n    inused: 0\n  })\n  const [userinput, setuserinput] = useState({\n    trollyid: null,\n    primarydepot: null,\n    status: 0\n  })\n  const [error, seterror] = useState({\n    trollyid: '',\n    primarydepot: '',\n    status: ''\n  })\n  const [editerror, setediterror] = useState({\n    trollyid: '',\n    primarydepot: '',\n    macid: ''\n  })\n  const [singletrollydetails, setsingletrollydetails] = useState({})\n  const [editdepotdefaultvalue, seteditdepotdefaultvalue] = useState({})\n\n  const [formModal, setFormModal] = useState(false)\n  const [formModal2, setFormModal2] = useState(false)\n  const [viewinfo, setviewinfo] = useState({\n    qurcode:\"\",\n    trolleyid:\"\"\n  })\n\n  const [searchdata, setsearchdata] = useState([])\n\n  const openViewModal = (trolleyid, qurcode) => { \n    setviewinfo({\n      qurcode,\n      trolleyid\n    })\n     setFormModal2(!formModal2)\n  }\n\n  const openEditModal = (trolleyid) => {\n    let singletrollyinfo = {}, depotdefaultval = {}\n    setediterror({\n      trollyid: '',\n      primarydepot: '',\n      macid: ''\n    })\n    setloading2(false)\n    data.every(item => {\n      if (item.trolleyid === trolleyid) {\n        singletrollyinfo = {\n          trolleyid,\n          macid: item.macid,\n          id: item.id,\n          storeid: item.storeid\n        }\n        primarydepot.every(item2 => {\n          if (item2.value === item.storeid) {\n            depotdefaultval = { value: item2.value, label: item2.label }\n            return false\n          }\n          return true\n        })\n        return false\n      }\n      return true\n    })\n    singletrollyinfo.depotdefaultval = depotdefaultval\n    setsingletrollydetails(singletrollyinfo)\n    setFormModal(!formModal)\n  }\n  const removedeleteitem = (trollyid) => {\n    const updatedData = data.filter(item => {\n      if (item.trolleyid === trollyid) {\n        return false\n      } else {\n        return true\n      }\n    })\n\n    setdata(updatedData)\n  }\n  const handleConfirmText = (trollyid) => {\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      allowOutsideClick: false,\n      allowEscapeKey: false,\n      showCancelButton: true,\n      showLoaderOnConfirm: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ml-1'\n      },\n      buttonsStyling: false,\n      preConfirm: () => {\n       return useJwt.trollyDelete({ trolleyid: trollyid }).then(res => {\n\n          return res\n\n        }).catch(error => {\n          console.log(error.response)\n          Error(error)\n         // Swal.showValidationMessage(`Request failed`)\n          return false\n        })\n      },\n      allowOutsideClick: () => !Swal.isLoading()\n    }).then(function (result) {\n\n      if (result.isConfirmed) {\n        removedeleteitem(trollyid)\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'The trolley has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      } \n\n    })\n  }\n\n  // ** Table Common Column\n  const columns = [\n\n    {\n      name: 'Trolley Barcode',\n      selector: 'trolleyid',\n      minWidth: '100px'\n    },\n    {\n      name: 'Mac ID',\n      selector: 'macid',\n      minWidth: '100px'\n    },\n    {\n      name: 'Depot Name',\n      minWidth: '150px',\n      cell: (item) => {\n        return item.storeinfo ? item.storeinfo.storename : ''\n      }\n    },\n    {\n      name: 'Status',\n      selector: 'status',\n      sortable: true,\n      minWidth: '150px',\n      cell: (row) => {\n        return (\n          <Badge color={status[row.status].color} pill>\n            {status[row.status].title}\n          </Badge>\n        )\n      }\n    },\n    {\n      name: 'Actions',\n      allowOverflow: true,\n      cell: (row) => {\n        return (\n          <div className='d-flex'>\n            <Eye size={15} color='#2bc871' style={{ cursor: 'pointer' }} onClick={(e) => openViewModal(row.trolleyid, row.qurcode)}/>&nbsp;&nbsp;\n            <Edit size={15} color='#2bc871' style={{ cursor: 'pointer' }} onClick={(e) => openEditModal(row.trolleyid)} /> &nbsp;&nbsp;\n            <Trash size={15} color='red' style={{ cursor: 'pointer' }} onClick={(e) => handleConfirmText(row.trolleyid)} />\n          </div>\n        )\n      }\n    }\n  ]\n\n  // ** Function to handle Modal toggle\n  const handleModal = () => setModal(!modal)\n\n  useEffect(async () => {\n\n    //store list..\n    useJwt.storeList().then(res => {\n      const payload1 = res.data.payload\n      const data1 = payload1.map(item => {\n        return { value: item.storeid, label: item.storename }\n      })\n      setprimarydepot(data1)\n      setdepotloading(false)\n\n    }).catch(err => {\n      setdepotloading(false)\n      console.log(err.response)\n      Error(err)\n    })\n\n    //trolly list..\n    useJwt.trollyList().then(res => {\n      const data2 = res.data.payload\n      // console.log(data2)\n      setdata(data2)\n      setisloading(false)\n\n      let total = 0, ready = 0, inused = 0\n      data2.forEach(item => {\n           total++\n           if (item.status === 6) {\n             ready++\n           } else {\n             inused++\n           }\n      })\n\n      setcounter({total, ready, inused})\n\n    }).catch(err => {\n      setisloading(false)\n      console.log(err.response)\n      Error(err)\n    })\n  }, [])\n\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    setSearchValue(value)\n\n    const status = {\n      1: { title: 'Current', color: 'light-primary' },\n      2: { title: 'Professional', color: 'light-success' },\n      3: { title: 'Rejected', color: 'light-danger' },\n      4: { title: 'Resigned', color: 'light-warning' },\n      5: { title: 'Applied', color: 'light-info' }\n    }\n\n    if (value.length) {\n      updatedData = data.filter(item => {\n        const startsWith =\n          item.full_name.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.post.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.email.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.age.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.salary.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.start_date.toLowerCase().startsWith(value.toLowerCase()) ||\n          status[item.status].title.toLowerCase().startsWith(value.toLowerCase())\n\n        const includes =\n          item.full_name.toLowerCase().includes(value.toLowerCase()) ||\n          item.post.toLowerCase().includes(value.toLowerCase()) ||\n          item.email.toLowerCase().includes(value.toLowerCase()) ||\n          item.age.toLowerCase().includes(value.toLowerCase()) ||\n          item.salary.toLowerCase().includes(value.toLowerCase()) ||\n          item.start_date.toLowerCase().includes(value.toLowerCase()) ||\n          status[item.status].title.toLowerCase().includes(value.toLowerCase())\n\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n      })\n      setFilteredData(updatedData)\n      setSearchValue(value)\n    }\n  }\n\n  // ** Function to handle Pagination\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n  // ** Custom Pagination\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel=''\n      nextLabel=''\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? filteredData.length / 10 : data.length / 10 || 1}\n      breakLabel='...'\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName='active'\n      pageClassName='page-item'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      nextLinkClassName='page-link'\n      nextClassName='page-item next'\n      previousClassName='page-item prev'\n      previousLinkClassName='page-link'\n      pageLinkClassName='page-link'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n    />\n  )\n\n  const onchange = (e) => {\n    setuserinput({ ...userinput, [e.target.name]: e.target.value })\n  }\n  const onchangeedit = (e) => {\n    setsingletrollydetails({ ...singletrollydetails, [e.target.name]: e.target.value })\n  }\n  const onchangeprimarydepot = (option, { action }) => {\n    if (action === 'clear') {\n      setuserinput({ ...userinput, primarydepot: null })\n    } else {\n      seterror({...error, primarydepot: ''})\n      setuserinput({ ...userinput, primarydepot: option.value })\n    }\n\n  }\n  const onchangeprimarydepot2 = (option, { action }) => {\n    if (action === 'clear') {\n      setsingletrollydetails({ ...singletrollydetails, depotdefaultval: null })\n    } else {\n      setsingletrollydetails({ ...singletrollydetails, depotdefaultval: { value: option.value, label: option.label } })\n    }\n\n  }\n  const onchangestatus = (option, { action }) => {\n    if (action === 'clear') {\n      setuserinput({ ...userinput, status: 0 })\n    } else {\n      setuserinput({ ...userinput, status: option.value })\n    }\n\n  }\n\n  const oneditsubmit = (e) => {\n    e.preventDefault()\n    setediterror({\n      trollyid: '',\n      primarydepot: '',\n      macid: ''\n    })\n\n    const { id, trolleyid, macid, storeid, depotdefaultval } = singletrollydetails\n    let iserror = false\n    if (!trolleyid) {\n      setediterror({ trollyid: 'trolley barcode required' })\n      iserror = true\n    }\n    if (!macid) {\n      setediterror({ ...error, macid: 'macid required' })\n      iserror = true\n    }\n    if (!depotdefaultval) {\n      setediterror({ ...error, primarydepot: 'primarydepot required' })\n      iserror = true\n    }\n\n    if (iserror) {\n      return 0\n    }\n    setloading2(true)\n    useJwt.trollyEdit({ id, trolleyid, storeid: depotdefaultval.value, macid }).then(res => {\n      console.log(res)\n      setFormModal(false)\n      Success(res)\n      setloading2(false)\n      const updatedata = data.map(item => {\n        if (item.id === id) {\n          let storename = ''\n          primarydepot.map(item => {\n            if (item.value === depotdefaultval.value) {\n              storename = item.label\n            }\n          })\n          return {\n            ...item,\n            macid,\n            storeid: depotdefaultval.value,\n            trolleyid,\n            storeinfo: {\n              storename\n            }\n          }\n        } else {\n          return item\n        }\n      })\n\n      setdata(updatedata)\n\n    }).catch(err => {\n      setloading2(false)\n      console.log(err.response)\n      Error(err)\n    })\n\n  }\n  const onsubmit = (e) => {\n    e.preventDefault()\n    seterror({\n      trollyid: '',\n      primarydepot: '',\n      status: ''\n    })\n    const { trollyid, primarydepot: primarydepot2, macid } = userinput\n    let iserror = false\n    if (!trollyid) {\n      seterror({ trollyid: 'trolley barcode required' })\n      iserror = true\n    }\n    if (!primarydepot2) {\n      seterror({ ...error, primarydepot: 'Please select Depot' })\n      iserror = true\n    }\n\n    if (iserror) {\n      return 0\n    }\n\n    setloading(true)\n    useJwt.trollyAdd({ trolleyid: trollyid, storeid: primarydepot2, macid }).then(res => {\n      Success(res)\n      setloading(false)\n      setuserinput({ ...userinput, trollyid: null, macid: null })\n      let storename = ''\n      primarydepot.map(item => {\n        if (item.value === primarydepot2) {\n          storename = item.label\n        }\n      })\n      const createData = {\n        macid,\n        status: 6,\n        storeid: primarydepot2,\n        trolleyid: trollyid,\n        storeinfo: {\n          storename\n        }\n      }\n      setdata([createData, ...data])\n\n    }).catch(err => {\n      setloading(false)\n      console.log(err.response)\n      Error(err)\n    })\n  }\n\n\n  const oninputsearchchange = (e) => {\n     const inputsearch = e.target.value\n    const updatedData = data.filter(item => {\n      const startsWith =\n        item.trolleyid.startsWith(inputsearch) ||\n        item.macid.startsWith(inputsearch) ||\n        item.storeinfo.storename.toLowerCase().startsWith(inputsearch.toLowerCase())\n\n      const includes =\n        item.trolleyid.includes(inputsearch) ||\n        item.macid.includes(inputsearch) ||\n        item.storeinfo.storename.toLowerCase().includes(inputsearch.toLowerCase()) \n\n      if (startsWith) {\n        return startsWith\n      } else if (!startsWith && includes) {\n        return includes\n      } else return null\n    })\n\n    setSearchValue(inputsearch)\n    setsearchdata(updatedData)\n\n  }\n\n  return (\n    <Fragment>\n\n       <Card>\n\n                <CardBody style={{ paddingTop: '15px' }}>\n                    <div className=\"d-flex flex-wrap\">\n                        <div className=\"payment-card m-2 pt-1\">\n                            <p style={{fontSize:'30px'}}>{counter['total'] || 0}</p>\n                            <p>Total</p>\n                        </div>\n                        <div className=\"payment-card m-2 pt-1\">\n                            <p style={{fontSize:'30px'}}>{counter['ready'] || 0}</p>\n                            <p>Ready</p>\n                        </div>\n                        <div className=\"payment-card m-2 pt-1\">\n                            <p style={{fontSize:'30px'}}>{counter['inused'] || 0}</p>\n                            <p>In-Used</p>\n                        </div>\n                    </div>\n                </CardBody>\n            </Card>\n\n      <Card>\n        <CardHeader className='border-bottom'>\n          <CardTitle tag='h4'>Add New Trolley</CardTitle>\n        </CardHeader>\n        <CardBody style={{ paddingTop: '15px' }}>\n          <Form className=\"row\" style={{ width: '100%' }} onSubmit={onsubmit} autoComplete=\"off\">\n            <Col sm=\"3\" >\n\n              <FormGroup>\n                <Label for=\"search-input\">Trolley Barcode <span style={{ color: 'red' }}>*</span></Label>\n                <Input type=\"text\" name=\"trollyid\"\n                  id='trollyid' onChange={onchange} required\n                  placeholder=\"Trolley Barcode\"\n                  value={userinput.trollyid || ''}\n                />\n              </FormGroup>\n\n            </Col>\n\n            <Col sm=\"3\" >\n\n              <FormGroup>\n                <Label for=\"search-input\">Mac ID <span style={{ color: 'red' }}>*</span></Label>\n                <Input type=\"text\" name=\"macid\"\n                  id='macid' onChange={onchange} required\n                  placeholder=\"Mac ID\"\n                  value={userinput.macid || ''}\n                />\n              </FormGroup>\n\n            </Col>\n\n            <Col sm=\"3\" >\n\n              <FormGroup>\n                <Label for=\"exampleSelect3\">Primary Depot <span style={{ color: 'red' }}>*</span></Label>\n                <Select\n                  theme={selectThemeColors}\n                  className='react-select'\n                  classNamePrefix='select'\n                  name=\"primarydepot\"\n                  onChange={onchangeprimarydepot}\n                  options={primarydepot}\n                  isClearable\n                  isLoading={depotloading}\n                />\n                <span style={{ color: 'red', fontSize: '11px' }}>{error.primarydepot}</span>\n              </FormGroup>\n\n            </Col>\n\n            {/*<Col sm=\"2\" >\n\n           <FormGroup>\n              <Label for=\"exampleSelect5\">Status <span style={{color:'red'}}>*</span></Label>\n              <Select\n                        theme={selectThemeColors}\n                        className='react-select'\n                        classNamePrefix='select'\n                        name=\"status\"\n                        required\n                        onChange={onchangestatus}\n                        options={statusoptions}\n                        isClearable\n                        />\n            <span style={{color:'red', fontSize:'11px'}}>{error.status}</span>\n\n            </FormGroup>\n\n            </Col>*/}\n\n            <Col sm=\"3\" >\n              {\n                loading ? <Button.Ripple color='primary' className='mr-1' disabled style={{ marginTop: '25px' }}>\n                  <Spinner color='white' size='sm' />\n                  <span className='ml-50'>Loading...</span>\n                </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' type=\"submit\" style={{ marginTop: '25px' }}>\n                  <Plus size={15} />\n                  <span className='align-middle ml-50'>Add New</span>\n                </Button.Ripple>\n              }\n            </Col>\n          </Form>\n        </CardBody>\n      </Card>\n\n      <Card>\n        <CardHeader className='border-bottom' style={{display:'inline'}}>\n\n        <Row >\n        <Col sm=\"8\" >\n          <CardTitle tag='h4'>Trolley List</CardTitle>\n         </Col>\n          <Col sm=\"4\" >\n              \n                <Input type=\"text\" name=\"searchinput\"\n                  id='search-input2' onChange={oninputsearchchange} \n                  placeholder=\"Search by Mac ID or Barcode or Depot\"\n                 \n                />\n            </Col>\n            </Row>\n        </CardHeader>\n\n        <DataTable\n          noHeader\n          pagination\n          /*selectableRows*/\n          columns={columns}\n          paginationPerPage={10}\n          className='react-dataTable'\n          sortIcon={<ChevronDown size={10} />}\n          paginationDefaultPage={currentPage + 1}\n          paginationComponent={CustomPagination}\n          data={searchValue.length ? searchdata : data}\n          progressPending={isloading}\n          progressComponent={<Spinner color='primary' />}\n          responsive={true}\n        /*selectableRowsComponent={BootstrapCheckbox}*/\n        />\n      </Card>\n      <AddNewModal open={modal} handleModal={handleModal} />\n\n      <div className='demo-inline-spacing editrolly' >\n        <div>\n          <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered'>\n            <ModalHeader toggle={() => setFormModal(!formModal)}>Update Form</ModalHeader>\n            <ModalBody>\n              <FormGroup >\n                <Label for='barcodes'>Trolley Barcode <span style={{ color: 'red' }}>*</span>  <span style={{ color: 'red', fontSize: '11px' }}>{editerror.trollyid}</span></Label>\n                <Input type='text' id='barcodes' name=\"trolleyid\"\n                  placeholder='Trolley Barcode' value={singletrollydetails['trolleyid'] || ''}\n                  onChange={onchangeedit} required\n                />\n              </FormGroup>\n              <FormGroup >\n                <Label for='macids'>Mac ID <span style={{ color: 'red' }}>*</span>  <span style={{ color: 'red', fontSize: '11px' }}>{editerror.macid}</span></Label>\n                <Input type='text' id='macids' placeholder='Mac ID' name=\"macid\"\n                  value={singletrollydetails['macid'] || ''}\n                  onChange={onchangeedit} required\n                />\n              </FormGroup>\n              <FormGroup >\n                <Label for=\"exampleSelect3\">Primary Depot <span style={{ color: 'red' }}>*</span>  <span style={{ color: 'red', fontSize: '11px' }}>{editerror.primarydepot}</span></Label>\n                <Select\n                  theme={selectThemeColors}\n                  className='react-select'\n                  classNamePrefix='select'\n                  name=\"primarydepot2\"\n                  value={singletrollydetails.depotdefaultval}\n                  onChange={onchangeprimarydepot2}\n                  options={primarydepot}\n                  isClearable\n                  isLoading={depotloading}\n                />\n              </FormGroup>\n\n            </ModalBody>\n            <ModalFooter>\n              {\n                loading2 ? <Fragment>\n                  <Button color='primary' disabled>\n                    <Spinner color='white' size='sm' />\n                    <span className='ml-50'>Loading...</span>\n                  </Button>{' '}\n                </Fragment> : <Fragment>\n                  <Button color='primary' onClick={(e) => oneditsubmit(e)}>\n                    Update\n            </Button>{' '}\n                </Fragment>\n              }\n            </ModalFooter>\n          </Modal>\n        </div>\n      </div>\n\n      <div className='demo-inline-spacing viewtrollyQRCode' >\n        <div>\n          <Modal isOpen={formModal2} toggle={() => setFormModal2(!formModal2)} className='modal-dialog-centered'>\n            <ModalHeader toggle={() => setFormModal2(!formModal2)}>Qrcode</ModalHeader>\n            <ModalBody>\n              \n            <Col sm={12} md={{ size: 3, order: 2, offset: 2 }}>\n                  <QRCode value={viewinfo.qurcode} />\n                  <span>{viewinfo.trolleyid}</span>\n                </Col>\n\n            </ModalBody>\n\n          </Modal>\n        </div>\n      </div>\n\n\n    </Fragment>\n  )\n}\n\nexport default DataTableWithButtons\n","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Flatpickr from 'react-flatpickr'\nimport { User, Briefcase, Mail, Calendar, DollarSign, X } from 'react-feather'\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  FormGroup,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  Label\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n\nconst AddNewModal = ({ open, handleModal }) => {\n  // ** State\n  const [Picker, setPicker] = useState(new Date())\n\n  // ** Custom close btn\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={handleModal} />\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={handleModal}\n      className='sidebar-sm'\n      modalClassName='modal-slide-in'\n      contentClassName='pt-0'\n    >\n      <ModalHeader className='mb-3' toggle={handleModal} close={CloseBtn} tag='div'>\n        <h5 className='modal-title'>New Record</h5>\n      </ModalHeader>\n      <ModalBody className='flex-grow-1'>\n        <FormGroup>\n          <Label for='full-name'>Full Name</Label>\n          <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <User size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input id='full-name' placeholder='Bruce Wayne' />\n          </InputGroup>\n        </FormGroup>\n        <FormGroup>\n          <Label for='post'>Post</Label>\n          <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <Briefcase size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input id='post' placeholder='Web Developer' />\n          </InputGroup>\n        </FormGroup>\n        <FormGroup>\n          <Label for='email'>Email</Label>\n          <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <Mail size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input type='email' id='email' placeholder='brucewayne@email.com' />\n          </InputGroup>\n        </FormGroup>\n        <FormGroup>\n          <Label for='joining-date'>Joining Date</Label>\n          <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <Calendar size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Flatpickr className='form-control' id='joining-date' value={Picker} onChange={date => setPicker(date)} />\n          </InputGroup>\n        </FormGroup>\n        <FormGroup className='mb-4'>\n          <Label for='salary'>Salary</Label>\n          <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <DollarSign size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input type='number' id='salary' />\n          </InputGroup>\n        </FormGroup>\n        <Button className='mr-1' color='primary' onClick={handleModal}>\n          Submit\n        </Button>\n        <Button color='secondary' onClick={handleModal} outline>\n          Cancel\n        </Button>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default AddNewModal\n"],"sourceRoot":""}