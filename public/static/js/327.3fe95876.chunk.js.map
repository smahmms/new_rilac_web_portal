{"version":3,"sources":["views/tables/data-tables/basic/AdminComponent/CampaignManagement/CreateCampaign.js","views/viewhelper.js","views/helper.js","views/tables/data-tables/basic/AdminComponent/ClientSideDataTable.js"],"names":["withReactContent","Swal","CreateCampaign","_find","_find2","_ruleExpiry$startDate","_ruleExpiry$endDate","history","useHistory","serviceRef","useRef","groupRef","groupRef1","rulRef","crRef","_useState","useState","_useState2","_slicedToArray","pointRuleloading","setPointRuleloading","_useState3","_useState4","isServiceVisible","setIsServiceVisible","_useState5","_useState6","realtimeRuleList","setrealtimeRuleList","_useState7","_useState8","serviceList","setserviceList","_useState9","_useState10","groupList","setgroupList","_useState11","_useState12","serviceLogic","setServiceLogic","_useState13","_useState14","senderGroup","setSenderGroup","_useState15","_useState16","receiverGroup","setReceiverGroup","_useState17","_useState18","senderGroupList","setSenderGroupList","_useState19","_useState20","receiverGroupList","setReceiverGroupList","_useState21","_useState22","subTypes","setSubtypes","_useState23","_useState24","hierarchyList","setHierarchyList","_useState25","_useState26","hierarchyObj","setHierarchyObj","_useState27","_useState28","showHierarchy","setShowHierarchy","_useState29","campaignName","isMultiService","multiService","serviceId","groupId","mapGroupId","groupType","mapGroupType","commissionId","receiver","isActive","isSubCategory","isSameUser","campaignMsg","qtExpireMsg","qtPartialMsg","alertDate","isDynamicCamp","dynamicCampExpire","isHierarchy","hrchyPercentage","_useState30","userInput","setUserInput","_useState31","_useState32","ruleExpiry","setRuleExpiry","handleChange","e","_objectSpread","_defineProperty","target","name","value","useEffect","callApis","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","h","encoded","auth","wrap","_context2","prev","next","localStorage","setItem","useJwt","getCentralGroup","then","res","console","log","_step","allGroup","_iterator","_createForOfIteratorHelper","data","payload","s","n","done","q","is_approved","type","group_member_count","push","err","f","catch","Error","response","currentRealtimeRuleList","_res$data$filter","filter","df","isDefault","sort","a","b","parseInt","Headers","append","window","btoa","concat","BMS_USER1","BMS_PASS1","fetch","Request","jwtDefaultConfig","hierarchyEndpoint","method","headers","credentials","_ref2","_callee","_context","json","sent","stop","_x","apply","arguments","getServiceList","getServiceLogicByServiceId","recGroupType","_toConsumableArray","d","senGroupType","charLimit","field","charCount","actualCharReduce","tempField","match","_userInput$campaignNa","_userInput$campaignNa2","replace","length","_jsxs","Fragment","children","_jsx","Button","Ripple","className","color","tag","Link","to","ChevronLeft","size","style","marginRight","Form","width","onSubmit","preventDefault","ruleProvider","JSON","stringify","createCampaign","Success","error","autoComplete","Card","CardHeader","CardTitle","CardBody","paddingTop","Row","Col","sm","FormGroup","Label","for","Input","id","onChange","required","maxLength","placeholder","margin","CustomInput","label","checked","Select","ref","theme","selectThemeColors","maxMenuHeight","classNamePrefix","selected","options","map","serviceKeyword","isLoading","opacity","height","onFocus","current","select","focus","isClearable","menuPlacement","isMulti","ee","o","find","item","group_name","_selected$value$endDa","endDate","commissionRuleName","md","min","Date","startDate","toLocaleDateString","max","toString","isRxQuota","isQuota","fontSize","Spinner","hierarchy","sum","key","border","commissionType","isPercentage","snAmount","rxAmount","returnCommissionId","isPoint","formatReadableDate","isCertainTimeline","timelineType","isTimelineRange","quotaType","quotaCount","quotaAmount","rxQuotaType","rxQuotaCount","rxQuotaAmount","isTime","startHour","endHour","isFinBasedOffer","offerCount","offerAmount","createBy","createDate","modifyBy","modifyDate","approvedBy","approveDate","CommonDataTable","column","minWidth","selector","index","TableData","flexibleRules","disabled","status","toast","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","success","year","month","day","hour","minute","date","thousandSeparator","x","handle401","location","href","clear","ExportCSV","array","CSVname","link","document","createElement","csv","result","join","forEach","ctr","convertArrayOfObjectsToCSV","userData","parse","getItem","filename","toISOString","replaceAll","setAttribute","encodeURI","click","TableDataLoading","currentPage","setCurrentPage","DataTable","noHeader","pagination","columns","paginationPerPage","sortIcon","ChevronDown","paginationDefaultPage","paginationComponent","ReactPaginate","previousLabel","nextLabel","forcePage","onPageChange","page","handlePagination","pageCount","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","progressPending","progressComponent","responsive","pointerOnHover","highlightOnHover","striped"],"mappings":"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","file":"static/js/327.3fe95876.chunk.js","sourcesContent":["import useJwt from '@src/auth/jwt/useJwt'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport { selectThemeColors } from '@utils'\nimport React, { Fragment, useEffect, useRef, useState } from 'react'\nimport { ChevronLeft } from 'react-feather'\nimport { Link, useHistory } from 'react-router-dom'\nimport Select from 'react-select'\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, CustomInput, Form, FormGroup, Input, Label, Row, Spinner } from 'reactstrap'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport jwtDefaultConfig from '../../../../../../@core/auth/jwt/jwtDefaultConfig'\nimport { BMS_PASS1, BMS_USER1 } from \"../../../../../../Configurables\"\nimport { formatReadableDate } from '../../../../../helper'\nimport { Error, Success } from '../../../../../viewhelper'\nimport CommonDataTable from '../ClientSideDataTable'\nconst MySwal = withReactContent(Swal)\n\nconst CreateCampaign = () => {\n    const history = useHistory()\n    const serviceRef = useRef()\n    const groupRef = useRef()\n    const groupRef1 = useRef()\n    const rulRef = useRef()\n    const crRef = useRef()\n    const [pointRuleloading, setPointRuleloading] = useState(false)\n    const [isServiceVisible, setIsServiceVisible] = useState(true)\n    const [realtimeRuleList, setrealtimeRuleList] = useState([])\n    const [serviceList, setserviceList] = useState([])\n    const [groupList, setgroupList] = useState([])\n    const [serviceLogic, setServiceLogic] = useState({})\n    const [senderGroup, setSenderGroup] = useState({})\n    const [receiverGroup, setReceiverGroup] = useState({})\n    const [senderGroupList, setSenderGroupList] = useState([])\n    const [receiverGroupList, setReceiverGroupList] = useState([])\n    const [subTypes, setSubtypes] = useState([])\n    const [hierarchyList, setHierarchyList] = useState([])\n    const [hierarchyObj, setHierarchyObj] = useState({})\n    const [showHierarchy, setShowHierarchy] = useState(false)\n    const column = [\n        {\n            name: 'Reward Condition',\n            minWidth: '200px',\n            selector: (Row, index) => {\n                return Row.isPercentage ? 'Percentage' : 'Flat'\n            }\n        },\n        {\n            name: 'Sender Reward',\n            minWidth: '100px',\n            selector: 'snAmount'\n        },\n        {\n            name: 'Receiver Reward',\n            minWidth: '100px',\n            selector: 'rxAmount'\n        },\n        {\n            name: 'Start Range',\n            minWidth: '100px',\n            selector: 'startRange'\n        },\n        {\n            name: 'End Range',\n            minWidth: '100px',\n            selector: 'endRange'\n        },\n        {\n            name: 'Minimum Reward',\n            minWidth: '100px',\n            selector: 'min'\n        },\n        {\n            name: 'Maximum Reward',\n            minWidth: '100px',\n            selector: 'max'\n        }\n    ]\n    const [userInput, setUserInput] = useState({\n        campaignName: '',\n        isMultiService: false,\n        multiService: [],\n        serviceId: '',\n        groupId: 0,\n        mapGroupId: 0,\n        groupType: 0,\n        mapGroupType: 0,\n        commissionId: 0,\n        receiver: '',\n        isActive: true,\n        isSubCategory: false,\n        subTypes: [],\n        isSameUser: false,\n        campaignMsg:'',\n        qtExpireMsg:'',\n        qtPartialMsg:'',\n        alertDate:'',\n        isDynamicCamp: false,\n        dynamicCampExpire: 0,\n        isHierarchy: false,\n        hrchyPercentage: '' //'{\"Distributor\":30,\"Agent\":50,\"Retailer\":20}'\n    })\n    const [ruleExpiry, setRuleExpiry] = useState({})\n    const handleChange = (e) => {\n        setUserInput({ ...userInput, [e.target.name]: e.target.value })\n    }\n    useEffect(() => {\n        const callApis = async () => {\n            localStorage.setItem('useBMStoken', false)\n            localStorage.setItem('usePMStoken', false)\n            await useJwt.getCentralGroup().then(res => {\n                console.log(res)\n                const allGroup = []\n                for (const q of res.data.payload) {\n                    if (q.is_approved && q.type !== 4 && q.group_member_count) {\n                        allGroup.push(q)\n                    }\n                }\n                setgroupList(allGroup)\n            }).catch(err => {\n                Error(err)\n                console.log(err.response)\n            })\n            localStorage.setItem('useBMStoken', true)\n            await useJwt.currentRealtimeRuleList().then(res => {\n                console.log(res)\n                setrealtimeRuleList(res.data.filter(df => !df.isDefault)?.sort((a, b) => parseInt(b.commissionId) - parseInt(a.commissionId)))\n                localStorage.setItem('useBMStoken', false)\n            }).catch(err => {\n                Error(err)\n                console.log(err)\n                localStorage.setItem('useBMStoken', false)\n            })\n            \n            const h = new Headers()\n            h.append('Accept', 'application/json')\n            const encoded = window.btoa(`${BMS_USER1}:${BMS_PASS1}`)\n            const auth = `Basic ${encoded}`\n            h.append('Authorization', auth)\n            await fetch(new Request(jwtDefaultConfig.hierarchyEndpoint, {\n                method: 'GET',\n                headers: h,\n                credentials: 'include'\n            })).then(async response => {\n                const data = await response.json()\n                console.log('hierarchyList', data)\n                setHierarchyList(data)\n            }).catch(err => {\n                Error(err)\n                console.log(err)\n            })\n\n            localStorage.setItem('useBMStoken', true)\n            await useJwt.getServiceList().then(res => {\n                console.log(res)\n                setserviceList(res.data)\n                localStorage.setItem('useBMStoken', false)\n            }).catch(err => {\n                Error(err)\n                console.log(err)\n                localStorage.setItem('useBMStoken', false)\n            })\n        }\n        callApis()\n    }, [])\n    useEffect(() => {\n        if (userInput.serviceId === '') {\n            \n        } else {\n            setUserInput({...userInput, isHierarchy: false, receiver:''})\n            setHierarchyObj({})\n            setShowHierarchy(false)\n            localStorage.setItem('useBMStoken', true)\n            useJwt.getServiceLogicByServiceId(userInput.serviceId).then(res => {\n                console.log(res)\n                setServiceLogic(res.data)\n                if (res.data.recGroupType === 0) {\n                    setReceiverGroupList(groupList)\n                } else {\n                    setReceiverGroupList([...groupList?.filter(d => d.type === res.data.recGroupType)])\n                }\n                if (res.data.senGroupType === 0) {\n                    setSenderGroupList(groupList)\n                } else {\n                    setSenderGroupList([...groupList?.filter(d => d.type === res.data.senGroupType)])\n                }\n                localStorage.setItem('useBMStoken', false)\n            }).catch(err => {\n                // Error(err)\n                console.log(err)\n                localStorage.setItem('useBMStoken', false)\n            })\n        }\n    }, [userInput.serviceId])\n    useEffect(() => {\n        if (userInput.receiver === 's') {\n            if (serviceLogic.senGroupType === 2 || serviceLogic.senGroupType === 0) {\n                setShowHierarchy(true)\n            } else {\n                setShowHierarchy(false)\n                setUserInput({...userInput, isHierarchy: false})\n                setHierarchyObj({})\n            }\n        } else if (userInput.receiver === 'r') {\n            if (serviceLogic.recGroupType === 2 || serviceLogic.senGroupType === 0) {\n                setShowHierarchy(true)\n            } else {\n                setShowHierarchy(false)\n                setUserInput({...userInput, isHierarchy: false})\n                setHierarchyObj({})\n            }\n        } else if (userInput.receiver === 'b') {\n            if (serviceLogic.recGroupType === 2 || serviceLogic.senGroupType === 0) {\n                setShowHierarchy(true)\n            } else if (serviceLogic.senGroupType === 2 || serviceLogic.senGroupType === 0) {\n                setShowHierarchy(true)\n            } else {\n                setShowHierarchy(false)\n                setUserInput({...userInput, isHierarchy: false})\n                setHierarchyObj({})\n            }\n        }\n    }, [userInput.receiver])\n    const onSubmit = (e) => {\n        e.preventDefault()\n        localStorage.setItem('useBMStoken', true)\n        setPointRuleloading(true)\n        let {groupId, mapGroupId, groupType, mapGroupType, hrchyPercentage} = userInput\n        if (userInput.isMultiService) {\n            mapGroupId = senderGroup.groupId ? senderGroup.groupId : 0\n            mapGroupType = senderGroup.groupType ? senderGroup.groupType : ' '\n            groupId = receiverGroup.groupId ? receiverGroup.groupId : 0 \n            groupType = receiverGroup.groupType ? receiverGroup.groupType : ' '\n        } else if (serviceLogic.ruleProvider === 's') {\n            mapGroupId = senderGroup.groupId ? senderGroup.groupId : 0\n            mapGroupType = senderGroup.groupType ? senderGroup.groupType : ' '\n            groupId = receiverGroup.groupId ? receiverGroup.groupId : 0 \n            groupType = receiverGroup.groupType ? receiverGroup.groupType : ' '\n        } else if (serviceLogic.ruleProvider === 'r') {\n            mapGroupId = receiverGroup.groupId ? receiverGroup.groupId : 0\n            mapGroupType = receiverGroup.groupType ? receiverGroup.groupType : ' '\n            groupId = senderGroup.groupId ? senderGroup.groupId : 0\n            groupType = senderGroup.groupType ? senderGroup.groupType : ' '\n        }\n        hrchyPercentage = JSON.stringify(hierarchyObj)\n        console.log({...userInput, mapGroupId, groupType, groupId, mapGroupType, hrchyPercentage})\n        useJwt.createCampaign({...userInput, mapGroupId, groupType, groupId, mapGroupType, hrchyPercentage}).then((response) => {\n            setPointRuleloading(false)\n            localStorage.setItem('useBMStoken', false)\n            Success(response)\n            history.push('/allCampaigns')\n          }).catch((error) => {\n            setPointRuleloading(false)\n            localStorage.setItem('useBMStoken', false)\n            Error(error)\n            console.log(error.response)\n          })\n    }\n    const charLimit = (field) => {\n        let charCount = 0\n        let actualCharReduce = 0\n        let tempField = field\n        while (tempField.match(/<TransactionTime>/) || tempField.match(/<TransactionId>/) || tempField.match(/<RewordAmount>/) || tempField.match(/<Msisdn>/) || tempField.match(/<TransactionAmount>/) || tempField.match(/<CampaignName>/)) {\n            if (tempField.match(/<TransactionTime>/)) { \n                charCount += 19\n                actualCharReduce += 2\n                tempField = tempField.replace(/<TransactionTime>/, '') \n            }\n            if (tempField.match(/<TransactionId>/)) { \n                charCount += 30\n                actualCharReduce += 15 \n                tempField = tempField.replace(/<TransactionId>/, '') \n            }\n            if (tempField.match(/<RewordAmount>/)) {  \n                charCount += 10\n                actualCharReduce -= 4 \n                tempField = tempField.replace(/<RewordAmount>/, '') \n            }\n            if (tempField.match(/<Msisdn>/)) { \n                charCount += 11\n                actualCharReduce -= 3 \n                tempField = tempField.replace(/<Msisdn>/, '')  \n            }\n            if (tempField.match(/<TransactionAmount>/)) {  \n                charCount += 10\n                actualCharReduce -= 9 \n                tempField = tempField.replace(/<TransactionAmount>/, '')  \n            }\n            if (tempField.match(/<CampaignName>/)) { \n                actualCharReduce += (userInput?.campaignName?.length - 14)\n                charCount += userInput?.campaignName?.length \n                tempField = tempField.replace(/<CampaignName>/, '')  \n            }\n        }\n        charCount += tempField.length\n        return {charCount, actualCharReduce}\n    }\n    return (\n        <Fragment>\n            <Button.Ripple className='mb-1' color='primary' tag={Link} to='/allCampaigns' >\n                <div className='d-flex align-items-center'>\n                    <ChevronLeft size={17} style={{marginRight:'5px'}}/>\n                    <span >Back</span>\n                </div>\n            </Button.Ripple>\n            \n            <Form style={{ width: '100%' }} onSubmit={onSubmit} autoComplete=\"off\">\n             <Card>\n                <CardHeader className='border-bottom'>\n                    <CardTitle tag='h4'>Create Campaign</CardTitle>\n                </CardHeader>\n                <CardBody style={{ paddingTop: '15px' }}>\n                    <Row>\n                    <Col sm=\"4\" >\n                        <FormGroup>\n                            <Label for=\"campaignName\">Campaign Name<span style={{ color: 'red' }}>*</span></Label>\n                            <Input type=\"text\"\n                                name=\"campaignName\"\n                                id='campaignName'\n                                value={userInput.campaignName}\n                                onChange={handleChange}\n                                required\n                                maxLength='20'\n                                placeholder=\"name here...\"\n                            />\n                            <p className='text-right' style={userInput.campaignName.length === 20 ? { margin: '2px', color: 'red' } : { margin: '2px', color: 'blue' }}>{20 - userInput.campaignName.length} characters remaining</p>\n                        </FormGroup>\n                    </Col>\n                    {\n                    !userInput.isDynamicCamp && <Col sm='4' className='mt-1 mb-1'>\n                                <CustomInput \n                                    type='switch'\n                                    label='Multi Service Alow?'\n                                    id='isMultiService'\n                                    checked={userInput.isMultiService}\n                                    onChange= {e => {\n                                        if (e.target.checked) {\n                                            setUserInput({ ...userInput, isMultiService: true, serviceId: 0, isSubCategory: false, subTypes: []})\n                                            setIsServiceVisible(false)\n                                        } else {\n                                            setUserInput({ ...userInput, isMultiService: false, multiService: []})\n                                            setIsServiceVisible(true)\n                                        }\n                                    }}\n                                />\n                            </Col>\n                    }\n                     {\n                        isServiceVisible && <Col sm=\"4\" >\n                        <FormGroup>\n                            <Label for=\"serviceId\">Service Type<span style={{ color: 'red' }}>*</span></Label>\n                            <Select\n                                ref={serviceRef}\n                                theme={selectThemeColors}\n                                maxMenuHeight={200}\n                                className='react-select'\n                                classNamePrefix='select'\n                                // value={{ value: merchantid.merchantid, label: merchantid.businessname ? merchantid.businessname : 'select a business'}}\n                                onChange={(selected) => {\n                                    setUserInput({ ...userInput, serviceId: selected.value.id})\n                                    setSubtypes(selected.value.subTypes)\n                                }}\n                                options={serviceList?.map(d => { return {value: {id: d.serviceId, subTypes: d.subTypes}, label: d.serviceKeyword} })}\n                                isLoading={serviceList.length === 0}\n                            />\n                              <Input\n                                required\n                                style={{\n                                    opacity: 0,\n                                    width: \"100%\",\n                                    height: 0\n                                    // position: \"absolute\"\n                                }}\n                                onFocus={e => serviceRef.current.select.focus()}\n                                value={userInput.serviceId || ''}\n                                onChange={e => ''}\n                            />\n                        </FormGroup>\n                    </Col>\n                     }\n                     {\n                        isServiceVisible && <Col sm='4' className='mt-1 mb-1'>\n                        <CustomInput \n                           type='switch'\n                           label='Allow Subtype?'\n                           id='isSubcategory'\n                           checked={userInput.isSubCategory}\n                           onChange= {e => {\n                               if (e.target.checked) {\n                                   setUserInput({ ...userInput, isSubCategory: true})\n                               } else {\n                                   setUserInput({ ...userInput, isSubCategory: false, subTypes: []})\n                               }\n                           }}\n                        />\n                    </Col>\n                     }\n                     {\n                        (isServiceVisible && userInput.isSubCategory) && <Col sm=\"4\" >\n                         <FormGroup>\n                            <Label for=\"max_age\">Subtypes<span style={{ color: 'red' }}>*</span></Label>\n                                <Select\n                                theme={selectThemeColors}\n                                isClearable={true}\n                                maxMenuHeight={200}\n                                className='react-select'\n                                classNamePrefix='select'\n                                menuPlacement='auto'\n                                isMulti\n                                onChange={ e => {\n                                    const a = e.map(ee => ee.value)\n                                    setUserInput({ ...userInput, subTypes: a })\n                                }}\n                                name='user_os'\n                                isLoading={subTypes?.length === 0}\n                                required\n                                options={ subTypes?.map(o => { return {value: o, label: o} })}\n                            />\n                            </FormGroup> \n                        </Col> \n                     }  \n                     {\n                        userInput.isMultiService && <Col sm=\"4\" >\n                        <FormGroup>\n                            <Label for=\"service id\">Select Services<span style={{ color: 'red' }}>*</span></Label>\n                            <Select\n                                ref={serviceRef}\n                                theme={selectThemeColors}\n                                maxMenuHeight={200}\n                                isClearable={true}\n                                menuPlacement='auto'\n                                isMulti\n                                className='react-select'\n                                classNamePrefix='select'\n                                // value={{ value: merchantid.merchantid, label: merchantid.businessname ? merchantid.businessname : 'select a business'}}\n                                onChange={ e => {\n                                    const a = e.map(ee => ee.value)\n                                    setUserInput({ ...userInput, multiService: a })\n                                }}\n                                options={serviceList?.map(d => { return {value: d.serviceId, label: d.serviceKeyword} })}\n                                isLoading={serviceList.length === 0}\n                            />\n                              <Input\n                                required\n                                style={{\n                                    opacity: 0,\n                                    width: \"100%\",\n                                    height: 0\n                                    // position: \"absolute\"\n                                }}\n                                onFocus={e => serviceRef.current.select.focus()}\n                                value={userInput.multiService || []}\n                                onChange={e => ''}\n                            />\n                        </FormGroup>\n                    </Col>\n                     }\n                     <Col sm='12'></Col>\n                     <Col sm='4' className='mt-1 mb-1'>\n                         <CustomInput \n                            type='switch'\n                            label='Allow Dynamic Campaign?'\n                            id='isDynamicCamp'\n                            onChange= {e => {\n                                if (e.target.checked) {\n                                    setUserInput({ ...userInput, isDynamicCamp: true, isMultiService: true})\n                                    setIsServiceVisible(true)\n                                } else {\n                                    setUserInput({ ...userInput, isDynamicCamp: false, isMultiService: false, isSubCategory: false})\n                                }\n                            }}\n                         />\n                     </Col>\n                     {\n                        userInput.isDynamicCamp && <Col sm=\"4\" >\n                            <FormGroup>\n                                <Label for=\"dynamicCampExpire\">Dynamic Campaign Expiry<span style={{ color: 'red' }}>*</span></Label>\n                                <Input type=\"number\"\n                                    name=\"dynamicCampExpire\"\n                                    id='dynamicCampExpire'\n                                    value={userInput.dynamicCampExpire}\n                                    onChange={handleChange}\n                                    required\n                                    placeholder=\"0\"\n                                />\n                            </FormGroup>\n                        </Col>\n                     }\n                     <Col sm='4' className='mt-1 mb-1'>\n                         <CustomInput \n                            type='switch'\n                            label='Allow SameUser?'\n                            id='isSameUser'\n                            onChange= {e => {\n                                if (e.target.checked) {\n                                    setUserInput({ ...userInput, isSameUser: true})\n                                } else {\n                                    setUserInput({ ...userInput, isSameUser: false})\n                                }\n                            }}\n                         />\n                     </Col>\n                    <Col sm='12'></Col>\n                      <Col sm=\"4\" >\n                            <FormGroup>\n                                <Label for=\"Businesses\">Sender Group ({[{ value: 1, label: 'Customer' }, { value: 2, label: 'Agent' }, { value: 3, label: 'Merchant' }, { value: 0, label: 'Any' }].find(item => item.value ===  (serviceLogic.senGroupType ? serviceLogic.senGroupType : 0))?.label}) { (serviceLogic.ruleProvider === 's' || userInput.isMultiService) ? <span className='text-danger'>*</span> : serviceLogic.ruleProvider === 'r' ? ' (optional)' : ''}</Label>\n                                <Select\n                                    ref={groupRef}\n                                    theme={selectThemeColors}\n                                    maxMenuHeight={200}\n                                    className='react-select'\n                                    classNamePrefix='select'\n                                    // value={{ value: merchantid.merchantid, label: merchantid.businessname ? merchantid.businessname : 'select a business'}}\n                                    onChange={(selected) => {\n                                        // setUserInput({ ...userInput,  groupId: selected.value.id, groupType: selected.value.type})\n                                        if (selected) {\n                                            setSenderGroup({ groupId: selected.value.id, groupType: selected.value.type})\n                                        } else {\n                                            setSenderGroup({ groupId: 0, groupType: 0})\n                                        }\n                                    }}\n                                    options={senderGroupList?.map(d => { return {value: {id: d.id, type: d.type}, label: `${d.id}. ${d.group_name}`} })}\n                                    isLoading={groupList.length === 0}\n                                    isClearable={serviceLogic.ruleProvider === 'r'}\n                                />\n                            </FormGroup>\n                            {\n                               (serviceLogic.ruleProvider === 's' || userInput.isMultiService) &&  <Input\n                                 required\n                                 style={{\n                                     opacity: 0,\n                                     width: \"100%\",\n                                     height: 0\n                                     // position: \"absolute\"\n                                 }}\n                                 onFocus={e => groupRef.current.select.focus()}\n                                 value={senderGroup.groupId || ''}\n                                 onChange={e => ''}\n                             />\n                            }\n                            </Col>\n                            <Col sm=\"4\" >\n                                    <FormGroup>\n                                        <Label for=\"Businesses\">Receiver Group ({[{ value: 1, label: 'Customer' }, { value: 2, label: 'Agent' }, { value: 3, label: 'Merchant' }, { value: 0, label: 'Any' }].find(item => item.value ===  (serviceLogic.recGroupType ? serviceLogic.recGroupType : 0))?.label}) { (serviceLogic.ruleProvider === 'r' || userInput.isMultiService) ? <span className='text-danger'>*</span> : serviceLogic.ruleProvider === 's' ? ' (optional)' : ''}</Label>\n                                        <Select\n                                            ref={groupRef1}\n                                            theme={selectThemeColors}\n                                            maxMenuHeight={200}\n                                            className='react-select'\n                                            classNamePrefix='select'\n                                            // value={{ value: merchantid.merchantid, label: merchantid.businessname ? merchantid.businessname : 'select a business'}}\n                                            onChange={(selected) => {\n                                                // setUserInput({ ...userInput,  groupId: selected.value.id, groupType: selected.value.type})\n                                                if (selected) {\n                                                    setReceiverGroup({ groupId: selected.value.id, groupType: selected.value.type})\n                                                } else {\n                                                    setSenderGroup({ groupId: 0, groupType: 0})\n                                                }\n                                            }}\n                                            options={receiverGroupList?.map(d => { return {value: {id: d.id, type: d.type}, label: `${d.id}. ${d.group_name}`} })}\n                                            isLoading={groupList.length === 0}\n                                            isClearable={serviceLogic.ruleProvider === 's'}\n                                        />\n                                    </FormGroup>\n                                    {\n                                        (serviceLogic.ruleProvider === 'r' || userInput.isMultiService) && <Input\n                                            required\n                                            style={{\n                                                opacity: 0,\n                                                width: \"100%\",\n                                                height: 0\n                                                // position: \"absolute\"\n                                            }}\n                                            onFocus={e => groupRef1.current.select.focus()}\n                                            value={receiverGroup.groupId || ''}\n                                            onChange={e => ''}\n                                        />\n                                    }\n                                </Col>\n                      <Col sm=\"4\" >\n                            <FormGroup>\n                                <Label for=\"Businesses\">Campaign Rule<span style={{ color: 'red' }}>*</span></Label>\n                                <Select\n                                    ref={rulRef}\n                                    theme={selectThemeColors}\n                                    maxMenuHeight={200}\n                                    className='react-select'\n                                    classNamePrefix='select'\n                                    // value={{ value: merchantid.merchantid, label: merchantid.businessname ? merchantid.businessname : 'select a business'}}\n                                    onChange={(selected) => {\n                                        setUserInput({ ...userInput, commissionId: selected.value.commissionId, alertDate: selected.value.endDate?.replace(/ .*/g, '')})\n                                        setRuleExpiry({...selected.value})\n                                    }}\n                                    options={realtimeRuleList?.map(d => { return {value: {...d}, label: `${d.commissionId}. ${d.commissionRuleName}`} })}\n                                    isLoading={realtimeRuleList.length === 0}\n                                    menuPlacement='auto'\n                                />\n                            </FormGroup>\n                            <Input\n                                required\n                                style={{\n                                    opacity: 0,\n                                    width: \"100%\",\n                                    height: 0\n                                    // position: \"absolute\"\n                                }}\n                                onFocus={e => rulRef.current.select.focus()}\n                                value={userInput.commissionId || ''}\n                                onChange={e => ''}\n                            />\n                        </Col>\n                        <Col md='4' >\n                            <FormGroup>\n                                <Label for=\"alertDate\">Alert Date</Label>\n                                <Input type=\"date\"\n                                    min={new Date(ruleExpiry.startDate?.replace(/ .*/g, '')).toLocaleDateString('fr-CA')}\n                                    max={new Date(ruleExpiry.endDate?.replace(/ .*/g, '')).toLocaleDateString('fr-CA')}\n                                    name=\"alertDate\"\n                                    id='alertDate'\n                                    value={userInput.alertDate}\n                                    onChange={handleChange}\n                                    required\n                                    placeholder='0'\n                                />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"4\" >\n                            <FormGroup>\n                                <Label for=\"receiver\">Reward Receiver<span style={{ color: 'red' }}>*</span></Label>\n                                <Select\n                                    ref={crRef}\n                                    theme={selectThemeColors}\n                                    maxMenuHeight={200}\n                                    className='react-select'\n                                    classNamePrefix='select'\n                                    onChange={(selected) => {\n                                            setUserInput({...userInput, receiver: selected.value})\n                                    }}\n                                    options={[{value:'s', label:'Sender'}, {value:'r', label:'Receiver'}, {value:'b', label:'both'}]}\n                                />\n                            </FormGroup>\n                            <Input\n                                required\n                                style={{\n                                    opacity: 0,\n                                    width: \"100%\",\n                                    height: 0\n                                    // position: \"absolute\"\n                                }}\n                                onFocus={e => crRef.current.select.focus()}\n                                value={userInput.receiver || ''}\n                                onChange={e => ''}\n                            />\n                        </Col>\n                        <Col sm=\"4\" >\n                            <FormGroup>\n                                <Label for=\"campaignMsg\">Campaign Message<span style={{ color: 'red' }}>*</span></Label>\n                                <Input type=\"textarea\"\n                                    name=\"campaignMsg\"\n                                    id='campaignMsg'\n                                    value={userInput.campaignMsg}\n                                    onChange={handleChange}\n                                    maxLength={(160 - charLimit(userInput.campaignMsg).actualCharReduce).toString()}\n                                    required\n                                    placeholder=\"message here...\"\n                                />\n                                <p className='text-right' style={charLimit(userInput.campaignMsg).charCount === 160 ? { margin: '2px', color: 'red' } : { margin: '2px', color: 'blue' }}>{160 - charLimit(userInput.campaignMsg).charCount} characters remaining</p>\n                            </FormGroup>\n                        </Col>\n                        {\n                            (ruleExpiry.isRxQuota || ruleExpiry.isQuota) && <Col sm=\"4\" >\n                                <FormGroup>\n                                    <Label for=\"qtExpireMsg\">Quota Expire Message</Label>\n                                    <Input type=\"textarea\"\n                                        name=\"qtExpireMsg\"\n                                        id='qtExpireMsg'\n                                        value={userInput.qtExpireMsg}\n                                        onChange={handleChange}\n                                        placeholder=\"message here...\"\n                                        maxLength={(160 - charLimit(userInput.qtExpireMsg).actualCharReduce).toString()}\n                                    />\n                                    <p className='text-right' style={charLimit(userInput.qtExpireMsg).charCount === 160 ? { margin: '2px', color: 'red' } : { margin: '2px', color: 'blue' }}>{160 - charLimit(userInput.qtExpireMsg).charCount} characters remaining</p>\n                                </FormGroup>\n                            </Col>\n                        }\n                        {\n                            (ruleExpiry.isRxQuota || ruleExpiry.isQuota) && <Col sm=\"4\" >\n                                <FormGroup>\n                                    <Label for=\"qtPartialMsg\">Quota Partial Message</Label>\n                                    <Input type=\"textarea\"\n                                        name=\"qtPartialMsg\"\n                                        id='qtPartialMsg'\n                                        value={userInput.qtPartialMsg}\n                                        onChange={handleChange}\n                                        placeholder=\"message here...\"\n                                        maxLength={(160 - charLimit(userInput.qtPartialMsg).actualCharReduce).toString()}\n                                    />\n                                    <p className='text-right' style={charLimit(userInput.qtPartialMsg).charCount === 160 ? { margin: '2px', color: 'red' } : { margin: '2px', color: 'blue' }}>{160 - charLimit(userInput.qtPartialMsg).charCount} characters remaining</p>\n                                </FormGroup>\n                            </Col>\n                        }\n                         {\n                            showHierarchy && <Col sm='4' className='mt-1 mb-1'>\n                            <CustomInput \n                                type='switch'\n                                label='Allow Hierarchy?'\n                                id='isHierarchy'\n                                checked={userInput.isHierarchy}\n                                onChange= {e => {\n                                    if (e.target.checked) {\n                                        setUserInput({ ...userInput, isHierarchy: true})\n                                    } else {\n                                        setUserInput({ ...userInput, isHierarchy: false})\n                                        setHierarchyObj({})\n                                    }\n                                }}\n                            />\n                        </Col>\n                         }\n                            {\n                                userInput.isHierarchy && <Col sm='12'>\n                                <Row>\n                                    <Col sm='12'>\n                                        <h5>Hierarchy List <span style={{color:'#F49D1A', fontSize:'12px'}}>( In total of all hierarchy percentage will not more than 100%! )</span></h5>\n                                    </Col>\n                                    {\n                                       hierarchyList.length === 0 ? <Col sm='4'><Spinner color='blue' /></Col> : hierarchyList.map(hierarchy => <Col sm='4'>\n                                            <FormGroup>\n                                                <Label for=\"hierarchy\">{hierarchy}</Label>\n                                                <Input type=\"number\"\n                                                    name=\"hierarchy\"\n                                                    id='hierarchy'\n                                                    value={hierarchyObj[hierarchy]}\n                                                    onChange={(e) => {\n                                                        let sum = 0\n                                                        for (const key in hierarchyObj) {\n                                                            sum += parseInt(hierarchyObj[key])\n                                                        }\n                                                        sum += parseInt(e.target.value) - hierarchyObj[hierarchy]\n                                                        if (sum > 100) {\n                                                            setHierarchyObj({...hierarchyObj, [hierarchy]: 0})\n                                                            e.target.value = null\n                                                        } else {\n                                                            setHierarchyObj({...hierarchyObj, [hierarchy]: e.target.value})\n                                                        }\n                                                    }}\n                                                    placeholder=\"percentage here...\"\n                                                />\n                                            </FormGroup>\n                                        </Col>)\n                                    }\n                                </Row>\n                            </Col>\n                            }\n                        </Row>\n                        </CardBody>\n                    </Card>\n                    {\n                        ruleExpiry.commissionId && <Card>\n                            <CardBody>\n                            <Row>\n                                <Col sm='12'><h4>Campaign Rule Details</h4></Col>\n                                <Col sm='4'>\n                                    <Card style={{border: '1px solid grey'}}>\n                                        <div className='d-flex justify-content-between border-bottom p-1'>\n                                            <h6 style={{margin:'0'}}>Campaign Rule Name:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.commissionRuleName}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between border-bottom p-1'>\n                                            <h6 style={{margin:'0'}}>Reward Type:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.commissionType}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Reward Condition:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.isPercentage ? 'Percentage' : 'Flat'}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between border-bottom p-1'>\n                                            <h6 style={{margin:'0'}}>Sender Reward:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.snAmount}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between border-bottom p-1'>\n                                            <h6 style={{margin:'0'}}>Receiver Reward:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.rxAmount}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between border-bottom p-1'>\n                                            <h6 style={{margin:'0'}}>Minimum Reward:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.max}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between border-bottom p-1'>\n                                            <h6 style={{margin:'0'}}>Maximum Reward:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.min}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between border-bottom p-1'>\n                                            <h6 style={{margin:'0'}}>Default Campaign Id:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.returnCommissionId}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Is Default?:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.isDefault ? 'True' : 'False'}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Distribute Reward Point?:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.isPoint ? 'True' : 'False'}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Start Date:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry?.startDate ? formatReadableDate(ruleExpiry?.startDate) : 'N/A'}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>End Date:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry?.endDate ? formatReadableDate(ruleExpiry?.endDate) : 'N/A'}</b></h6>\n                                        </div>\n                                    </Card>\n                                </Col>\n                                <Col sm='4'>\n                                    <Card style={{border: '1px solid grey'}}>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Set Recurring Timeline?:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.isCertainTimeline ? 'True' : 'False'}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Recurring Type:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.timelineType === 'w' ? 'Weekly' : 'Monthly' }</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Recurring Type 2:</h6>\n                                            <h6 style={{margin:'0'}}><b>{(ruleExpiry.timelineType === 'w' && ruleExpiry.isTimelineRange) ? 'Day Range' : (ruleExpiry.timelineType === 'w' && !ruleExpiry.isTimelineRange) ? 'Specific Day' : (ruleExpiry.timelineType === 'm' && ruleExpiry.isTimelineRange) ? 'Date Range' : (ruleExpiry.timelineType === 'm' && !ruleExpiry.isTimelineRange) ? 'Specific Date' : ''}</b></h6>\n                                        </div>\n                                    </Card>\n                                    <Card style={{border: '1px solid grey'}}>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Set Campaign Quota?:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.isQuota ? 'True' : 'False'}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Quota Type:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.quotaType === 0 ? 'On Amount' : ruleExpiry.quotaType === 1 ? 'On Transaction Count' : ruleExpiry.quotaType === 2 ? 'Both' : ''}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Set Quota Count:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.quotaCount}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Set Quota Amount Limit:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.quotaAmount}</b></h6>\n                                        </div>\n                                    </Card>\n                                    <Card style={{border: '1px solid grey'}}>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Set Reward Receivers's Quota?:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.isRxQuota ? 'True' : 'False'}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Quota Type:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.rxQuotaType === 0 ? 'On Amount' : ruleExpiry.quotaType === 1 ? 'On Transaction Count' : ruleExpiry.quotaType === 2 ? 'Both' : ''}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Set Quota Count:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.rxQuotaCount}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Set Quota Amount Limit:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.rxQuotaAmount}</b></h6>\n                                        </div>\n                                    </Card>\n                                </Col>\n                                <Col sm='4'>\n                                    <Card style={{border: '1px solid grey'}}>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Is Time?:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.isTime ? 'True' : 'False'}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Start Hour:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.startHour}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>End Hour:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.endHour}</b></h6>\n                                        </div>\n                                    </Card>\n                                    <Card style={{border: '1px solid grey'}}>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Add Transaction Condition?:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.isFinBasedOffer ? 'True' : 'False'}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Define TXN no.:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.offerCount}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Reward Amount:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.offerAmount}</b></h6>\n                                        </div>\n                                    </Card>\n                                    <Card style={{border: '1px solid grey'}}>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Create By:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.createBy}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Create Date:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry?.createDate ? formatReadableDate(ruleExpiry?.createDate) : 'N/A'}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Modify By:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.modifyBy}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Create Date:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry?.modifyDate ? formatReadableDate(ruleExpiry?.modifyDate) : 'N/A'}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Approved By:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry.approvedBy}</b></h6>\n                                        </div>\n                                        <div className='d-flex justify-content-between p-1'>\n                                            <h6 style={{margin:'0'}}>Approve Date:</h6>\n                                            <h6 style={{margin:'0'}}><b>{ruleExpiry?.approveDate ? formatReadableDate(ruleExpiry?.approveDate) : 'N/A'}</b></h6>\n                                        </div>\n                                    </Card>\n                                </Col>\n                                <Col sm='12'>\n                                    <Card style={{border: '1px solid grey'}}>\n                                        <CardHeader>Flexible Rules</CardHeader>\n                                        <CardBody>\n                                        <CommonDataTable column={column} TableData={ruleExpiry.flexibleRules} /> \n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            </Row>\n                        </CardBody>\n                    </Card>\n                    }    \n                        \n                    <Card>\n                        <Col sm=\"12\" className='text-center m-1'>\n                            {\n                                pointRuleloading ? <Button.Ripple color='primary' className='mr-1' disabled>\n                                    <Spinner color='white' size='sm' />\n                                    <span className='ml-50'>Loading...</span>\n                                </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' type=\"submit\">\n                                    <span >Submit</span>\n                                </Button.Ripple>\n                            }\n                        </Col>\n                    </Card>\n                </Form>\n            </Fragment>\n    )\n}\n\nexport default CreateCampaign","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n","\n//Ex-> '1234567891' to '1234 567 891'\nexport const FormatePhoneNo = (phone) => {\n    const phonenoinstring = String(phone)\n    return phonenoinstring.replace(/^(.{4})(.*)(.{3})$/, '$1 $2 $3')\n}\n\nconst options = { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' }\n\nexport const formatReadableDate = (date) => { return (new Date(date)).toLocaleDateString(undefined, options) }\n\nexport const validateEmail = (email) => {\n    return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\n}\n\nexport const thousandSeparator = (x) => { return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") }\n\nexport const handle401 = async (status) => {\n    if (status === 401) {\n        window.location.href = '/Adminlogin'\n        await localStorage.clear()\n    }\n}\n\nexport const ExportCSV = (array, keys, CSVname) => {\n    // ** Downloads CSV\n    // const keys = ['name', 'email', 'mobile']\n    // ** Converts table to CSV\n    function convertArrayOfObjectsToCSV(array) {\n        let result\n        const columnDelimiter = ','\n        const lineDelimiter = '\\n'\n        result = ''\n        result += keys.join(columnDelimiter)\n        result += lineDelimiter\n\n        array.forEach(item => {\n            let ctr = 0\n            keys.forEach(key => {\n                if (ctr > 0) result += columnDelimiter\n                result += item[key]\n                ctr++\n            })\n            result += lineDelimiter\n        })\n        return result\n    }\n    const link = document.createElement('a')\n    let csv = convertArrayOfObjectsToCSV(array)\n    if (csv === null) return\n    const userData = JSON.parse(localStorage.getItem('userData'))\n    const filename = `${CSVname}_${new Date().toISOString()}_${userData['fullname'].replaceAll(/\\s/g, '')}.csv`\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n        csv = `data:text/csv;charset=utf-8,${csv}`\n    }\n\n    link.setAttribute('href', encodeURI(csv))\n    link.setAttribute('download', filename)\n    link.click()\n}","import React, { Fragment, useState, useEffect } from 'react'\nimport {\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft\n} from 'react-feather'\nimport {\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink\n} from 'reactstrap'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\n\nconst CommonDataTable = ({ column, TableData, TableDataLoading }) => {\n    const [currentPage, setCurrentPage] = useState(0)\n\n    // ** Function to handle Pagination\n    const handlePagination = page => {\n        setCurrentPage(page.selected)\n    }\n    // ** Custom Pagination\n    const CustomPagination = () => (\n        <ReactPaginate\n            previousLabel=''\n            nextLabel=''\n            forcePage={currentPage}\n            onPageChange={page => handlePagination(page)}\n            pageCount={TableData.length ? TableData.length / 10 : 1}\n            breakLabel='...'\n            pageRangeDisplayed={2}\n            marginPagesDisplayed={2}\n            activeClassName='active'\n            pageClassName='page-item'\n            breakClassName='page-item'\n            breakLinkClassName='page-link'\n            nextLinkClassName='page-link'\n            nextClassName='page-item next'\n            previousClassName='page-item prev'\n            previousLinkClassName='page-link'\n            pageLinkClassName='page-link'\n            containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        />\n    )\n    return (\n        <Fragment>\n\n            <DataTable\n                noHeader\n                pagination\n                columns={column}\n                paginationPerPage={10}\n                className='react-dataTable'\n                sortIcon={<ChevronDown size={10} />}\n                paginationDefaultPage={currentPage + 1}\n                paginationComponent={CustomPagination}\n                data={TableData}\n                progressPending={TableDataLoading}\n                progressComponent={<Spinner color='primary' />}\n                responsive={true}\n                pointerOnHover\n                highlightOnHover\n                striped\n            />\n             \n        </Fragment>\n    )\n}\n\nexport default CommonDataTable"],"sourceRoot":""}