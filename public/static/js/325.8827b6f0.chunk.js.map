{"version":3,"sources":["assets/images/pages/calendar-illustration.png","views/apps/calendar/Calendar.js","views/apps/calendar/SidebarLeft.js","views/apps/calendar/AddEventSidebar.js","views/apps/calendar/store/actions/index.js","views/apps/calendar/index.js"],"names":["ToastComponent","_ref","title","icon","color","_jsx","Fragment","children","className","_jsxs","Avatar","size","Calendar","props","calendarRef","useRef","store","isRtl","dispatch","calendarsColor","calendarApi","setCalendarApi","handleAddEventSidebar","blankEvent","toggleSidebar","selectEvent","updateEvent","useEffect","current","getApi","calendarOptions","events","length","plugins","interactionPlugin","dayGridPlugin","timeGridPlugin","listPlugin","initialView","headerToolbar","start","end","editable","eventResizableFromStart","dragScroll","dayMaxEvents","navLinks","eventClassNames","_ref2","calendarEvent","event","colorName","_def","extendedProps","calendar","concat","eventClick","_ref3","clickedEvent","customButtons","sidebarToggle","text","Menu","click","dateClick","info","ev","date","eventDrop","_ref4","droppedEvent","toast","success","Check","autoClose","hideProgressBar","closeButton","eventResize","_ref5","resizedEvent","ref","direction","Card","CardBody","FullCalendar","_objectSpread","memo","filters","label","SidebarLeft","updateFilter","updateAllFilters","Button","Ripple","block","onClick","CustomInput","type","id","checked","selectedCalendars","onChange","e","target","map","filter","includes","classnames","_defineProperty","src","illustration","alt","AddEventSidebar","open","refetchEvents","addEvent","removeEvent","selectedEvent","_useForm","useForm","register","errors","handleSubmit","_useState","useState","_useState2","_slicedToArray","url","setUrl","_useState3","_useState4","desc","setDesc","_useState5","_useState6","setTitle","_useState7","_useState8","guests","setGuests","_useState9","_useState10","allDay","setAllDay","_useState11","_useState12","location","setLocation","_useState13","Date","_useState14","endPicker","setEndPicker","_useState15","_useState16","startPicker","setStartPicker","_useState17","value","_useState18","setValue","guestsOptions","avatar","img1","img2","img3","img4","img5","img6","handleUpdateEvent","eventToUpdate","description","updatedEventData","propsToUpdate","extendedPropsToUpdate","existingEvent","getEventById","index","propName","setProp","setDates","setExtendedProp","updateEventInCalendar","handleDeleteEvent","eventId","remove","error","Trash","EventActions","isObjEmpty","outline","CloseBtn","X","Modal","isOpen","toggle","contentClassName","onOpened","onClosed","modalClassName","ModalHeader","close","tag","ModalBody","Form","onSubmit","data","obj","display","undefined","handleAddEvent","FormGroup","Label","for","Input","name","placeholder","innerRef","validate","Select","options","theme","selectThemeColors","classNamePrefix","isClearable","components","Option","_objectWithoutProperties","_excluded","Flatpickr","required","enableTime","dateFormat","inline","isMulti","_toConsumableArray","_excluded2","img","rows","fetchEvents","calendars","axios","get","then","response","getState","post","delete","Business","Holiday","Personal","Family","ETC","CalendarComponent","useDispatch","useSelector","state","addSidebarOpen","setAddSidebarOpen","leftSidebarOpen","setLeftSidebarOpen","_useRTL","useRTL","_useRTL2","val","Row","noGutters","Col","show"],"mappings":"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","file":"static/js/325.8827b6f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/calendar-illustration.42be42ce.png\";","// ** React Import\nimport { useEffect, useRef, memo, Fragment } from 'react'\n\n// ** Full Calendar & it's Plugins\nimport FullCalendar from '@fullcalendar/react'\nimport listPlugin from '@fullcalendar/list'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { toast } from 'react-toastify'\nimport { Card, CardBody } from 'reactstrap'\nimport { Menu, Check } from 'react-feather'\n\n// ** Toast Component\nconst ToastComponent = ({ title, icon, color }) => (\n  <Fragment>\n    <div className='toastify-header pb-0'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color={color} icon={icon} />\n        <h6 className='toast-title'>{title}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst Calendar = props => {\n  // ** Refs\n  const calendarRef = useRef(null)\n\n  // ** Props\n  const {\n    store,\n    isRtl,\n    dispatch,\n    calendarsColor,\n    calendarApi,\n    setCalendarApi,\n    handleAddEventSidebar,\n    blankEvent,\n    toggleSidebar,\n    selectEvent,\n    updateEvent\n  } = props\n\n  // ** UseEffect checks for CalendarAPI Update\n  useEffect(() => {\n    if (calendarApi === null) {\n      setCalendarApi(calendarRef.current.getApi())\n    }\n  }, [calendarApi])\n\n  // ** calendarOptions(Props)\n  const calendarOptions = {\n    events: store.events.length ? store.events : [],\n    plugins: [interactionPlugin, dayGridPlugin, timeGridPlugin, listPlugin],\n    initialView: 'dayGridMonth',\n    headerToolbar: {\n      start: 'sidebarToggle, prev,next, title',\n      end: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\n    },\n    /*\n      Enable dragging and resizing event\n      ? Docs: https://fullcalendar.io/docs/editable\n    */\n    editable: true,\n\n    /*\n      Enable resizing event from start\n      ? Docs: https://fullcalendar.io/docs/eventResizableFromStart\n    */\n    eventResizableFromStart: true,\n\n    /*\n      Automatically scroll the scroll-containers during event drag-and-drop and date selecting\n      ? Docs: https://fullcalendar.io/docs/dragScroll\n    */\n    dragScroll: true,\n\n    /*\n      Max number of events within a given day\n      ? Docs: https://fullcalendar.io/docs/dayMaxEvents\n    */\n    dayMaxEvents: 2,\n\n    /*\n      Determines if day names and week names are clickable\n      ? Docs: https://fullcalendar.io/docs/navLinks\n    */\n    navLinks: true,\n\n    eventClassNames({ event: calendarEvent }) {\n      // eslint-disable-next-line no-underscore-dangle\n      const colorName = calendarsColor[calendarEvent._def.extendedProps.calendar]\n\n      return [\n        // Background Color\n        `bg-light-${colorName}`\n      ]\n    },\n\n    eventClick({ event: clickedEvent }) {\n      dispatch(selectEvent(clickedEvent))\n      handleAddEventSidebar()\n\n      // * Only grab required field otherwise it goes in infinity loop\n      // ! Always grab all fields rendered by form (even if it get `undefined`) otherwise due to Vue3/Composition API you might get: \"object is not extensible\"\n      // event.value = grabEventDataFromEventApi(clickedEvent)\n\n      // eslint-disable-next-line no-use-before-define\n      // isAddNewEventSidebarActive.value = true\n    },\n\n    customButtons: {\n      sidebarToggle: {\n        text: <Menu className='d-xl-none d-block' />,\n        click() {\n          toggleSidebar(true)\n        }\n      }\n    },\n\n    dateClick(info) {\n      const ev = blankEvent\n      ev.start = info.date\n      ev.end = info.date\n      dispatch(selectEvent(ev))\n      handleAddEventSidebar()\n    },\n\n    /*\n      Handle event drop (Also include dragged event)\n      ? Docs: https://fullcalendar.io/docs/eventDrop\n      ? We can use `eventDragStop` but it doesn't return updated event so we have to use `eventDrop` which returns updated event\n    */\n    eventDrop({ event: droppedEvent }) {\n      dispatch(updateEvent(droppedEvent))\n      toast.success(<ToastComponent title='Event Updated' color='success' icon={<Check />} />, {\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeButton: false\n      })\n    },\n\n    /*\n      Handle event resize\n      ? Docs: https://fullcalendar.io/docs/eventResize\n    */\n    eventResize({ event: resizedEvent }) {\n      dispatch(updateEvent(resizedEvent))\n      toast.success(<ToastComponent title='Event Updated' color='success' icon={<Check />} />, {\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeButton: false\n      })\n    },\n\n    ref: calendarRef,\n\n    // Get direction from app state (store)\n    direction: isRtl ? 'rtl' : 'ltr'\n  }\n\n  return (\n    <Card className='shadow-none border-0 mb-0 rounded-0'>\n      <CardBody className='pb-0'>\n        <FullCalendar {...calendarOptions} />{' '}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default memo(Calendar)\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport classnames from 'classnames'\nimport { CardBody, Button, CustomInput } from 'reactstrap'\n\n// ** illustration import\nimport illustration from '@src/assets/images/pages/calendar-illustration.png'\n\n// ** Filters Checkbox Array\nconst filters = [\n  { label: 'Personal', color: 'danger', className: 'custom-control-danger mb-1' },\n  { label: 'Business', color: 'primary', className: 'custom-control-primary mb-1' },\n  { label: 'Family', color: 'warning', className: 'custom-control-warning mb-1' },\n  { label: 'Holiday', color: 'success', className: 'custom-control-success mb-1' },\n  { label: 'ETC', color: 'info', className: 'custom-control-info' }\n]\n\nconst SidebarLeft = props => {\n  // ** Props\n  const { handleAddEventSidebar, toggleSidebar, updateFilter, updateAllFilters, store, dispatch } = props\n\n  // ** Function to handle Add Event Click\n  const handleAddEventClick = () => {\n    toggleSidebar(false)\n    handleAddEventSidebar()\n  }\n\n  return (\n    <Fragment>\n      <div className='sidebar-wrapper'>\n        <CardBody className='card-body d-flex justify-content-center my-sm-0 mb-3'>\n          <Button.Ripple color='primary' block onClick={handleAddEventClick}>\n            <span className='align-middle'>Add Event</span>\n          </Button.Ripple>\n        </CardBody>\n        <CardBody>\n          <h5 className='section-label mb-1'>\n            <span className='align-middle'>Filter</span>\n          </h5>\n          <CustomInput\n            type='checkbox'\n            className='mb-1'\n            label='View All'\n            id='view-all'\n            checked={store.selectedCalendars.length === filters.length}\n            onChange={e => dispatch(updateAllFilters(e.target.checked))}\n          />\n          <div className='calendar-events-filter'>\n            {filters.length &&\n              filters.map(filter => {\n                return (\n                  <CustomInput\n                    type='checkbox'\n                    key={filter.label}\n                    id={filter.label}\n                    label={filter.label}\n                    checked={store.selectedCalendars.includes(filter.label)}\n                    className={classnames({\n                      [filter.className]: filter.className\n                    })}\n                    onChange={e => dispatch(updateFilter(filter.label))}\n                  />\n                )\n              })}\n          </div>\n        </CardBody>\n      </div>\n      <div className='mt-auto'>\n        <img className='img-fluid' src={illustration} alt='illustration' />\n      </div>\n    </Fragment>\n  )\n}\n\nexport default SidebarLeft\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { toast } from 'react-toastify'\nimport Flatpickr from 'react-flatpickr'\nimport { X, Check, Trash } from 'react-feather'\nimport Select, { components } from 'react-select'\nimport { useForm, Controller } from 'react-hook-form'\nimport { Button, Modal, ModalHeader, ModalBody, FormGroup, Label, CustomInput, Input, Form } from 'reactstrap'\n\n// ** Utils\nimport { selectThemeColors, isObjEmpty } from '@utils'\n\n// ** Avatar Images\nimport img1 from '@src/assets/images/avatars/1-small.png'\nimport img2 from '@src/assets/images/avatars/3-small.png'\nimport img3 from '@src/assets/images/avatars/5-small.png'\nimport img4 from '@src/assets/images/avatars/7-small.png'\nimport img5 from '@src/assets/images/avatars/9-small.png'\nimport img6 from '@src/assets/images/avatars/11-small.png'\n\n// ** Styles Imports\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n\n// ** Toast Component\nconst ToastComponent = ({ title, icon, color }) => (\n  <Fragment>\n    <div className='toastify-header pb-0'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color={color} icon={icon} />\n        <h6 className='toast-title'>{title}</h6>\n      </div>\n    </div>\n  </Fragment>\n)\n\nconst AddEventSidebar = props => {\n  // ** Props\n  const {\n    store,\n    dispatch,\n    open,\n    handleAddEventSidebar,\n    calendarsColor,\n    calendarApi,\n    refetchEvents,\n    addEvent,\n    selectEvent,\n    updateEvent,\n    removeEvent\n  } = props\n\n  // ** Vars\n  const selectedEvent = store.selectedEvent\n  const { register, errors, handleSubmit } = useForm()\n\n  // ** States\n  const [url, setUrl] = useState('')\n  const [desc, setDesc] = useState('')\n  const [title, setTitle] = useState('')\n  const [guests, setGuests] = useState({})\n  const [allDay, setAllDay] = useState(false)\n  const [location, setLocation] = useState('')\n  const [endPicker, setEndPicker] = useState(new Date())\n  const [startPicker, setStartPicker] = useState(new Date())\n  const [value, setValue] = useState([{ value: 'Business', label: 'Business', color: 'primary' }])\n\n  // ** Select Options\n  const options = [\n    { value: 'Business', label: 'Business', color: 'primary' },\n    { value: 'Personal', label: 'Personal', color: 'danger' },\n    { value: 'Family', label: 'Family', color: 'warning' },\n    { value: 'Holiday', label: 'Holiday', color: 'success' },\n    { value: 'ETC', label: 'ETC', color: 'info' }\n  ]\n\n  const guestsOptions = [\n    { value: 'Donna Frank', label: 'Donna Frank', avatar: img1 },\n    { value: 'Jane Foster', label: 'Jane Foster', avatar: img2 },\n    { value: 'Gabrielle Robertson', label: 'Gabrielle Robertson', avatar: img3 },\n    { value: 'Lori Spears', label: 'Lori Spears', avatar: img4 },\n    { value: 'Sandy Vega', label: 'Sandy Vega', avatar: img5 },\n    { value: 'Cheryl May', label: 'Cheryl May', avatar: img6 }\n  ]\n\n  // ** Custom select components\n  const OptionComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <span className={`bullet bullet-${data.color} bullet-sm mr-50`}></span>\n        {data.label}\n      </components.Option>\n    )\n  }\n\n  const GuestsComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <div className='d-flex flex-wrap align-items-center'>\n          <Avatar className='my-0 mr-1' size='sm' img={data.avatar} />\n          <div>{data.label}</div>\n        </div>\n      </components.Option>\n    )\n  }\n\n  // ** Adds New Event\n  const handleAddEvent = () => {\n    const obj = {\n      title,\n      start: startPicker,\n      end: endPicker,\n      allDay,\n      display: 'block',\n      extendedProps: {\n        calendar: value[0].label,\n        url: url.length ? url : undefined,\n        guests: guests.length ? guests : undefined,\n        location: location.length ? location : undefined,\n        desc: desc.length ? desc : undefined\n      }\n    }\n    dispatch(addEvent(obj))\n    refetchEvents()\n    handleAddEventSidebar()\n    toast.success(<ToastComponent title='Event Added' color='success' icon={<Check />} />, {\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeButton: false\n    })\n  }\n\n  // ** Reset Input Values on Close\n  const handleResetInputValues = () => {\n    dispatch(selectEvent({}))\n    setTitle('')\n    setAllDay(false)\n    setUrl('')\n    setLocation('')\n    setDesc('')\n    setGuests({})\n    setValue([{ value: 'Business', label: 'Business', color: 'primary' }])\n    setStartPicker(new Date())\n    setEndPicker(new Date())\n  }\n\n  // ** Set sidebar fields\n  const handleSelectedEvent = () => {\n    if (!isObjEmpty(selectedEvent)) {\n      const calendar = selectedEvent.extendedProps.calendar\n\n      const resolveLabel = () => {\n        if (calendar.length) {\n          return { label: calendar, value: calendar, color: calendarsColor[calendar] }\n        } else {\n          return { value: 'Business', label: 'Business', color: 'primary' }\n        }\n      }\n      setTitle(selectedEvent.title || title)\n      setAllDay(selectedEvent.allDay || allDay)\n      setUrl(selectedEvent.url || url)\n      setLocation(selectedEvent.extendedProps.location || location)\n      setDesc(selectedEvent.extendedProps.description || desc)\n      setGuests(selectedEvent.extendedProps.guests || guests)\n      setStartPicker(new Date(selectedEvent.start))\n      setEndPicker(selectedEvent.allDay ? new Date(selectedEvent.start) : new Date(selectedEvent.end))\n      setValue([resolveLabel()])\n    }\n  }\n\n  // ** (UI) updateEventInCalendar\n  const updateEventInCalendar = (updatedEventData, propsToUpdate, extendedPropsToUpdate) => {\n    const existingEvent = calendarApi.getEventById(updatedEventData.id)\n\n    // ** Set event properties except date related\n    // ? Docs: https://fullcalendar.io/docs/Event-setProp\n    // ** dateRelatedProps => ['start', 'end', 'allDay']\n    // ** eslint-disable-next-line no-plusplus\n    for (let index = 0; index < propsToUpdate.length; index++) {\n      const propName = propsToUpdate[index]\n      existingEvent.setProp(propName, updatedEventData[propName])\n    }\n\n    // ** Set date related props\n    // ? Docs: https://fullcalendar.io/docs/Event-setDates\n    existingEvent.setDates(updatedEventData.start, updatedEventData.end, { allDay: updatedEventData.allDay })\n\n    // ** Set event's extendedProps\n    // ? Docs: https://fullcalendar.io/docs/Event-setExtendedProp\n    // ** eslint-disable-next-line no-plusplus\n    for (let index = 0; index < extendedPropsToUpdate.length; index++) {\n      const propName = extendedPropsToUpdate[index]\n      existingEvent.setExtendedProp(propName, updatedEventData.extendedProps[propName])\n    }\n  }\n\n  // ** Updates Event in Store\n  const handleUpdateEvent = () => {\n    const eventToUpdate = {\n      id: selectedEvent.id,\n      title,\n      allDay,\n      start: startPicker,\n      end: endPicker,\n      url,\n      extendedProps: {\n        location,\n        description: desc,\n        guests,\n        calendar: value[0].label\n      }\n    }\n\n    const propsToUpdate = ['id', 'title', 'url']\n    const extendedPropsToUpdate = ['calendar', 'guests', 'location', 'description']\n\n    dispatch(updateEvent(eventToUpdate))\n    updateEventInCalendar(eventToUpdate, propsToUpdate, extendedPropsToUpdate)\n    handleAddEventSidebar()\n    toast.success(<ToastComponent title='Event Updated' color='success' icon={<Check />} />, {\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeButton: false\n    })\n  }\n\n  // ** (UI) removeEventInCalendar\n  const removeEventInCalendar = eventId => {\n    calendarApi.getEventById(eventId).remove()\n  }\n  const handleDeleteEvent = () => {\n    dispatch(removeEvent(selectedEvent.id))\n    removeEventInCalendar(selectedEvent.id)\n    handleAddEventSidebar()\n    toast.error(<ToastComponent title='Event Removed' color='danger' icon={<Trash />} />, {\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeButton: false\n    })\n  }\n\n  // ** Event Action buttons\n  const EventActions = () => {\n    if (isObjEmpty(selectedEvent) || (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)) {\n      return (\n        <Fragment>\n          <Button.Ripple className='mr-1' type='submit' color='primary'>\n            Add\n          </Button.Ripple>\n          <Button.Ripple color='secondary' type='reset' onClick={handleAddEventSidebar} outline>\n            Cancel\n          </Button.Ripple>\n        </Fragment>\n      )\n    } else {\n      return (\n        <Fragment>\n          <Button.Ripple\n            className='mr-1'\n            color='primary'\n            // onClick={handleUpdateEvent}\n          >\n            Update\n          </Button.Ripple>\n          <Button.Ripple color='danger' onClick={handleDeleteEvent} outline>\n            Delete\n          </Button.Ripple>\n        </Fragment>\n      )\n    }\n  }\n\n  // ** Close BTN\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={handleAddEventSidebar} />\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={handleAddEventSidebar}\n      className='sidebar-lg'\n      contentClassName='p-0'\n      onOpened={handleSelectedEvent}\n      onClosed={handleResetInputValues}\n      modalClassName='modal-slide-in event-sidebar'\n    >\n      <ModalHeader className='mb-1' toggle={handleAddEventSidebar} close={CloseBtn} tag='div'>\n        <h5 className='modal-title'>\n          {selectedEvent && selectedEvent.title && selectedEvent.title.length ? 'Update' : 'Add'} Event\n        </h5>\n      </ModalHeader>\n      <ModalBody className='flex-grow-1 pb-sm-0 pb-3'>\n        <Form\n          onSubmit={handleSubmit(data => {\n            if (isObjEmpty(errors)) {\n              if (isObjEmpty(selectedEvent) || (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)) {\n                handleAddEvent()\n              } else {\n                handleUpdateEvent()\n              }\n              handleAddEventSidebar()\n            }\n          })}\n        >\n          <FormGroup>\n            <Label for='title'>\n              Title <span className='text-danger'>*</span>\n            </Label>\n            <Input\n              id='title'\n              name='title'\n              placeholder='Title'\n              value={title}\n              onChange={e => setTitle(e.target.value)}\n              innerRef={register({ register: true, validate: value => value !== '' })}\n              className={classnames({\n                'is-invalid': errors.title\n              })}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='label'>Label</Label>\n            <Select\n              id='label'\n              value={value}\n              options={options}\n              theme={selectThemeColors}\n              className='react-select'\n              classNamePrefix='select'\n              isClearable={false}\n              onChange={data => setValue([data])}\n              components={{\n                Option: OptionComponent\n              }}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='startDate'>Start Date</Label>\n            <Flatpickr\n              required\n              id='startDate'\n              // tag={Flatpickr}\n              name='startDate'\n              className='form-control'\n              onChange={date => setStartPicker(date[0])}\n              value={startPicker}\n              options={{\n                enableTime: allDay === false,\n                dateFormat: 'Y-m-d H:i'\n              }}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='endDate'>End Date</Label>\n            <Flatpickr\n              required\n              id='endDate'\n              // tag={Flatpickr}\n              name='endDate'\n              className='form-control'\n              onChange={date => setEndPicker(date[0])}\n              value={endPicker}\n              options={{\n                enableTime: allDay === false,\n                dateFormat: 'Y-m-d H:i'\n              }}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <CustomInput\n              type='switch'\n              id='allDay'\n              name='customSwitch'\n              label='All Day'\n              checked={allDay}\n              onChange={e => setAllDay(e.target.checked)}\n              inline\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='eventURL'>Event URL</Label>\n            <Input\n              type='url'\n              id='eventURL'\n              value={url}\n              onChange={e => setUrl(e.target.value)}\n              placeholder='https://www.google.com'\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='guests'>Guests</Label>\n            <Select\n              isMulti\n              id='guests'\n              className='react-select'\n              classNamePrefix='select'\n              isClearable={false}\n              options={guestsOptions}\n              theme={selectThemeColors}\n              value={guests.length ? [...guests] : null}\n              onChange={data => setGuests([...data])}\n              components={{\n                Option: GuestsComponent\n              }}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='location'>Location</Label>\n            <Input id='location' value={location} onChange={e => setLocation(e.target.value)} placeholder='Office' />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='description'>Description</Label>\n            <Input\n              type='textarea'\n              name='text'\n              id='description'\n              rows='3'\n              value={desc}\n              onChange={e => setDesc(e.target.value)}\n              placeholder='Description'\n            />\n          </FormGroup>\n          <FormGroup className='d-flex'>\n            <EventActions />\n          </FormGroup>\n        </Form>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default AddEventSidebar\n","import axios from 'axios'\n\n// ** Fetch Events\nexport const fetchEvents = calendars => {\n  return dispatch => {\n    axios.get('/apps/calendar/events', { calendars }).then(response => {\n      dispatch({\n        type: 'FETCH_EVENTS',\n        events: response.data\n      })\n    })\n  }\n}\n\n// ** Add Event\nexport const addEvent = event => {\n  return (dispatch, getState) => {\n    axios.post('/apps/calendar/add-event', { event }).then(() => {\n      dispatch({\n        type: 'ADD_EVENT'\n      })\n      dispatch(fetchEvents(getState().calendar.selectedCalendars))\n    })\n  }\n}\n\n// ** Update Event\nexport const updateEvent = event => {\n  return dispatch => {\n    axios.post('/apps/calendar/update-event', { event }).then(() => {\n      dispatch({\n        type: 'UPDATE_EVENT'\n      })\n    })\n  }\n}\n\n// ** Filter Events\nexport const updateFilter = filter => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: 'UPDATE_FILTERS',\n      filter\n    })\n    dispatch(fetchEvents(getState().calendar.selectedCalendars))\n  }\n}\n\n// ** Add/Remove All Filters\nexport const updateAllFilters = value => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: 'UPDATE_ALL_FILTERS',\n      value\n    })\n    dispatch(fetchEvents(getState().calendar.selectedCalendars))\n  }\n}\n\n// ** remove Event\nexport const removeEvent = id => {\n  return dispatch => {\n    axios.delete('/apps/calendar/remove-event', { id }).then(() => {\n      dispatch({\n        type: 'REMOVE_EVENT'\n      })\n    })\n  }\n}\n\n// ** Select Event (get event data on click)\nexport const selectEvent = event => {\n  return dispatch => {\n    dispatch({\n      type: 'SELECT_EVENT',\n      event\n    })\n  }\n}\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Row, Col } from 'reactstrap'\n\n// ** Calendar App Component Imports\nimport Calendar from './Calendar'\nimport SidebarLeft from './SidebarLeft'\nimport AddEventSidebar from './AddEventSidebar'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  fetchEvents,\n  selectEvent,\n  updateEvent,\n  updateFilter,\n  updateAllFilters,\n  addEvent,\n  removeEvent\n} from './store/actions/index'\n\n// ** Styles\nimport '@styles/react/apps/app-calendar.scss'\n\n// ** CalendarColors\nconst calendarsColor = {\n  Business: 'primary',\n  Holiday: 'success',\n  Personal: 'danger',\n  Family: 'warning',\n  ETC: 'info'\n}\n\nconst CalendarComponent = () => {\n  // ** Variables\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.calendar)\n\n  // ** states\n  const [addSidebarOpen, setAddSidebarOpen] = useState(false),\n    [leftSidebarOpen, setLeftSidebarOpen] = useState(false),\n    [calendarApi, setCalendarApi] = useState(null)\n\n  // ** Hooks\n  const [isRtl, setIsRtl] = useRTL()\n\n  // ** AddEventSidebar Toggle Function\n  const handleAddEventSidebar = () => setAddSidebarOpen(!addSidebarOpen)\n\n  // ** LeftSidebar Toggle Function\n  const toggleSidebar = val => setLeftSidebarOpen(val)\n\n  // ** Blank Event Object\n  const blankEvent = {\n    title: '',\n    start: '',\n    end: '',\n    allDay: false,\n    url: '',\n    extendedProps: {\n      calendar: '',\n      guests: [],\n      location: '',\n      description: ''\n    }\n  }\n\n  // ** refetchEvents\n  const refetchEvents = () => {\n    if (calendarApi !== null) {\n      calendarApi.refetchEvents()\n    }\n  }\n\n  // ** Fetch Events On Mount\n  useEffect(() => {\n    dispatch(fetchEvents(store.selectedCalendars))\n  }, [])\n\n  return (\n    <Fragment>\n      <div className='app-calendar overflow-hidden border'>\n        <Row noGutters>\n          <Col\n            id='app-calendar-sidebar'\n            className={classnames('col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column', {\n              show: leftSidebarOpen\n            })}\n          >\n            <SidebarLeft\n              store={store}\n              dispatch={dispatch}\n              updateFilter={updateFilter}\n              toggleSidebar={toggleSidebar}\n              updateAllFilters={updateAllFilters}\n              handleAddEventSidebar={handleAddEventSidebar}\n            />\n          </Col>\n          <Col className='position-relative'>\n            <Calendar\n              isRtl={isRtl}\n              store={store}\n              dispatch={dispatch}\n              blankEvent={blankEvent}\n              calendarApi={calendarApi}\n              selectEvent={selectEvent}\n              updateEvent={updateEvent}\n              toggleSidebar={toggleSidebar}\n              calendarsColor={calendarsColor}\n              setCalendarApi={setCalendarApi}\n              handleAddEventSidebar={handleAddEventSidebar}\n            />\n          </Col>\n          <div\n            className={classnames('body-content-overlay', {\n              show: leftSidebarOpen === true\n            })}\n            onClick={() => toggleSidebar(false)}\n          ></div>\n        </Row>\n      </div>\n      <AddEventSidebar\n        store={store}\n        dispatch={dispatch}\n        addEvent={addEvent}\n        open={addSidebarOpen}\n        selectEvent={selectEvent}\n        updateEvent={updateEvent}\n        removeEvent={removeEvent}\n        calendarApi={calendarApi}\n        refetchEvents={refetchEvents}\n        calendarsColor={calendarsColor}\n        handleAddEventSidebar={handleAddEventSidebar}\n      />\n    </Fragment>\n  )\n}\n\nexport default CalendarComponent\n"],"sourceRoot":""}