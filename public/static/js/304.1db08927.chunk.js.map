{"version":3,"sources":["views/AdminComponents/RolebasedPermission/pendingView.js","views/AdminComponents/RolebasedPermission/listView.js","views/AdminComponents/RolebasedPermission/pendingViewV2.js","views/AdminComponents/RolebasedPermission/index.js","views/viewhelper.js","views/helper.js","views/tables/data-tables/basic/AdminComponent/ClientSideDataTable.js","views/VendorComponents/ClientSideDataTable.js","views/statusdb.js"],"names":["PendingView","_ref","TableDataLoading","userName","roleList","setRefresh","refresh","localStorage","getItem","_useState","useParams","id","useHistory","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","allMenuList","setallMenuList","_useState9","_useState10","_useState11","_useState12","internalrefresh","setinternalrefresh","_useState13","_useState14","_useState15","role_name","sub_menu_ids","menu_ids","_useState16","console","log","useEffect","setItem","useJwt","roleBasedPending","then","res","data","payload","catch","err","Error","handlePoPupActions","status","Swal","fire","_defineProperty","title","text","icon","allowOutsideClick","allowEscapeKey","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","showLoaderOnConfirm","preConfirm","module_id","action","roleBasedAction","Success","buttonsStyling","isLoading","result","isConfirmed","column","name","minWidth","sortable","selector","item","created_at","formatReadableDate","_jsxs","Badge","color","OperationStatusSet","pill","className","children","_item$module","module","module_name","_item$roles","concat","role_id","roles","row","created_by","_Fragment","_jsx","CheckSquare","size","style","cursor","onClick","XSquare","e","Fragment","CommonDataTable","TableData","ListView","withReactContent","setTableDataLoading","history","selectedMenu","setSelectedMenu","setSelectedRole","approvedList","setApprovedList","userInput","setUserInput","handleSelectedMenu","menuId","firstMenuAssignRoles","map","push","prevUserInput","firstMenuId","length","roleBasedApprovedList","apprvlist","error","Form","onSubmit","preventDefault","response","message","roleBasedUpdate","Card","CardBody","Row","Col","sm","padding","border","display","justifyContent","alignItems","backgroundColor","ChevronRight","Spinner","flexWrap","CustomInput","type","label","inline","checked","includes","onChange","roleId","oldRoleList","prevSelectedRole","_toConsumableArray","index","indexOf","splice","_objectSpread","handleRoleSelection","Button","Ripple","disabled","marginTop","ApproveLoading","RejectLoading","setIsLoading","_useState17","_useState18","otherObj","setotherObj","_useState19","JSON","parse","_useState20","userData","_useState21","_useState22","array","Oobj","moduleRoleMaps","Map","values","prevInput","textAlign","margin","skipMenuIds","RoleBasePermission","Array2D","x","submenu","y","subMenuIDs","apply","setRoleList","ismpLoading","setmpLoading","activeTab","setActiveTab","toggle","tab","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","Promise","all","List","useJwt2","rilacModuleList","workableDataList","stop","CardHeader","CardTitle","tag","Nav","tabs","NavItem","NavLink","active","classnames","TabContent","TabPane","tabId","Skeleton","PendingListViewV2","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","success","options","year","month","day","hour","minute","date","Date","toLocaleDateString","thousandSeparator","toString","replace","handle401","window","location","href","clear","_x","arguments","ExportCSV","CSVname","link","document","createElement","csv","join","forEach","ctr","key","convertArrayOfObjectsToCSV","filename","toISOString","replaceAll","match","setAttribute","encodeURI","click","currentPage","setCurrentPage","DataTable","noHeader","pagination","columns","paginationPerPage","sortIcon","ChevronDown","paginationDefaultPage","paginationComponent","ReactPaginate","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","progressPending","progressComponent","responsive","pointerOnHover","highlightOnHover","striped","_jsx2","voucherstatus","operationstatus","Insert","Update","Delete","INSERT","UPDATE","DELETE","StatusSet","statusid","VoucherStatusSet"],"mappings":"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","file":"static/js/304.1db08927.chunk.js","sourcesContent":["import useJwt from '@src/auth/jwt/useJwt'\nimport React, { Fragment, useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { Badge, Button, Card, CardBody, CardHeader, CardTitle, Col, CustomInput, Form, FormGroup, Input, Label, Row, Spinner } from 'reactstrap'\nimport { Error, Success } from '../../viewhelper'\nimport { CheckSquare, ChevronLeft, XSquare } from 'react-feather'\nimport CommonDataTable from '../../tables/data-tables/basic/AdminComponent/ClientSideDataTable'\nimport { formatReadableDate } from '../../helper'\nimport Swal from 'sweetalert2'\nimport { OperationStatusSet } from '../../statusdb'\n\nconst PendingView = ({TableDataLoading, roleList, setRefresh, refresh}) => {\n    const userName = localStorage.getItem('username')\n    const { id } = useParams()\n    const history = useHistory()\n    const [featureIDs, setFeatureIDs] = useState([])\n    const [sub_menu_ids, setSubmenuIDs] = useState([])\n    const [addUserloading, setaddUserloading] = useState(false)\n    const [allMenuList, setallMenuList] = useState([])\n    const [isValid, setIsValid] = useState(false)\n    const [internalrefresh, setinternalrefresh] = useState(false)\n    const [othersPendingMenu, setOthersPendingMenu] = useState([])\n    const [userInput, setUserInput] = useState({\n        role_name:\"\",\n        sub_menu_ids:[],\n        menu_ids:[]\n    })\n    console.log(allMenuList)\n    useEffect(() => {\n        localStorage.setItem('useBMStoken', false)\n        localStorage.setItem('usePMStoken', false)\n\n        useJwt.roleBasedPending().then(res => {\n            // setaddUserloading(false)\n            console.log('getAdminMenuSubmenuList', res)\n            setallMenuList(res.data.payload)\n            // Success(res)\n        }).catch(err => {\n            // setaddUserloading(false)\n            Error(err)\n            console.log(err)\n        })\n    }, [])\n    const handlePoPupActions = (id, status) => {\n        return Swal.fire({\n            title: `Are you sure?`,\n            text: `You won't be able to revert this`,\n            icon: 'warning',\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n            showCancelButton: true,\n            confirmButtonText: 'Yes',\n            customClass: {\n                confirmButton: 'btn btn-primary',\n                cancelButton: 'btn btn-danger ml-1'\n            },\n            showLoaderOnConfirm: true,\n            preConfirm: () => {\n                const data = {\n                    module_id:id,\n                    action:status\n                }\n                console.log(data)\n                return useJwt.roleBasedAction(data).then(res => {\n                    Success(res)\n                    console.log(res)\n                    //setOthersPendingMenu(othersPendingMenu.filter(x => x.id !== id))\n                    setinternalrefresh(!internalrefresh)\n                    // setReset(!reset)\n                }).catch(err => {\n                    console.log(err)\n                    Error(err)\n                })\n            },\n            buttonsStyling: false,\n            allowOutsideClick: () => !Swal.isLoading()\n        }).then(function (result) {\n            if (result.isConfirmed) {\n            }\n        })\n    }\n    const column = [\n\n        {\n            name: 'Created By',\n            minWidth: '100px',\n            sortable: true,\n            selector: 'created_by'\n        },\n        {\n            name: 'Created At',\n            minWidth: '250px',\n            sortable: true,\n            selector: (item) => {\n                return item.created_at ? formatReadableDate(item.created_at) : null\n            }\n        },\n        {\n            name: 'Operation',\n            minWidth: '100px',\n            sortable: true,\n            selector: (item) => <Badge color={OperationStatusSet(item['action']).color} pill className='px-1'> {OperationStatusSet(item['action']).title} </Badge>\n        },\n        {\n            name: 'Module Name',\n            minWidth: '200px',\n            sortable: true,\n            selector: item => {\n                return item.module?.module_name\n            }\n        },\n        {\n            name: 'Role Name',\n            minWidth: '150px',\n            sortable: true,\n            selector: item => {\n                return `${item.role_id}-${item.roles?.role_name}`\n            }\n        },\n        {\n            name: 'Action',\n            minWidth: '150px',\n            // sortable: true,\n            selector: row => {\n                return row.created_by === userName ? 'Pending' : <>\n                        <span title=\"Approve\">\n                        <CheckSquare size={15}\n                            color='teal'\n                            style={{ cursor: 'pointer' }}\n                            // onClick={(e) => handlePoPupActions(row.id, 'Do you want to approve?', 1)}\n                            onClick={() => {\n                                handlePoPupActions(row.module_id, 'approve')\n                            }}\n                        />\n                    </span>&nbsp;&nbsp;\n                    <span title=\"Reject\">\n                        <XSquare size={15}\n                            color='red'\n                            style={{ cursor: 'pointer' }}\n                            // onClick={(e) => handlePoPupActions(row.id, 'Do you want to reject?', 2)}\n                            onClick={(e) => {\n                                handlePoPupActions(row.module_id, 'reject')\n                            }}\n                        />\n                    </span>\n                </>\n            }\n        }\n    ]\n\n    return (\n        <Fragment>\n            <CommonDataTable column={column} TableData={allMenuList} TableDataLoading={TableDataLoading}></CommonDataTable>\n        </Fragment>\n    )\n}\n\nexport default PendingView","import useJwt from '@src/auth/jwt/useJwt'\nimport React, { Fragment, useState, useEffect  } from 'react'\nimport { ChevronRight } from 'react-feather'\nimport { Card, CardBody, Col, CustomInput, Row, Spinner, Button, Form } from 'reactstrap'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport { Error, Success } from '../../viewhelper'\nconst MySwal = withReactContent(Swal)\n\nconst ListView = ({ TableDataLoading, setTableDataLoading, roleList, history, setRefresh, refresh, allMenuList }) => {\n    const [selectedMenu, setSelectedMenu] = useState(null)\n    const [selectedRole, setSelectedRole] = useState([])\n    const [approvedList, setApprovedList] = useState([])\n    const [oldassignrolelist, setoldassignrolelist] = useState([])\n    const [userInput, setUserInput] = useState(\n        {\n            module_id: '',\n            role_id: []\n        }\n    )\n\n    const handleSelectedMenu = (menuId) => {\n        const firstMenuAssignRoles = []\n        setSelectedMenu(menuId)\n        approvedList.map(item => {\n            if (item['module_id'] === menuId) {\n                firstMenuAssignRoles.push(item['role_id'])\n            }\n        })\n        setUserInput(prevUserInput => ({\n            module_id: menuId,\n            role_id: firstMenuAssignRoles\n        }))\n\n    }\n\n    useEffect(() => {\n\n        let firstMenuId = 0\n\n        if (allMenuList.length) {\n            firstMenuId = allMenuList[0]['id']\n            console.log('firstMenuId ', firstMenuId)\n            handleSelectedMenu(firstMenuId)\n        }\n        console.log(' allMenuList ', allMenuList.length)\n\n   }, [allMenuList])\n\n\n    useEffect(() => {\n\n        let firstMenuId = 0\n        const firstMenuAssignRoles = []\n\n        if (allMenuList.length) {\n            firstMenuId = allMenuList[0]['id']\n            console.log('firstMenuId ', firstMenuId)\n        }\n        console.log(' allMenuList ', allMenuList.length)\n\n       useJwt.roleBasedApprovedList()\n           .then(res => {\n              const apprvlist = res.data.payload\n               setApprovedList(apprvlist)\n               console.log('res ', res.data)\n\n               setSelectedMenu(firstMenuId)\n               apprvlist.map(item => {\n                   if (item['module_id'] === firstMenuId) {\n                       firstMenuAssignRoles.push(item['role_id'])\n                   }\n               })\n               setUserInput(prevUserInput => ({\n                   module_id: firstMenuId,\n                   role_id: firstMenuAssignRoles\n               }))\n               \n           })\n           .catch(err => {\n               console.error(err)\n           })\n   }, [allMenuList, refresh])\n\n\n    const handleRoleSelection = (roleId) => {\n        console.log('roleId ', roleId)\n        const oldRoleList = userInput.role_id\n        setSelectedRole(prevSelectedRole => [...prevSelectedRole, roleId])\n\n        const index = oldRoleList.indexOf(roleId)\n        if (index > -1) { // only splice array when item is found\n            oldRoleList.splice(index, 1) // 2nd parameter means remove one item only\n        } else {\n            oldRoleList.push(roleId)\n        }\n\n        setUserInput(prevUserInput => ({\n            ...prevUserInput,\n            role_id: [...oldRoleList]\n        }))\n    }\n    const handleUpdate = (e) => {\n        e.preventDefault()\n        if (userInput.module_id === '') {\n            Error({response: {status: 400, data:{ message: \"Please select a module.\"}}})\n            return 0\n        }\n        if (userInput.role_id.length === 0) {\n            Error({response: {status: 400, data:{ message: \"Please select a role.\"}}})\n            return 0\n        }\n        setTableDataLoading(true)\n        useJwt.roleBasedUpdate(userInput).then((res) => {\n            setTableDataLoading(false)\n            Success(res)\n            // setSelectedRole([])\n            // setUserInput({\n            //     module_id: '',\n            //     role_id: []\n            // })\n            // setSelectedMenu(null)\n            setRefresh(!refresh)\n\n        }).catch((error) => {\n            setTableDataLoading(false)\n            Error(error)\n            console.log(error.response)\n        })\n\n    }\n\n    console.log('userInput ', userInput)\n\n    return (\n        <Fragment>\n            <Form onSubmit={handleUpdate} >\n                <Card>\n                    <CardBody>\n                        <Row>\n                            <Col sm='6' style={{ padding: '20px 30px' }}>\n                                {\n                                    allMenuList?.length !== 0 ? allMenuList?.map(item => <div key={item.id} style={{ padding: '20px', border: '1px solid #B2BEB5', display: 'flex', justifyContent: 'space-between', alignItems: 'center', backgroundColor: selectedMenu === item.id ? '#e1f3ff' : 'transparent', cursor: 'pointer' }}\n                                        onClick={() => handleSelectedMenu(item.id)}\n                                    >\n                                        <h5 className='m-0'>{item?.name}</h5>\n                                        <ChevronRight />\n                                    </div>) : <Spinner />\n                                }\n                            </Col>\n                            <Col sm='6' style={{ padding: '20px 30px 0 0px' }}>\n                                <div style={{ display: 'flex', flexWrap: 'wrap', padding: '20px', border: '1px solid #B2BEB5' }}>\n                                    {\n                                        roleList.length !== 0 ? roleList.map(item => <div key={item.id} style={{cursor: 'pointer'}}>\n                                            <CustomInput\n                                                className='mr-3'\n                                                type='checkbox'\n                                                id={`id${item.id}`}\n                                                label={item.role_name}\n                                                inline\n                                                checked = {userInput.role_id.includes(item.id)}\n                                                onChange={() => handleRoleSelection(item.id)}\n                                            />\n                                        </div>) : <Spinner />\n                                    }\n                                </div>\n                            </Col>\n                            <Col sm=\"12\" className='text-right'>\n                                {\n                                    TableDataLoading ? <Button.Ripple color='primary' className='mr-1' disabled style={{ marginTop: '25px' }}>\n                                        <Spinner color='white' size='sm' />\n                                        <span className='ml-50'>Loading...</span>\n                                    </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' type=\"submit\" style={{ marginTop: '25px' }}>\n                                        <span >Update</span>\n                                    </Button.Ripple>\n                                }\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Form>\n        </Fragment>\n    )\n}\n\nexport default ListView","import useJwt from '@src/auth/jwt/useJwt'\nimport React, { Fragment, useState, useEffect  } from 'react'\nimport { ChevronRight } from 'react-feather'\nimport { Card, CardBody, Col, CustomInput, Row, Spinner, Button, Form } from 'reactstrap'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport { Error, Success } from '../../viewhelper'\nconst MySwal = withReactContent(Swal)\n\nconst ListView = ({ TableDataLoading, setTableDataLoading, roleList, history, setRefresh, refresh }) => {\n    const [selectedMenu, setSelectedMenu] = useState(null)\n    const [selectedRole, setSelectedRole] = useState([])\n    const [approvedList, setApprovedList] = useState([])\n    const [oldassignrolelist, setoldassignrolelist] = useState([])\n    const [allMenuList, setallMenuList] = useState([])\n    const [ApproveLoading, setApproveLoading] = useState(false)\n    const [RejectLoading, setRejectLoading] = useState(false)\n    const [isLoading, setIsLoading] = useState(true)\n    const [otherObj, setotherObj] = useState({\n        created_by: \"\",\n        created_at: null\n    })\n    const [userData, setUserData] = useState(JSON.parse(localStorage.getItem('userData')))\n\n    const [userInput, setUserInput] = useState(\n        {\n            module_id: '',\n            role_id: []\n        }\n    )\n\n    const handlePoPupActions = (id, status) => {\n        return Swal.fire({\n            title: `Are you sure?`,\n            text: `You won't be able to revert this`,\n            icon: 'warning',\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n            showCancelButton: true,\n            confirmButtonText: 'Yes',\n            customClass: {\n                confirmButton: 'btn btn-primary',\n                cancelButton: 'btn btn-danger ml-1'\n            },\n            showLoaderOnConfirm: true,\n            preConfirm: () => {\n                const data = {\n                    module_id:id,\n                    action:status\n                }\n                // if (status === 'approve') {\n                //     //setApproveLoading(true)\n\n                // } else {\n                //     //setRejectLoading(true)\n                // }\n\n                return useJwt.roleBasedAction(data).then(res => {\n                    Success(res)\n                    console.log(res)\n                    //setOthersPendingMenu(othersPendingMenu.filter(x => x.id !== id))\n                    setRefresh(!refresh)\n                    // setReset(!reset)\n\n                }).catch(err => {\n                    \n                    console.log(err)\n                    Error(err)\n                })\n            },\n            buttonsStyling: false,\n            allowOutsideClick: () => !Swal.isLoading()\n        }).then(function (result) {\n            if (result.isConfirmed) {\n            }\n        })\n    }\n    const handleSelectedMenu = (menuId) => {\n        console.log('call handleSelectedMenu ')\n        const firstMenuAssignRoles = [], Oobj = { created_by: \"\", created_at: null }\n        setSelectedMenu(menuId)\n        console.log('approvedList approvedList ', approvedList)\n        approvedList.map(item => {\n            if (item['module_id'] === menuId) {\n                firstMenuAssignRoles.push(item['role_id'])\n                Oobj['created_by'] = item['created_by']\n                Oobj['created_at'] = item['created_at']\n            }\n        })\n        setUserInput(prevUserInput => ({\n            module_id: menuId,\n            role_id: firstMenuAssignRoles\n        }))\n        setotherObj(Oobj)\n\n    }\n    useEffect(() => {\n        localStorage.setItem('useBMStoken', false)\n        localStorage.setItem('usePMStoken', false)\n        setIsLoading(true)\n        useJwt.roleBasedPending().then(res => {\n            // setaddUserloading(false)\n            console.log('getAdminMenuSubmenuList', res)\n            const array = res.data.payload, Oobj = { created_by: \"\", created_at: null }\n            const arrayUniqueByKey = [...new Map(array.map(item => [item['module_id'], item])).values()]\n\n            const moduleRoleMaps = arrayUniqueByKey.map(item => {\n                return {\n                    id: item['module_id'],\n                    name: item['module']['module_name']\n                }\n            })\n            setallMenuList(prevInput => (moduleRoleMaps))\n            setApprovedList(prevInput => (array))\n\n            if (moduleRoleMaps.length) {\n                const firstMenuAssignRoles = [], menuId = moduleRoleMaps[0]['id']\n                setSelectedMenu(menuId)\n                console.log('approvedList approvedList ', approvedList)\n                array.map(item => {\n                    if (item['module_id'] === menuId) {\n                        firstMenuAssignRoles.push(item['role_id'])\n                        Oobj['created_by'] = item['created_by']\n                        Oobj['created_at'] = item['created_at']\n                    }\n                })\n                setUserInput(prevUserInput => ({\n                    module_id: menuId,\n                    role_id: firstMenuAssignRoles\n                }))\n\n                setotherObj(Oobj)\n            }\n            \n            setIsLoading(false)\n        }).catch(err => {\n            setIsLoading(false)\n            Error(err)\n            console.log(err)\n        })\n    }, [refresh])\n\n    const handleRoleSelection = (roleId) => {\n        setSelectedRole(prevSelectedRole => [...prevSelectedRole, roleId])\n\n        setUserInput(prevUserInput => ({\n            ...prevUserInput,\n            role_id: [...prevUserInput.role_id, roleId]\n        }))\n    }\n\n    return (\n        <Fragment>\n            <Form  >\n                <Card>\n                    <CardBody>\n                        {\n                            !isLoading && !allMenuList.length ? null : <Fragment>\n\n                                <Row>\n                                    <Col sm='6' style={{ padding: '20px 30px' }}>\n                                        {\n                                            allMenuList?.length !== 0 ? allMenuList?.map(item => <div key={item.id} style={{ padding: '20px', border: '1px solid #B2BEB5', display: 'flex', justifyContent: 'space-between', alignItems: 'center', backgroundColor: selectedMenu === item.id ? '#e1f3ff' : 'transparent', cursor: 'pointer' }}\n                                                onClick={() => handleSelectedMenu(item.id)}\n                                            >\n                                                <h5 className='m-0'>{item?.name}</h5>\n                                                <ChevronRight />\n                                            </div>) : <Spinner />\n                                        }\n                                    </Col>\n                                    <Col sm='6' style={{ padding: '20px 30px 0 0px' }}>\n                                        <div style={{flexWrap: 'wrap', padding: '20px', border: '1px solid #B2BEB5' }}>\n                                      \n                                        <div style={{textAlign: 'right'}}>\n                                            <p style={{margin: 0}}><b>Created By:</b> {otherObj.created_by}</p>\n                                            <p><b>Created At:</b> {otherObj.created_at}</p>\n                                        </div>\n\n                                            <div>\n                                            {\n                                                roleList.length !== 0 ? roleList.map(item => <div>\n                                                    <CustomInput\n                                                        className='mr-3'\n                                                        type='checkbox'\n                                                        id={`id${item.id}`}\n                                                        label={item.role_name}\n                                                        inline\n                                                        checked = {userInput.role_id.includes(item.id)}\n                                                        onChange={() => handleRoleSelection(item.id)}\n                                                        disabled = {true}\n                                                    />\n                                                </div>) : <Spinner />\n                                            }\n                                            </div>\n                                        </div>\n                                    </Col>\n\n                                    {\n                                        otherObj.created_by !== userData['username'] ? <Col sm=\"12\" className='text-right'>\n                                        {\n                                            ApproveLoading ? <Button.Ripple color='primary' className='mr-1' disabled style={{ marginTop: '25px' }}>\n                                                <Spinner color='white' size='sm' />\n                                                <span className='ml-50'>Loading...</span>\n                                            </Button.Ripple> : <Button.Ripple disabled = { ApproveLoading || RejectLoading } className='ml-2' color='primary' onClick={() => { handlePoPupActions(selectedMenu, 'approve') }} style={{ marginTop: '25px' }}>\n                                                <span >Approve</span>\n                                            </Button.Ripple>\n                                            \n                                        }\n\n                                        {\n                                            RejectLoading ? <Button.Ripple color='danger' className='mr-1' disabled style={{ marginTop: '25px' }}>\n                                                <Spinner color='white' size='sm' />\n                                                <span className='ml-50'>Loading...</span>\n                                            </Button.Ripple> : <Button.Ripple disabled = { ApproveLoading || RejectLoading } className='ml-2' color='danger'  onClick={(e) => { handlePoPupActions(selectedMenu, 'reject') }} style={{ marginTop: '25px' }}>\n                                                <span >Reject</span>\n                                            </Button.Ripple>\n                                            \n                                        }\n                                    </Col> : null\n                                    }\n                                    \n                                </Row>\n\n                            </Fragment>\n                        }\n                       \n\n                    </CardBody>\n                </Card>\n            </Form>\n        </Fragment>\n    )\n}\n\nexport default ListView","import React, { Fragment, useEffect, useState } from 'react'\nimport { ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft } from 'react-feather'\nimport { Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput } from 'reactstrap'\nimport classnames from 'classnames'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport useJwt2 from '@src/auth/jwt/useJwt2'\nimport { Error, Success, ErrorMessage } from '../../viewhelper'\nimport { useHistory, Link } from 'react-router-dom'\nimport { Skeleton } from 'antd'\nimport ListView from './listView'\nimport OtherPending from './pendingView'\nimport ApprovedList from './approvedList'\nimport PendingListViewV2 from './pendingViewV2'\n\nconst skipMenuIds = []\n\nconst RoleBasePermission = () => {\n\n    const AssignedMenus = JSON.parse(localStorage.getItem('AssignedMenus')) || []\n    const Array2D = AssignedMenus.map(x => x.submenu.map(y => y.id))\n    const subMenuIDs = [].concat(...Array2D)\n    const history = useHistory()\n    const [allMenuList, setallMenuList] = useState([])\n    const [roleList, setRoleList] = useState([])\n    const [pendingRoleList, setPendingRoleList] = useState([])\n    const [mypendingRoleList, setMyPendingRoleList] = useState([]) \n    const [TableDataLoading, setTableDataLoading] = useState(true)\n    const [ismpLoading, setmpLoading] = useState(true)\n\n    const [refresh, setRefresh] = useState(false)\n    const [activeTab, setActiveTab] = useState('1')\n\n    const toggle = tab => {\n        if (activeTab !== tab) setActiveTab(tab)\n    }\n\n    useEffect(async() => {\n        localStorage.setItem('useBMStoken', false) //for token management\n        localStorage.setItem('usePMStoken', false) //for token management\n        \n        await Promise.all([\n            useJwt.roleList().then(res => {\n                console.log('roleList', res.data.payload)\n                setRoleList(res.data.payload.List)\n                setTableDataLoading(false)\n            }).catch(err => {\n                Error(err)\n                console.log(err)\n                setTableDataLoading(false)\n            }),\n            useJwt2.rilacModuleList().then(res => {\n                // setaddUserloading(false)\n                const workableDataList = []\n                console.log('getAdminMenuSubmenuList', res)\n                res.data.payload.map(item => {\n                    if (!skipMenuIds.includes(item['id'])) {\n                        workableDataList.push(item)\n                    }\n                })\n                setallMenuList(workableDataList)\n                // Success(res)\n            }).catch(err => {\n                // setaddUserloading(false)\n                Error(err)\n                console.log(err)\n            })\n\n        ])\n        setmpLoading(false)\n\n    }, [])\n\n    return (\n        <Fragment>\n        <Card>\n        <CardHeader className='border-bottom'>\n            <CardTitle tag='h4'>Role Based Permission</CardTitle>\n        </CardHeader>\n            <CardBody>\n                <Nav tabs>\n                    {/* <NavItem>\n                        <NavLink\n                            className={classnames({ active: activeTab === '1' })}\n                            onClick={() => { toggle('1') }}\n                        > Approved List\n                        </NavLink>\n                    </NavItem> */}\n                    {subMenuIDs.includes(72) && <NavItem>\n                       <NavLink active={activeTab === '1'} onClick={() => toggle('1')}>\n                       <span className='align-middle d-none d-sm-block'>Permission</span>\n                       </NavLink>\n                   </NavItem>}\n                    {subMenuIDs.includes(72) && <NavItem>\n                        <NavLink\n                            className={classnames({ active: activeTab === '2' })}\n                            onClick={() => { toggle('2') }}\n                        > Pending\n                        </NavLink>\n                    </NavItem>}\n                </Nav>\n            </CardBody>\n        </Card>\n        <Card>\n            <TabContent activeTab={activeTab}>\n                {/* <TabPane tabId=\"1\">\n                    <ApprovedList TableDataLoading={TableDataLoading} setTableDataLoading={setTableDataLoading} roleList={roleList} allMenuList={allMenuList} history={history} setRefresh={setRefresh} refresh={refresh} />\n                </TabPane> */}\n                <TabPane tabId=\"1\">\n                    {\n                        !ismpLoading ? <ListView TableDataLoading={TableDataLoading} setTableDataLoading={setTableDataLoading} roleList={roleList} allMenuList={allMenuList} history={history} setRefresh={setRefresh} refresh={refresh} /> : <Fragment> <Skeleton active /> <Skeleton active /> </Fragment>\n\n                    }\n                </TabPane>\n                <TabPane tabId=\"2\">\n                   {/* <OtherPending TableDataLoading={TableDataLoading} roleList={pendingRoleList} history={history} setRefresh={setRefresh} refresh={refresh}/> */}\n                   {\n                        !ismpLoading ? <PendingListViewV2  TableDataLoading={TableDataLoading} setTableDataLoading={setTableDataLoading} roleList={roleList} allMenuList={allMenuList} history={history} setRefresh={setRefresh} refresh={refresh} /> : <Fragment> <Skeleton active /> <Skeleton active /> </Fragment>\n\n                    }\n\n                </TabPane>\n\n            </TabContent>\n        </Card>\n    </Fragment>\n    )\n}\n\nexport default RoleBasePermission","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n","\n//Ex-> '1234567891' to '1234 567 891'\nexport const FormatePhoneNo = (phone) => {\n    const phonenoinstring = String(phone)\n    return phonenoinstring.replace(/^(.{4})(.*)(.{3})$/, '$1 $2 $3')\n}\n\nconst options = { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' }\n\nexport const formatReadableDate = (date) => { return (new Date(date)).toLocaleDateString(undefined, options) }\n\nexport const validateEmail = (email) => {\n    return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\n}\n\nexport const thousandSeparator = (x) => { return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") }\n\nexport const handle401 = async (status) => {\n    if (status === 401) {\n        window.location.href = '/Adminlogin'\n        await localStorage.clear()\n    }\n}\n\nexport const ExportCSV = (array, keys, CSVname) => {\n    // ** Downloads CSV\n    // const keys = ['name', 'email', 'mobile']\n    // ** Converts table to CSV\n    function convertArrayOfObjectsToCSV(array) {\n        let result\n        const columnDelimiter = ','\n        const lineDelimiter = '\\n'\n        result = ''\n        result += keys.join(columnDelimiter)\n        result += lineDelimiter\n\n        array.forEach(item => {\n            let ctr = 0\n            keys.forEach(key => {\n                if (ctr > 0) result += columnDelimiter\n                result += item[key]\n                ctr++\n            })\n            result += lineDelimiter\n        })\n        return result\n    }\n    const link = document.createElement('a')\n    let csv = convertArrayOfObjectsToCSV(array)\n    if (csv === null) return\n    const userData = JSON.parse(localStorage.getItem('userData'))\n    const filename = `${CSVname}_${new Date().toISOString()}_${userData['fullname'].replaceAll(/\\s/g, '')}.csv`\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n        csv = `data:text/csv;charset=utf-8,${csv}`\n    }\n\n    link.setAttribute('href', encodeURI(csv))\n    link.setAttribute('download', filename)\n    link.click()\n}","import React, { Fragment, useState, useEffect } from 'react'\nimport {\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft\n} from 'react-feather'\nimport {\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink\n} from 'reactstrap'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\n\nconst CommonDataTable = ({ column, TableData, TableDataLoading }) => {\n    const [currentPage, setCurrentPage] = useState(0)\n\n    // ** Function to handle Pagination\n    const handlePagination = page => {\n        setCurrentPage(page.selected)\n    }\n    // ** Custom Pagination\n    const CustomPagination = () => (\n        <ReactPaginate\n            previousLabel=''\n            nextLabel=''\n            forcePage={currentPage}\n            onPageChange={page => handlePagination(page)}\n            pageCount={TableData.length ? TableData.length / 10 : 1}\n            breakLabel='...'\n            pageRangeDisplayed={2}\n            marginPagesDisplayed={2}\n            activeClassName='active'\n            pageClassName='page-item'\n            breakClassName='page-item'\n            breakLinkClassName='page-link'\n            nextLinkClassName='page-link'\n            nextClassName='page-item next'\n            previousClassName='page-item prev'\n            previousLinkClassName='page-link'\n            pageLinkClassName='page-link'\n            containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        />\n    )\n    return (\n        <Fragment>\n\n            <DataTable\n                noHeader\n                pagination\n                columns={column}\n                paginationPerPage={10}\n                className='react-dataTable'\n                sortIcon={<ChevronDown size={10} />}\n                paginationDefaultPage={currentPage + 1}\n                paginationComponent={CustomPagination}\n                data={TableData}\n                progressPending={TableDataLoading}\n                progressComponent={<Spinner color='primary' />}\n                responsive={true}\n                pointerOnHover\n                highlightOnHover\n                striped\n            />\n             \n        </Fragment>\n    )\n}\n\nexport default CommonDataTable","import React, { Fragment, useState, useEffect } from 'react'\nimport {\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft\n} from 'react-feather'\nimport {\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink\n} from 'reactstrap'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\n\nconst CommonDataTable = ({ column, TableData, TableDataLoading }) => {\n    const [currentPage, setCurrentPage] = useState(0)\n\n    // ** Function to handle Pagination\n    const handlePagination = page => {\n        setCurrentPage(page.selected)\n    }\n    // ** Custom Pagination\n    const CustomPagination = () => (\n        <ReactPaginate\n            previousLabel=''\n            nextLabel=''\n            forcePage={currentPage}\n            onPageChange={page => handlePagination(page)}\n            pageCount={TableData.length ? TableData.length / 10 : 1}\n            breakLabel='...'\n            pageRangeDisplayed={2}\n            marginPagesDisplayed={2}\n            activeClassName='active'\n            pageClassName='page-item'\n            breakClassName='page-item'\n            breakLinkClassName='page-link'\n            nextLinkClassName='page-link'\n            nextClassName='page-item next'\n            previousClassName='page-item prev'\n            previousLinkClassName='page-link'\n            pageLinkClassName='page-link'\n            breakClassName='page-item'\n            breakLinkClassName='page-link'\n            containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        />\n    )\n    return (\n        <Fragment>\n            <DataTable\n                noHeader\n                pagination\n                /*selectableRows*/\n                columns={column}\n                paginationPerPage={10}\n                className='react-dataTable'\n                sortIcon={<ChevronDown size={10} />}\n                paginationDefaultPage={currentPage + 1}\n                paginationComponent={CustomPagination}\n                data={TableData}\n                progressPending={TableDataLoading}\n                progressComponent={<Spinner color='primary' />}\n                responsive={true}\n            /*selectableRowsComponent={BootstrapCheckbox}*/\n            />\n        </Fragment>\n    )\n}\n\nexport default CommonDataTable","\nconst status = {\n  1: { title: 'Active', color: 'light-success ' },\n  0: { title: 'Pending', color: 'light-primary' },\n  5: { title: 'Stopped', color: 'light-danger' },\n  11: { title: 'Unpaid', color: 'light-primary' }\n}\n\nconst voucherstatus = {\n  1: { title: 'Active', color: 'light-success ' },\n  0: { title: 'In-Active', color: 'light-primary' }\n}\n\nconst operationstatus = {\n  Insert: { title: 'Insert', color: 'light-success ' },\n  Update: { title: 'Update', color: 'light-primary' },\n  Delete: { title: 'Delete', color: 'light-danger' },\n\n  INSERT: { title: 'INSERT', color: 'light-success ' },\n  UPDATE: { title: 'UPDATE', color: 'light-primary' },\n  DELETE: { title: 'DELETE', color: 'light-danger' }\n}\nexport const StatusSet = (statusid) => {\n   return status[statusid] || { title: 'N/A', color: 'light-danger' }\n}\n\nexport const VoucherStatusSet = (statusid) => {\n  return voucherstatus[statusid] || { title: 'N/A', color: 'light-danger' }\n}\n\nexport const OperationStatusSet = (statusid) => {\n  return operationstatus[statusid] || { title: 'N/A', color: 'light-danger' }\n}"],"sourceRoot":""}