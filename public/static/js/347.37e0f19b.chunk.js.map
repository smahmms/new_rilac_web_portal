{"version":3,"sources":["views/tables/data-tables/basic/AddNewUser.js","views/viewhelper.js","views/tables/data-tables/basic/AddNewModal.js"],"names":["MySwal","withReactContent","Swal","AddNewUser","history","useHistory","_useState","useState","_useState2","_slicedToArray","addUserloading","setaddUserloading","_useState3","_useState4","_useState5","value","label","_useState6","userTypeData","setuserTypeData","_useState7","_useState8","userTitleData","setuserTitleData","_useState9","_useState10","_useState11","_useState12","storeList","setStoreList","_useState13","_useState14","userInput","setUserInput","_useState15","userType","userTitle","storeName","email","_useState16","error","seterror","_useState17","_useState18","_useState19","_useState20","efct","useEffect","useJwt","userRoleList","then","res","userTypeApi","data","payload","map","type","id","statusdesc","catch","err","console","log","response","userTitleList","userTitleApi","storeApi","storeid","storename","onchange","e","chkEmail","test","target","name","_objectSpread","_defineProperty","_jsxs","_Fragment","children","Button","Ripple","className","color","tag","Link","to","_jsx","ChevronLeft","size","Card","CardHeader","CardTitle","CardBody","style","paddingTop","Form","width","onSubmit","preventDefault","username","password","Email","firstName","lastName","StoreName","UserType","UserTitle","fullname","concat","addAdminUser","roleid","emailid","title","fire","icon","text","customClass","confirmButton","setTimeout","replace","autoComplete","Col","sm","FormGroup","Label","for","Input","onChange","required","placeholder","fontSize","Select","theme","selectThemeColors","classNamePrefix","option","_ref3","action","options","isClearable","isLoading","_ref","_ref2","disabled","marginTop","Spinner","Error","status","toast","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","Success","success","AddNewModal","open","handleModal","Date","Picker","setPicker","CloseBtn","X","onClick","Modal","isOpen","toggle","modalClassName","contentClassName","ModalHeader","close","ModalBody","InputGroup","InputGroupAddon","addonType","InputGroupText","User","Briefcase","Mail","Calendar","Flatpickr","date","DollarSign","outline"],"mappings":"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","file":"static/js/347.37e0f19b.chunk.js","sourcesContent":["import { Fragment, useState, forwardRef, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n// ** Table Data & Columns\n//import { data } from '../data'\n\n// ** Add New Modal Component\nimport AddNewModal from './AddNewModal'\nimport Select from 'react-select'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft } from 'react-feather'\nimport { selectThemeColors, transformInToFormObject } from '@utils'\nimport { Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody } from 'reactstrap'\n\nimport { Error, Success } from '../../../viewhelper'\nimport useJwt from '@src/auth/jwt/useJwt'\n\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\n\nconst AddNewUser = () => {\n    const history = useHistory()\n    const [addUserloading, setaddUserloading] = useState(false)\n    const [tableDataLoading, setTDL] = useState(true)\n    const [userTypeData, setuserTypeData] = useState([{ value: \"\", label: \"\" }])\n    const [userTitleData, setuserTitleData] = useState([{ value: \"\", label: \"\" }])\n    const [userList, setUserlist] = useState([])\n    const [storeList, setStoreList] = useState([])\n    const [userInput, setUserInput] = useState({})\n    const [error, seterror] = useState({\n        userType: false,\n        userTitle: false,\n        storeName: false,\n        email: false\n    })\n\n    const [currentPage, setCurrentPage] = useState(0)\n    const [efct, setEfct] = useState(true)\n\n    useEffect(() => {\n        useJwt.userRoleList().then(res => {\n            // console.log(res.data.payload)\n            const userTypeApi = res.data.payload.map(type => {\n                return { value: type.id, label: type.statusdesc }\n            })\n            setuserTypeData(userTypeApi)\n        }).catch(err => {\n            console.log(err.response)\n        })\n        useJwt.userTitleList().then(res => {\n            // console.log('title ', res.data.payload)\n            const userTitleApi = res.data.payload.map(type => {\n                return { value: type.id, label: type.statusdesc }\n            })\n            setuserTitleData(userTitleApi)\n        }).catch(err => {\n            console.log(err.response)\n        })\n       /* useJwt.adminUserList().then(res => {\n            console.log(res.data.payload)\n            setUserlist(res.data.payload)\n            setTDL(false)\n        }).catch(err => {\n            console.log(err)\n        })*/\n        useJwt.storeList().then(res => {\n            // console.log(res.data.payload)\n            const storeApi = res.data.payload.map(type => {\n                return { value: type.storeid, label: type.storename }\n            })\n            setStoreList(storeApi)\n        }).catch(err => {\n            console.log(err)\n        })\n\n    }, [efct])\n\n    const onchange = (e) => {\n        const chkEmail = /\\S+@\\S+\\.\\S+/.test(e.target.value)\n        if (e.target.name === 'Email' && chkEmail) {\n            seterror({...error, email: false}) \n        }\n        setUserInput({ ...userInput, [e.target.name]: e.target.value })\n\n    }\n    const handleUserType = (option, { action }) => {\n        if (action === 'clear') {\n            setUserInput({ ...userInput, UserType: null })\n        } else {\n            seterror({...error, userType: false})\n            setUserInput({ ...userInput, UserType: option.value })\n        }\n    }\n    const handleUserTitle = (option, { action }) => {\n        if (action === 'clear') {\n            setUserInput({ ...userInput, UserTitle: null })\n        } else {\n            seterror({...error, userTitle: false})\n            setUserInput({ ...userInput, UserTitle: option.value })\n        }\n    }\n    const handleStoreName = (option, { action }) => {\n        if (action === 'clear') {\n            setUserInput({ ...userInput, StoreName: null })\n        } else {\n            seterror({...error, storeName: false})\n            setUserInput({ ...userInput, StoreName: option.value })\n        }\n    }\n    const onsubmit = (e) => {\n        e.preventDefault()\n        const { username, password, Email, firstName, lastName, StoreName, UserType, UserTitle } = userInput\n        const chkEmail = /\\S+@\\S+\\.\\S+/.test(Email)\n\n        // console.log(userInput)\n        // setaddUserloading(true)\n        const err = { ...error }\n        !chkEmail ? err.email = true : err.email = false\n        !userInput.UserType ? err.userType = true : err.userType = false\n        !userInput.UserTitle ? err.userTitle = true : err.userTitle = false\n        !userInput.StoreName ? err.storeName = true : err.storeName = false\n        seterror(err)\n        if (!chkEmail) {\n            return \n        }\n        if (!err.userType && !err.userTitle && !err.storeName) {\n            setaddUserloading(true)\n            const fullname = `${firstName} ${lastName}`\n            useJwt.addAdminUser({ fullname, username, password, roleid: UserType, emailid: Email, storeid: StoreName, title: UserTitle }).then(res => {\n                console.log(res)\n                MySwal.fire({\n                    icon: 'success',\n                    title: 'Done!',\n                    text: 'The Staff has been added successfully',\n                    customClass: {\n                        confirmButton: 'btn btn-success'\n                    }\n                })\n                setTimeout(function () { history.replace('/user') }, 1000)\n            }).catch(err => {\n                console.log(err)\n            })\n        }\n    }\n    return (\n        <>\n           <Button.Ripple className='ml-2 mb-2' color='primary' tag={Link} to='/user'>\n                <ChevronLeft size={10} />\n                <span className='align-middle ml-50'>Back</span>\n            </Button.Ripple>\n            <Card>\n                <CardHeader className='border-bottom'>\n                <CardTitle tag='h4'>Add New Staff</CardTitle>\n                </CardHeader>\n                <CardBody style={{ paddingTop: '15px' }}>\n                    <Form className=\"row\" style={{ width: '100%' }} onSubmit={onsubmit} autoComplete=\"off\">\n                        <Col sm=\"3\" >\n                            <FormGroup>\n                                <Label for=\"username\">Username <span style={{ color: 'red' }}>*</span></Label>\n                                <Input type=\"text\" name=\"username\"\n                                    id='username' onChange={onchange} required\n                                    placeholder=\"username\"\n\n                                />\n                            </FormGroup>\n                        </Col>\n\n                        <Col sm=\"3\" >\n                            <FormGroup>\n                                <Label for=\"password\">Password<span style={{ color: 'red' }}>*</span></Label>\n                                <Input type=\"password\" name=\"password\"\n                                    id='password' onChange={onchange} required\n                                    placeholder=\"password\"\n                                />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\" >\n                            <FormGroup>\n                                <Label for=\"firstName\">First Name <span style={{ color: 'red' }}>*</span></Label>\n                                <Input type=\"text\" name=\"firstName\"\n                                    id='firstName' onChange={onchange} required\n                                    placeholder=\"firstName\"\n\n                                />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\" >\n                            <FormGroup>\n                                <Label for=\"lastName\">Last Name <span style={{ color: 'red' }}>*</span></Label>\n                                <Input type=\"text\" name=\"lastName\"\n                                    id='lastName' onChange={onchange} required\n                                    placeholder=\"lastName\"\n\n                                />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\" >\n                            <FormGroup>\n                                <Label for=\"Email\">Email</Label>&nbsp;{error.email && <span style={{ color: 'red', fontSize: '11px' }}> is not valid</span>}\n                                <Input type=\"email\" name=\"Email\"\n                                    id='Email' onChange={onchange}\n                                    placeholder=\"Example@gmail.com\"\n                                />\n                            </FormGroup>\n                        </Col>\n                        {/* <Col sm=\"3\" >\n                            <FormGroup>\n                                <Label for=\"Store\">Store name<span style={{ color: 'red' }}>*</span></Label>\n                                <Input type=\"text\" name=\"StoreName\"\n                                    id='Store' onChange={onchange} required\n                                    placeholder=\"Store name\"\n\n                                />\n                            </FormGroup>\n                        </Col> */}\n\n                        <Col sm=\"3\" >\n                            <FormGroup>\n                                <Label for=\"StoreName\">Store Name<span style={{ color: 'red' }}>*</span></Label>&nbsp;{error.storeName && <span style={{ color: 'red', fontSize: '11px' }}>Required</span>}\n                                <Select\n                                    theme={selectThemeColors}\n                                    className='react-select'\n                                    classNamePrefix='select'\n                                    name=\"StoreName\"\n                                    onChange={handleStoreName}\n                                    options={storeList}\n                                    isClearable\n                                    isLoading={false}\n                                />\n\n                            </FormGroup>\n                        </Col>\n\n                        <Col sm=\"3\" >\n                            <FormGroup>\n                                <Label for=\"UserType\">User Type<span style={{ color: 'red' }}>*</span></Label>&nbsp;{error.userType && <span style={{ color: 'red', fontSize: '11px' }}>Required</span>}\n                                <Select\n                                    theme={selectThemeColors}\n                                    className='react-select'\n                                    classNamePrefix='select'\n                                    name=\"UserType\"\n                                    onChange={handleUserType}\n                                    options={userTypeData}\n                                    isClearable\n                                    isLoading={false}\n                                />\n\n                            </FormGroup>\n                        </Col>\n\n                        <Col sm=\"3\" >\n                            <FormGroup>\n                                <Label for=\"UserTitle\">User Title<span style={{ color: 'red' }}>*</span></Label>&nbsp;{error.userTitle && <span style={{ color: 'red', fontSize: '11px' }}>Required</span>}\n                                <Select\n                                    theme={selectThemeColors}\n                                    className='react-select'\n                                    classNamePrefix='select'\n                                    name=\"UserTitle\"\n                                    onChange={handleUserTitle}\n                                    options={userTitleData}\n                                    isClearable\n                                    isLoading={false}\n                                />\n\n                            </FormGroup>\n                        </Col>\n\n                        <Col sm=\"3\" >\n                            {\n                                addUserloading ? <Button.Ripple color='primary' className='mr-1' disabled style={{ marginTop: '25px' }}>\n                                    <Spinner color='white' size='sm' />\n                                    <span className='ml-50'>Loading...</span>\n                                </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' type=\"submit\" style={{ marginTop: '25px' }}>\n                                    \n                                    <span className='align-middle ml-50'>Submit</span>\n                                </Button.Ripple>\n                            }\n                        </Col>\n                    </Form>\n                </CardBody>\n            </Card>\n        </>\n    )\n}\n\nexport default AddNewUser","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Flatpickr from 'react-flatpickr'\nimport { User, Briefcase, Mail, Calendar, DollarSign, X } from 'react-feather'\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  FormGroup,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  Label\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n\nconst AddNewModal = ({ open, handleModal }) => {\n  // ** State\n  const [Picker, setPicker] = useState(new Date())\n\n  // ** Custom close btn\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={handleModal} />\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={handleModal}\n      className='sidebar-sm'\n      modalClassName='modal-slide-in'\n      contentClassName='pt-0'\n    >\n      <ModalHeader className='mb-3' toggle={handleModal} close={CloseBtn} tag='div'>\n        <h5 className='modal-title'>New Record</h5>\n      </ModalHeader>\n      <ModalBody className='flex-grow-1'>\n        <FormGroup>\n          <Label for='full-name'>Full Name</Label>\n          <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <User size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input id='full-name' placeholder='Bruce Wayne' />\n          </InputGroup>\n        </FormGroup>\n        <FormGroup>\n          <Label for='post'>Post</Label>\n          <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <Briefcase size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input id='post' placeholder='Web Developer' />\n          </InputGroup>\n        </FormGroup>\n        <FormGroup>\n          <Label for='email'>Email</Label>\n          <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <Mail size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input type='email' id='email' placeholder='brucewayne@email.com' />\n          </InputGroup>\n        </FormGroup>\n        <FormGroup>\n          <Label for='joining-date'>Joining Date</Label>\n          <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <Calendar size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Flatpickr className='form-control' id='joining-date' value={Picker} onChange={date => setPicker(date)} />\n          </InputGroup>\n        </FormGroup>\n        <FormGroup className='mb-4'>\n          <Label for='salary'>Salary</Label>\n          <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <DollarSign size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input type='number' id='salary' />\n          </InputGroup>\n        </FormGroup>\n        <Button className='mr-1' color='primary' onClick={handleModal}>\n          Submit\n        </Button>\n        <Button color='secondary' onClick={handleModal} outline>\n          Cancel\n        </Button>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default AddNewModal\n"],"sourceRoot":""}